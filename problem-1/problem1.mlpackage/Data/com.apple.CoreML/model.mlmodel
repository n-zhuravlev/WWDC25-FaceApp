‚

in_image
"ÄÄR
	out_image
"ÄÄ¢≠¢=
#com.github.apple.coremltools.sourcetorch==2.2.0a0+81ea7a4¢-
$com.github.apple.coremltools.version8.3.0¢:
+com.github.apple.coremltools.source_dialectTorchScript≤Øﬂµ›
main´›
,
in_image 



Ä
ÄCoreML6‹
CoreML6„‹	out_imagej
const
input_1_pad_type_0
*(
name 

"
input_1_pad_type_0*
val


"
customn
const
input_1_pad_0


*#
name

"
input_1_pad_0*!
val





t
const!
input_1_strides_0


*'
name

"
input_1_strides_0*
val




x
const#
input_1_dilations_0


*)
name!

"
input_1_dilations_0*
val




a
const
input_1_groups_0
*&
name

"
input_1_groups_0*
val


t
const 
in_image_to_fp16_dtype_0
*.
name&

"
in_image_to_fp16_dtype_0*
val


"
fp16∫
const7
stem_0_weight_to_fp16





*+
name#

"
stem_0_weight_to_fp16*K
valD





*"
@model_path/weights/weight.bin@ì
const#
stem_0_bias_to_fp16



*)
name!

"
stem_0_bias_to_fp16*:
val3



*#
@model_path/weights/weight.bin¿	ñ
cast
x


in_image%
dtype

in_image_to_fp16_dtype_04
in_image_to_fp16 




Ä
Ä*
name

"

cast_109Ì
conv
x

in_image_to_fp16#
weight

stem_0_weight_to_fp16
bias

stem_0_bias_to_fp16 
strides

input_1_strides_0"
pad_type

input_1_pad_type_0
pad

input_1_pad_0$
	dilations

input_1_dilations_0
groups

input_1_groups_05
input_1_cast_fp16 




Ä
Ä*'
name

"
input_1_cast_fp16j
const
input_3_pad_type_0
*(
name 

"
input_3_pad_type_0*
val


"
customn
const
input_3_pad_0


*#
name

"
input_3_pad_0*!
val





t
const!
input_3_strides_0


*'
name

"
input_3_strides_0*
val




x
const#
input_3_dilations_0


*)
name!

"
input_3_dilations_0*
val




a
const
input_3_groups_0
*&
name

"
input_3_groups_0*
val


ª
const7
stem_1_weight_to_fp16


(


*+
name#

"
stem_1_weight_to_fp16*L
valE


(


*#
@model_path/weights/weight.bin¿
ì
const#
stem_1_bias_to_fp16



(*)
name!

"
stem_1_bias_to_fp16*:
val3



(*#
@model_path/weights/weight.bin¿{Ó
conv
x

input_1_cast_fp16#
weight

stem_1_weight_to_fp16
bias

stem_1_bias_to_fp16 
strides

input_3_strides_0"
pad_type

input_3_pad_type_0
pad

input_3_pad_0$
	dilations

input_3_dilations_0
groups

input_3_groups_05
input_3_cast_fp16 



(
Ä
Ä*'
name

"
input_3_cast_fp16j
const
input_5_pad_type_0
*(
name 

"
input_5_pad_type_0*
val


"
customn
const
input_5_pad_0


*#
name

"
input_5_pad_0*!
val





t
const!
input_5_strides_0


*'
name

"
input_5_strides_0*
val




x
const#
input_5_dilations_0


*)
name!

"
input_5_dilations_0*
val




a
const
input_5_groups_0
*&
name

"
input_5_groups_0*
val


’
constD
"encoder_0_0_block_0_weight_to_fp16


@
(

*8
name0
(
&"$
"encoder_0_0_block_0_weight_to_fp16*L
valE


@
(

*#
@model_path/weights/weight.binÄ}Æ
const0
 encoder_0_0_block_0_bias_to_fp16



@*6
name.
&
$""
 encoder_0_0_block_0_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿Âà
conv
x

input_3_cast_fp160
weight&
$
"encoder_0_0_block_0_weight_to_fp16,
bias$
"
 encoder_0_0_block_0_bias_to_fp16 
strides

input_5_strides_0"
pad_type

input_5_pad_type_0
pad

input_5_pad_0$
	dilations

input_5_dilations_0
groups

input_5_groups_05
input_5_cast_fp16 



@
Ä
Ä*'
name

"
input_5_cast_fp16a
const
input_7_mode_0
*$
name

"
input_7_mode_0*
val

	"
EXACTû
gelu
x

input_5_cast_fp16
mode

input_7_mode_05
input_7_cast_fp16 



@
Ä
Ä*'
name

"
input_7_cast_fp16j
const
input_9_pad_type_0
*(
name 

"
input_9_pad_type_0*
val


"
customn
const
input_9_pad_0


*#
name

"
input_9_pad_0*!
val





t
const!
input_9_strides_0


*'
name

"
input_9_strides_0*
val




x
const#
input_9_dilations_0


*)
name!

"
input_9_dilations_0*
val




a
const
input_9_groups_0
*&
name

"
input_9_groups_0*
val


÷
constD
"encoder_0_0_block_2_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_0_block_2_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄÁÆ
const0
 encoder_0_0_block_2_bias_to_fp16



@*6
name.
&
$""
 encoder_0_0_block_2_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿ßà
conv
x

input_7_cast_fp160
weight&
$
"encoder_0_0_block_2_weight_to_fp16,
bias$
"
 encoder_0_0_block_2_bias_to_fp16 
strides

input_9_strides_0"
pad_type

input_9_pad_type_0
pad

input_9_pad_0$
	dilations

input_9_dilations_0
groups

input_9_groups_05
input_9_cast_fp16 



@
Ä
Ä*'
name

"
input_9_cast_fp16c
const
input_11_mode_0
*%
name

"
input_11_mode_0*
val

	"
EXACT°
gelu
x

input_9_cast_fp16
mode

input_11_mode_06
input_11_cast_fp16 



@
Ä
Ä*(
name 

"
input_11_cast_fp16l
const
input_13_pad_type_0
*)
name!

"
input_13_pad_type_0*
val


"
customp
const
input_13_pad_0


*$
name

"
input_13_pad_0*!
val





v
const"
input_13_strides_0


*(
name 

"
input_13_strides_0*
val




z
const$
input_13_dilations_0


**
name"

"
input_13_dilations_0*
val




c
const
input_13_groups_0
*'
name

"
input_13_groups_0*
val


÷
constD
"encoder_0_1_block_0_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_1_block_0_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄ©Æ
const0
 encoder_0_1_block_0_bias_to_fp16



@*6
name.
&
$""
 encoder_0_1_block_0_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿Èê
conv
x

input_11_cast_fp160
weight&
$
"encoder_0_1_block_0_weight_to_fp16,
bias$
"
 encoder_0_1_block_0_bias_to_fp16!
strides

input_13_strides_0#
pad_type

input_13_pad_type_0
pad

input_13_pad_0%
	dilations

input_13_dilations_0
groups

input_13_groups_06
input_13_cast_fp16 



@
Ä
Ä*(
name 

"
input_13_cast_fp16c
const
input_15_mode_0
*%
name

"
input_15_mode_0*
val

	"
EXACT¢
gelu
x

input_13_cast_fp16
mode

input_15_mode_06
input_15_cast_fp16 



@
Ä
Ä*(
name 

"
input_15_cast_fp16l
const
input_17_pad_type_0
*)
name!

"
input_17_pad_type_0*
val


"
customp
const
input_17_pad_0


*$
name

"
input_17_pad_0*!
val





v
const"
input_17_strides_0


*(
name 

"
input_17_strides_0*
val




z
const$
input_17_dilations_0


**
name"

"
input_17_dilations_0*
val




c
const
input_17_groups_0
*'
name

"
input_17_groups_0*
val


÷
constD
"encoder_0_1_block_2_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_1_block_2_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄÎÆ
const0
 encoder_0_1_block_2_bias_to_fp16



@*6
name.
&
$""
 encoder_0_1_block_2_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿´ê
conv
x

input_15_cast_fp160
weight&
$
"encoder_0_1_block_2_weight_to_fp16,
bias$
"
 encoder_0_1_block_2_bias_to_fp16!
strides

input_17_strides_0#
pad_type

input_17_pad_type_0
pad

input_17_pad_0%
	dilations

input_17_dilations_0
groups

input_17_groups_06
input_17_cast_fp16 



@
Ä
Ä*(
name 

"
input_17_cast_fp16c
const
input_19_mode_0
*%
name

"
input_19_mode_0*
val

	"
EXACT¢
gelu
x

input_17_cast_fp16
mode

input_19_mode_06
input_19_cast_fp16 



@
Ä
Ä*(
name 

"
input_19_cast_fp16l
const
input_21_pad_type_0
*)
name!

"
input_21_pad_type_0*
val


"
customp
const
input_21_pad_0


*$
name

"
input_21_pad_0*!
val





v
const"
input_21_strides_0


*(
name 

"
input_21_strides_0*
val




z
const$
input_21_dilations_0


**
name"

"
input_21_dilations_0*
val




c
const
input_21_groups_0
*'
name

"
input_21_groups_0*
val


÷
constD
"encoder_0_2_block_0_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_2_block_0_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄ≠Æ
const0
 encoder_0_2_block_0_bias_to_fp16



@*6
name.
&
$""
 encoder_0_2_block_0_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿Ìê
conv
x

input_19_cast_fp160
weight&
$
"encoder_0_2_block_0_weight_to_fp16,
bias$
"
 encoder_0_2_block_0_bias_to_fp16!
strides

input_21_strides_0#
pad_type

input_21_pad_type_0
pad

input_21_pad_0%
	dilations

input_21_dilations_0
groups

input_21_groups_06
input_21_cast_fp16 



@
Ä
Ä*(
name 

"
input_21_cast_fp16c
const
input_23_mode_0
*%
name

"
input_23_mode_0*
val

	"
EXACT¢
gelu
x

input_21_cast_fp16
mode

input_23_mode_06
input_23_cast_fp16 



@
Ä
Ä*(
name 

"
input_23_cast_fp16l
const
input_25_pad_type_0
*)
name!

"
input_25_pad_type_0*
val


"
customp
const
input_25_pad_0


*$
name

"
input_25_pad_0*!
val





v
const"
input_25_strides_0


*(
name 

"
input_25_strides_0*
val




z
const$
input_25_dilations_0


**
name"

"
input_25_dilations_0*
val




c
const
input_25_groups_0
*'
name

"
input_25_groups_0*
val


÷
constD
"encoder_0_2_block_2_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_2_block_2_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄÔÆ
const0
 encoder_0_2_block_2_bias_to_fp16



@*6
name.
&
$""
 encoder_0_2_block_2_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿Øê
conv
x

input_23_cast_fp160
weight&
$
"encoder_0_2_block_2_weight_to_fp16,
bias$
"
 encoder_0_2_block_2_bias_to_fp16!
strides

input_25_strides_0#
pad_type

input_25_pad_type_0
pad

input_25_pad_0%
	dilations

input_25_dilations_0
groups

input_25_groups_06
input_25_cast_fp16 



@
Ä
Ä*(
name 

"
input_25_cast_fp16c
const
input_27_mode_0
*%
name

"
input_27_mode_0*
val

	"
EXACT¢
gelu
x

input_25_cast_fp16
mode

input_27_mode_06
input_27_cast_fp16 



@
Ä
Ä*(
name 

"
input_27_cast_fp16l
const
input_29_pad_type_0
*)
name!

"
input_29_pad_type_0*
val


"
customp
const
input_29_pad_0


*$
name

"
input_29_pad_0*!
val





v
const"
input_29_strides_0


*(
name 

"
input_29_strides_0*
val




z
const$
input_29_dilations_0


**
name"

"
input_29_dilations_0*
val




c
const
input_29_groups_0
*'
name

"
input_29_groups_0*
val


÷
constD
"encoder_0_3_block_0_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_3_block_0_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄ±Æ
const0
 encoder_0_3_block_0_bias_to_fp16



@*6
name.
&
$""
 encoder_0_3_block_0_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿Òê
conv
x

input_27_cast_fp160
weight&
$
"encoder_0_3_block_0_weight_to_fp16,
bias$
"
 encoder_0_3_block_0_bias_to_fp16!
strides

input_29_strides_0#
pad_type

input_29_pad_type_0
pad

input_29_pad_0%
	dilations

input_29_dilations_0
groups

input_29_groups_06
input_29_cast_fp16 



@
Ä
Ä*(
name 

"
input_29_cast_fp16c
const
input_31_mode_0
*%
name

"
input_31_mode_0*
val

	"
EXACT¢
gelu
x

input_29_cast_fp16
mode

input_31_mode_06
input_31_cast_fp16 



@
Ä
Ä*(
name 

"
input_31_cast_fp16l
const
input_33_pad_type_0
*)
name!

"
input_33_pad_type_0*
val


"
customp
const
input_33_pad_0


*$
name

"
input_33_pad_0*!
val





v
const"
input_33_strides_0


*(
name 

"
input_33_strides_0*
val




z
const$
input_33_dilations_0


**
name"

"
input_33_dilations_0*
val




c
const
input_33_groups_0
*'
name

"
input_33_groups_0*
val


÷
constD
"encoder_0_3_block_2_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_3_block_2_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄÛÆ
const0
 encoder_0_3_block_2_bias_to_fp16



@*6
name.
&
$""
 encoder_0_3_block_2_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿≥#ê
conv
x

input_31_cast_fp160
weight&
$
"encoder_0_3_block_2_weight_to_fp16,
bias$
"
 encoder_0_3_block_2_bias_to_fp16!
strides

input_33_strides_0#
pad_type

input_33_pad_type_0
pad

input_33_pad_0%
	dilations

input_33_dilations_0
groups

input_33_groups_06
input_33_cast_fp16 



@
Ä
Ä*(
name 

"
input_33_cast_fp16c
const
input_35_mode_0
*%
name

"
input_35_mode_0*
val

	"
EXACT¢
gelu
x

input_33_cast_fp16
mode

input_35_mode_06
input_35_cast_fp16 



@
Ä
Ä*(
name 

"
input_35_cast_fp16l
const
input_37_pad_type_0
*)
name!

"
input_37_pad_type_0*
val


"
customp
const
input_37_pad_0


*$
name

"
input_37_pad_0*!
val





v
const"
input_37_strides_0


*(
name 

"
input_37_strides_0*
val




z
const$
input_37_dilations_0


**
name"

"
input_37_dilations_0*
val




c
const
input_37_groups_0
*'
name

"
input_37_groups_0*
val


÷
constD
"encoder_0_4_block_0_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_4_block_0_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄµ#Æ
const0
 encoder_0_4_block_0_bias_to_fp16



@*6
name.
&
$""
 encoder_0_4_block_0_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿ı'ê
conv
x

input_35_cast_fp160
weight&
$
"encoder_0_4_block_0_weight_to_fp16,
bias$
"
 encoder_0_4_block_0_bias_to_fp16!
strides

input_37_strides_0#
pad_type

input_37_pad_type_0
pad

input_37_pad_0%
	dilations

input_37_dilations_0
groups

input_37_groups_06
input_37_cast_fp16 



@
Ä
Ä*(
name 

"
input_37_cast_fp16c
const
input_39_mode_0
*%
name

"
input_39_mode_0*
val

	"
EXACT¢
gelu
x

input_37_cast_fp16
mode

input_39_mode_06
input_39_cast_fp16 



@
Ä
Ä*(
name 

"
input_39_cast_fp16l
const
input_41_pad_type_0
*)
name!

"
input_41_pad_type_0*
val


"
customp
const
input_41_pad_0


*$
name

"
input_41_pad_0*!
val





v
const"
input_41_strides_0


*(
name 

"
input_41_strides_0*
val




z
const$
input_41_dilations_0


**
name"

"
input_41_dilations_0*
val




c
const
input_41_groups_0
*'
name

"
input_41_groups_0*
val


÷
constD
"encoder_0_4_block_2_weight_to_fp16


@
@

*8
name0
(
&"$
"encoder_0_4_block_2_weight_to_fp16*M
valF


@
@

*$
@model_path/weights/weight.binÄ˜'Æ
const0
 encoder_0_4_block_2_bias_to_fp16



@*6
name.
&
$""
 encoder_0_4_block_2_bias_to_fp16*;
val4



@*$
@model_path/weights/weight.bin¿∑,ê
conv
x

input_39_cast_fp160
weight&
$
"encoder_0_4_block_2_weight_to_fp16,
bias$
"
 encoder_0_4_block_2_bias_to_fp16!
strides

input_41_strides_0#
pad_type

input_41_pad_type_0
pad

input_41_pad_0%
	dilations

input_41_dilations_0
groups

input_41_groups_06
input_41_cast_fp16 



@
Ä
Ä*(
name 

"
input_41_cast_fp16Y
const

x_3_mode_0
* 
name

"

x_3_mode_0*
val

	"
EXACTì
gelu
x

input_41_cast_fp16
mode


x_3_mode_01
x_3_cast_fp16 



@
Ä
Ä*#
name

"
x_3_cast_fp16_
const
var_145


*
name


"
op_145*
val




_
const
var_146


*
name


"
op_146*
val




l
const
input_43_pad_type_0
*)
name!

"
input_43_pad_type_0*
val


"
customp
const
input_43_pad_0


*$
name

"
input_43_pad_0*!
val





    è
const/
'input_43_exclude_padding_from_average_0
*=
name5
-
+")
'input_43_exclude_padding_from_average_0*
val


 i
const
input_43_ceil_mode_0
**
name"

"
input_43_ceil_mode_0*
val


 Ì
avg_poolK
exclude_padding_from_average+
)
'input_43_exclude_padding_from_average_0
x

x_3_cast_fp16
kernel_sizes
	
var_145
strides
	
var_146#
pad_type

input_43_pad_type_0
pad

input_43_pad_0%
	ceil_mode

input_43_ceil_mode_06
input_43_cast_fp16 



@
Ä
Ä*(
name 

"
input_43_cast_fp16l
const
input_45_pad_type_0
*)
name!

"
input_45_pad_type_0*
val


"
customp
const
input_45_pad_0


*$
name

"
input_45_pad_0*!
val





v
const"
input_45_strides_0


*(
name 

"
input_45_strides_0*
val




z
const$
input_45_dilations_0


**
name"

"
input_45_dilations_0*
val




c
const
input_45_groups_0
*'
name

"
input_45_groups_0*
val


÷
constD
"encoder_1_0_block_0_weight_to_fp16


`
@

*8
name0
(
&"$
"encoder_1_0_block_0_weight_to_fp16*M
valF


`
@

*$
@model_path/weights/weight.binÄπ,Æ
const0
 encoder_1_0_block_0_bias_to_fp16



`*6
name.
&
$""
 encoder_1_0_block_0_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.bin¿ô3ê
conv
x

input_43_cast_fp160
weight&
$
"encoder_1_0_block_0_weight_to_fp16,
bias$
"
 encoder_1_0_block_0_bias_to_fp16!
strides

input_45_strides_0#
pad_type

input_45_pad_type_0
pad

input_45_pad_0%
	dilations

input_45_dilations_0
groups

input_45_groups_06
input_45_cast_fp16 



`
Ä
Ä*(
name 

"
input_45_cast_fp16c
const
input_47_mode_0
*%
name

"
input_47_mode_0*
val

	"
EXACT¢
gelu
x

input_45_cast_fp16
mode

input_47_mode_06
input_47_cast_fp16 



`
Ä
Ä*(
name 

"
input_47_cast_fp16l
const
input_49_pad_type_0
*)
name!

"
input_49_pad_type_0*
val


"
customp
const
input_49_pad_0


*$
name

"
input_49_pad_0*!
val





v
const"
input_49_strides_0


*(
name 

"
input_49_strides_0*
val




z
const$
input_49_dilations_0


**
name"

"
input_49_dilations_0*
val




c
const
input_49_groups_0
*'
name

"
input_49_groups_0*
val


÷
constD
"encoder_1_0_block_2_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_0_block_2_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.bin¿õ3Æ
const0
 encoder_1_0_block_2_bias_to_fp16



`*6
name.
&
$""
 encoder_1_0_block_2_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.binÄ¨=ê
conv
x

input_47_cast_fp160
weight&
$
"encoder_1_0_block_2_weight_to_fp16,
bias$
"
 encoder_1_0_block_2_bias_to_fp16!
strides

input_49_strides_0#
pad_type

input_49_pad_type_0
pad

input_49_pad_0%
	dilations

input_49_dilations_0
groups

input_49_groups_06
input_49_cast_fp16 



`
Ä
Ä*(
name 

"
input_49_cast_fp16c
const
input_51_mode_0
*%
name

"
input_51_mode_0*
val

	"
EXACT¢
gelu
x

input_49_cast_fp16
mode

input_51_mode_06
input_51_cast_fp16 



`
Ä
Ä*(
name 

"
input_51_cast_fp16l
const
input_53_pad_type_0
*)
name!

"
input_53_pad_type_0*
val


"
customp
const
input_53_pad_0


*$
name

"
input_53_pad_0*!
val





v
const"
input_53_strides_0


*(
name 

"
input_53_strides_0*
val




z
const$
input_53_dilations_0


**
name"

"
input_53_dilations_0*
val




c
const
input_53_groups_0
*'
name

"
input_53_groups_0*
val


÷
constD
"encoder_1_1_block_0_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_1_block_0_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.binÄÆ=Æ
const0
 encoder_1_1_block_0_bias_to_fp16



`*6
name.
&
$""
 encoder_1_1_block_0_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.bin¿æGê
conv
x

input_51_cast_fp160
weight&
$
"encoder_1_1_block_0_weight_to_fp16,
bias$
"
 encoder_1_1_block_0_bias_to_fp16!
strides

input_53_strides_0#
pad_type

input_53_pad_type_0
pad

input_53_pad_0%
	dilations

input_53_dilations_0
groups

input_53_groups_06
input_53_cast_fp16 



`
Ä
Ä*(
name 

"
input_53_cast_fp16c
const
input_55_mode_0
*%
name

"
input_55_mode_0*
val

	"
EXACT¢
gelu
x

input_53_cast_fp16
mode

input_55_mode_06
input_55_cast_fp16 



`
Ä
Ä*(
name 

"
input_55_cast_fp16l
const
input_57_pad_type_0
*)
name!

"
input_57_pad_type_0*
val


"
customp
const
input_57_pad_0


*$
name

"
input_57_pad_0*!
val





v
const"
input_57_strides_0


*(
name 

"
input_57_strides_0*
val




z
const$
input_57_dilations_0


**
name"

"
input_57_dilations_0*
val




c
const
input_57_groups_0
*'
name

"
input_57_groups_0*
val


÷
constD
"encoder_1_1_block_2_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_1_block_2_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.bin¿¿GÆ
const0
 encoder_1_1_block_2_bias_to_fp16



`*6
name.
&
$""
 encoder_1_1_block_2_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.binÄ—Qê
conv
x

input_55_cast_fp160
weight&
$
"encoder_1_1_block_2_weight_to_fp16,
bias$
"
 encoder_1_1_block_2_bias_to_fp16!
strides

input_57_strides_0#
pad_type

input_57_pad_type_0
pad

input_57_pad_0%
	dilations

input_57_dilations_0
groups

input_57_groups_06
input_57_cast_fp16 



`
Ä
Ä*(
name 

"
input_57_cast_fp16c
const
input_59_mode_0
*%
name

"
input_59_mode_0*
val

	"
EXACT¢
gelu
x

input_57_cast_fp16
mode

input_59_mode_06
input_59_cast_fp16 



`
Ä
Ä*(
name 

"
input_59_cast_fp16l
const
input_61_pad_type_0
*)
name!

"
input_61_pad_type_0*
val


"
customp
const
input_61_pad_0


*$
name

"
input_61_pad_0*!
val





v
const"
input_61_strides_0


*(
name 

"
input_61_strides_0*
val




z
const$
input_61_dilations_0


**
name"

"
input_61_dilations_0*
val




c
const
input_61_groups_0
*'
name

"
input_61_groups_0*
val


÷
constD
"encoder_1_2_block_0_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_2_block_0_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.binÄ”QÆ
const0
 encoder_1_2_block_0_bias_to_fp16



`*6
name.
&
$""
 encoder_1_2_block_0_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.bin¿„[ê
conv
x

input_59_cast_fp160
weight&
$
"encoder_1_2_block_0_weight_to_fp16,
bias$
"
 encoder_1_2_block_0_bias_to_fp16!
strides

input_61_strides_0#
pad_type

input_61_pad_type_0
pad

input_61_pad_0%
	dilations

input_61_dilations_0
groups

input_61_groups_06
input_61_cast_fp16 



`
Ä
Ä*(
name 

"
input_61_cast_fp16c
const
input_63_mode_0
*%
name

"
input_63_mode_0*
val

	"
EXACT¢
gelu
x

input_61_cast_fp16
mode

input_63_mode_06
input_63_cast_fp16 



`
Ä
Ä*(
name 

"
input_63_cast_fp16l
const
input_65_pad_type_0
*)
name!

"
input_65_pad_type_0*
val


"
customp
const
input_65_pad_0


*$
name

"
input_65_pad_0*!
val





v
const"
input_65_strides_0


*(
name 

"
input_65_strides_0*
val




z
const$
input_65_dilations_0


**
name"

"
input_65_dilations_0*
val




c
const
input_65_groups_0
*'
name

"
input_65_groups_0*
val


÷
constD
"encoder_1_2_block_2_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_2_block_2_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.bin¿Â[Æ
const0
 encoder_1_2_block_2_bias_to_fp16



`*6
name.
&
$""
 encoder_1_2_block_2_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.binÄˆeê
conv
x

input_63_cast_fp160
weight&
$
"encoder_1_2_block_2_weight_to_fp16,
bias$
"
 encoder_1_2_block_2_bias_to_fp16!
strides

input_65_strides_0#
pad_type

input_65_pad_type_0
pad

input_65_pad_0%
	dilations

input_65_dilations_0
groups

input_65_groups_06
input_65_cast_fp16 



`
Ä
Ä*(
name 

"
input_65_cast_fp16c
const
input_67_mode_0
*%
name

"
input_67_mode_0*
val

	"
EXACT¢
gelu
x

input_65_cast_fp16
mode

input_67_mode_06
input_67_cast_fp16 



`
Ä
Ä*(
name 

"
input_67_cast_fp16l
const
input_69_pad_type_0
*)
name!

"
input_69_pad_type_0*
val


"
customp
const
input_69_pad_0


*$
name

"
input_69_pad_0*!
val





v
const"
input_69_strides_0


*(
name 

"
input_69_strides_0*
val




z
const$
input_69_dilations_0


**
name"

"
input_69_dilations_0*
val




c
const
input_69_groups_0
*'
name

"
input_69_groups_0*
val


÷
constD
"encoder_1_3_block_0_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_3_block_0_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.binÄ¯eÆ
const0
 encoder_1_3_block_0_bias_to_fp16



`*6
name.
&
$""
 encoder_1_3_block_0_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.bin¿àpê
conv
x

input_67_cast_fp160
weight&
$
"encoder_1_3_block_0_weight_to_fp16,
bias$
"
 encoder_1_3_block_0_bias_to_fp16!
strides

input_69_strides_0#
pad_type

input_69_pad_type_0
pad

input_69_pad_0%
	dilations

input_69_dilations_0
groups

input_69_groups_06
input_69_cast_fp16 



`
Ä
Ä*(
name 

"
input_69_cast_fp16c
const
input_71_mode_0
*%
name

"
input_71_mode_0*
val

	"
EXACT¢
gelu
x

input_69_cast_fp16
mode

input_71_mode_06
input_71_cast_fp16 



`
Ä
Ä*(
name 

"
input_71_cast_fp16l
const
input_73_pad_type_0
*)
name!

"
input_73_pad_type_0*
val


"
customp
const
input_73_pad_0


*$
name

"
input_73_pad_0*!
val





v
const"
input_73_strides_0


*(
name 

"
input_73_strides_0*
val




z
const$
input_73_dilations_0


**
name"

"
input_73_dilations_0*
val




c
const
input_73_groups_0
*'
name

"
input_73_groups_0*
val


÷
constD
"encoder_1_3_block_2_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_3_block_2_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.bin¿äpÆ
const0
 encoder_1_3_block_2_bias_to_fp16



`*6
name.
&
$""
 encoder_1_3_block_2_bias_to_fp16*;
val4



`*$
@model_path/weights/weight.binÄõzê
conv
x

input_71_cast_fp160
weight&
$
"encoder_1_3_block_2_weight_to_fp16,
bias$
"
 encoder_1_3_block_2_bias_to_fp16!
strides

input_73_strides_0#
pad_type

input_73_pad_type_0
pad

input_73_pad_0%
	dilations

input_73_dilations_0
groups

input_73_groups_06
input_73_cast_fp16 



`
Ä
Ä*(
name 

"
input_73_cast_fp16c
const
input_75_mode_0
*%
name

"
input_75_mode_0*
val

	"
EXACT¢
gelu
x

input_73_cast_fp16
mode

input_75_mode_06
input_75_cast_fp16 



`
Ä
Ä*(
name 

"
input_75_cast_fp16l
const
input_77_pad_type_0
*)
name!

"
input_77_pad_type_0*
val


"
customp
const
input_77_pad_0


*$
name

"
input_77_pad_0*!
val





v
const"
input_77_strides_0


*(
name 

"
input_77_strides_0*
val




z
const$
input_77_dilations_0


**
name"

"
input_77_dilations_0*
val




c
const
input_77_groups_0
*'
name

"
input_77_groups_0*
val


÷
constD
"encoder_1_4_block_0_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_4_block_0_weight_to_fp16*M
valF


`
`

*$
@model_path/weights/weight.binÄùzØ
const0
 encoder_1_4_block_0_bias_to_fp16



`*6
name.
&
$""
 encoder_1_4_block_0_bias_to_fp16*<
val5



`*%
@model_path/weights/weight.bin¿≠Ñê
conv
x

input_75_cast_fp160
weight&
$
"encoder_1_4_block_0_weight_to_fp16,
bias$
"
 encoder_1_4_block_0_bias_to_fp16!
strides

input_77_strides_0#
pad_type

input_77_pad_type_0
pad

input_77_pad_0%
	dilations

input_77_dilations_0
groups

input_77_groups_06
input_77_cast_fp16 



`
Ä
Ä*(
name 

"
input_77_cast_fp16c
const
input_79_mode_0
*%
name

"
input_79_mode_0*
val

	"
EXACT¢
gelu
x

input_77_cast_fp16
mode

input_79_mode_06
input_79_cast_fp16 



`
Ä
Ä*(
name 

"
input_79_cast_fp16l
const
input_81_pad_type_0
*)
name!

"
input_81_pad_type_0*
val


"
customp
const
input_81_pad_0


*$
name

"
input_81_pad_0*!
val





v
const"
input_81_strides_0


*(
name 

"
input_81_strides_0*
val




z
const$
input_81_dilations_0


**
name"

"
input_81_dilations_0*
val




c
const
input_81_groups_0
*'
name

"
input_81_groups_0*
val


◊
constD
"encoder_1_4_block_2_weight_to_fp16


`
`

*8
name0
(
&"$
"encoder_1_4_block_2_weight_to_fp16*N
valG


`
`

*%
@model_path/weights/weight.bin¿ØÑØ
const0
 encoder_1_4_block_2_bias_to_fp16



`*6
name.
&
$""
 encoder_1_4_block_2_bias_to_fp16*<
val5



`*%
@model_path/weights/weight.binÄ¿éê
conv
x

input_79_cast_fp160
weight&
$
"encoder_1_4_block_2_weight_to_fp16,
bias$
"
 encoder_1_4_block_2_bias_to_fp16!
strides

input_81_strides_0#
pad_type

input_81_pad_type_0
pad

input_81_pad_0%
	dilations

input_81_dilations_0
groups

input_81_groups_06
input_81_cast_fp16 



`
Ä
Ä*(
name 

"
input_81_cast_fp16Y
const

x_5_mode_0
* 
name

"

x_5_mode_0*
val

	"
EXACTì
gelu
x

input_81_cast_fp16
mode


x_5_mode_01
x_5_cast_fp16 



`
Ä
Ä*#
name

"
x_5_cast_fp16_
const
var_249


*
name


"
op_249*
val




_
const
var_250


*
name


"
op_250*
val




b
const
x_7_pad_type_0
*$
name

"
x_7_pad_type_0*
val


"
customf
const
	x_7_pad_0


*
name

"
	x_7_pad_0*!
val





    Ö
const*
"x_7_exclude_padding_from_average_0
*8
name0
(
&"$
"x_7_exclude_padding_from_average_0*
val


 _
const
x_7_ceil_mode_0
*%
name

"
x_7_ceil_mode_0*
val


 Õ
avg_poolF
exclude_padding_from_average&
$
"x_7_exclude_padding_from_average_0
x

x_5_cast_fp16
kernel_sizes
	
var_249
strides
	
var_250
pad_type

x_7_pad_type_0
pad

	x_7_pad_0 
	ceil_mode

x_7_ceil_mode_0/
x_7_cast_fp16



`
@
@*#
name

"
x_7_cast_fp16a
const
q_1_pad_type_0
*$
name

"
q_1_pad_type_0*
val

	"
validl
const
q_1_strides_0


*#
name

"
q_1_strides_0*
val




f
const
	q_1_pad_0


*
name

"
	q_1_pad_0*!
val





    p
const
q_1_dilations_0


*%
name

"
q_1_dilations_0*
val




Y
const
q_1_groups_0
*"
name

"
q_1_groups_0*
val


Õ
const?
encoder_2_0_q_weight_to_fp16


Ä
`

*2
name*
"
 "
encoder_2_0_q_weight_to_fp16*O
valH


Ä
`

*%
@model_path/weights/weight.binÄ¬é•
const+
encoder_2_0_q_bias_to_fp16


Ä*0
name(
 
"
encoder_2_0_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿¬ë€
conv
x

x_7_cast_fp16*
weight 

encoder_2_0_q_weight_to_fp16&
bias

encoder_2_0_q_bias_to_fp16
strides

q_1_strides_0
pad_type

q_1_pad_type_0
pad

	q_1_pad_0 
	dilations

q_1_dilations_0
groups

q_1_groups_00
q_1_cast_fp16



Ä
@
@*#
name

"
q_1_cast_fp16a
const
k_1_pad_type_0
*$
name

"
k_1_pad_type_0*
val

	"
validl
const
k_1_strides_0


*#
name

"
k_1_strides_0*
val




f
const
	k_1_pad_0


*
name

"
	k_1_pad_0*!
val





    p
const
k_1_dilations_0


*%
name

"
k_1_dilations_0*
val




Y
const
k_1_groups_0
*"
name

"
k_1_groups_0*
val


Õ
const?
encoder_2_0_k_weight_to_fp16


Ä
`

*2
name*
"
 "
encoder_2_0_k_weight_to_fp16*O
valH


Ä
`

*%
@model_path/weights/weight.binÄ«ë•
const+
encoder_2_0_k_bias_to_fp16


Ä*0
name(
 
"
encoder_2_0_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿«î€
conv
x

x_7_cast_fp16*
weight 

encoder_2_0_k_weight_to_fp16&
bias

encoder_2_0_k_bias_to_fp16
strides

k_1_strides_0
pad_type

k_1_pad_type_0
pad

	k_1_pad_0 
	dilations

k_1_dilations_0
groups

k_1_groups_00
k_1_cast_fp16



Ä
@
@*#
name

"
k_1_cast_fp16a
const
v_1_pad_type_0
*$
name

"
v_1_pad_type_0*
val

	"
validl
const
v_1_strides_0


*#
name

"
v_1_strides_0*
val




f
const
	v_1_pad_0


*
name

"
	v_1_pad_0*!
val





    p
const
v_1_dilations_0


*%
name

"
v_1_dilations_0*
val




Y
const
v_1_groups_0
*"
name

"
v_1_groups_0*
val


Õ
const?
encoder_2_0_v_weight_to_fp16


Ä
`

*2
name*
"
 "
encoder_2_0_v_weight_to_fp16*O
valH


Ä
`

*%
@model_path/weights/weight.binÄÃî•
const+
encoder_2_0_v_bias_to_fp16


Ä*0
name(
 
"
encoder_2_0_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Ãö€
conv
x

x_7_cast_fp16*
weight 

encoder_2_0_v_weight_to_fp16&
bias

encoder_2_0_v_bias_to_fp16
strides

v_1_strides_0
pad_type

v_1_pad_type_0
pad

	v_1_pad_0 
	dilations

v_1_dilations_0
groups

v_1_groups_00
v_1_cast_fp16



Ä
@
@*#
name

"
v_1_cast_fp16k
const
var_290


*
name


"
op_290*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ï
reshape
x

q_1_cast_fp16
shape
	
var_2904
var_291_cast_fp16




 
Ä *&
name

"
op_291_cast_fp16k
const
var_296


*
name


"
op_296*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ï
reshape
x

k_1_cast_fp16
shape
	
var_2964
var_297_cast_fp16




 
Ä *&
name

"
op_297_cast_fp16k
const
var_302


*
name


"
op_302*+
val$




ˇˇˇˇˇˇˇˇˇ@Ä ï
reshape
x

v_1_cast_fp16
shape
	
var_3024
var_303_cast_fp16




@
Ä *&
name

"
op_303_cast_fp16d
const
mul_0_y_0_to_fp16

*'
name

"
mul_0_y_0_to_fp16*
val


:
®1ò
mul
x

var_291_cast_fp16
y

mul_0_y_0_to_fp162
mul_0_cast_fp16




 
Ä *%
name

"
mul_0_cast_fp16m
const
matmul_0_transpose_x_1
*,
name$

"
matmul_0_transpose_x_1*
val


m
const
matmul_0_transpose_y_1
*,
name$

"
matmul_0_transpose_y_1*
val


 ˆ
matmul
x

mul_0_cast_fp16
y

var_297_cast_fp16)
transpose_x

matmul_0_transpose_x_1)
transpose_y

matmul_0_transpose_y_16
matmul_0_cast_fp16 




Ä 
Ä *(
name 

"
matmul_0_cast_fp16j
const
softmax_0_axis_0
*&
name

"
softmax_0_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_0_cast_fp16
axis

softmax_0_axis_07
softmax_0_cast_fp16 




Ä 
Ä *)
name!

"
softmax_0_cast_fp16c
const
x_9_transpose_x_1
*'
name

"
x_9_transpose_x_1*
val


 c
const
x_9_transpose_y_1
*'
name

"
x_9_transpose_y_1*
val


Â
matmul
x

softmax_0_cast_fp16
y

var_303_cast_fp16$
transpose_x

x_9_transpose_x_1$
transpose_y

x_9_transpose_y_10
x_9_cast_fp16




Ä 
@*#
name

"
x_9_cast_fp16a
const
var_307


*
name


"
op_307*!
val





 k
const
var_309


*
name


"
op_309*+
val$




ˇˇˇˇˇˇˇˇˇÄ@@ì
	transpose
x

x_9_cast_fp16
perm
	
var_3074
var_308_cast_fp16




@
Ä *#
name

"
transpose_224ú
reshape
x

var_308_cast_fp16
shape
	
var_3095
input_83_cast_fp16



Ä
@
@*(
name 

"
input_83_cast_fp16k
const
input_85_pad_type_0
*)
name!

"
input_85_pad_type_0*
val

	"
validv
const"
input_85_strides_0


*(
name 

"
input_85_strides_0*
val




p
const
input_85_pad_0


*$
name

"
input_85_pad_0*!
val





    z
const$
input_85_dilations_0


**
name"

"
input_85_dilations_0*
val




c
const
input_85_groups_0
*'
name

"
input_85_groups_0*
val


’
constC
encoder_2_0_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_2_0_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ’ö´
const.
encoder_2_0_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_2_0_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿’¢â
conv
x

input_83_cast_fp16-
weight#
!
encoder_2_0_proj_weight_to_fp16)
bias!

encoder_2_0_proj_bias_to_fp16!
strides

input_85_strides_0#
pad_type

input_85_pad_type_0
pad

input_85_pad_0%
	dilations

input_85_dilations_0
groups

input_85_groups_05
input_85_cast_fp16



Ä
@
@*(
name 

"
input_85_cast_fp16k
const
input_87_pad_type_0
*)
name!

"
input_87_pad_type_0*
val

	"
validv
const"
input_87_strides_0


*(
name 

"
input_87_strides_0*
val




p
const
input_87_pad_0


*$
name

"
input_87_pad_0*!
val





    z
const$
input_87_dilations_0


**
name"

"
input_87_dilations_0*
val




c
const
input_87_groups_0
*'
name

"
input_87_groups_0*
val


◊
constD
 encoder_2_0_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_0_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÿ¢≠
const/
encoder_2_0_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_0_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ÿ™ã
conv
x

input_85_cast_fp16.
weight$
"
 encoder_2_0_ffn_0_weight_to_fp16*
bias"
 
encoder_2_0_ffn_0_bias_to_fp16!
strides

input_87_strides_0#
pad_type

input_87_pad_type_0
pad

input_87_pad_0%
	dilations

input_87_dilations_0
groups

input_87_groups_05
input_87_cast_fp16



Ä
@
@*(
name 

"
input_87_cast_fp16c
const
input_89_mode_0
*%
name

"
input_89_mode_0*
val

	"
EXACT°
gelu
x

input_87_cast_fp16
mode

input_89_mode_05
input_89_cast_fp16



Ä
@
@*(
name 

"
input_89_cast_fp16c
const
x_11_pad_type_0
*%
name

"
x_11_pad_type_0*
val

	"
validn
const
x_11_strides_0


*$
name

"
x_11_strides_0*
val




h
const

x_11_pad_0


* 
name

"

x_11_pad_0*!
val





    r
const 
x_11_dilations_0


*&
name

"
x_11_dilations_0*
val




[
const
x_11_groups_0
*#
name

"
x_11_groups_0*
val


◊
constD
 encoder_2_0_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_0_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ·™≠
const/
encoder_2_0_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_0_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿·≤Ô
conv
x

input_89_cast_fp16.
weight$
"
 encoder_2_0_ffn_2_weight_to_fp16*
bias"
 
encoder_2_0_ffn_2_bias_to_fp16
strides

x_11_strides_0
pad_type

x_11_pad_type_0
pad


x_11_pad_0!
	dilations

x_11_dilations_0
groups

x_11_groups_01
x_11_cast_fp16



Ä
@
@*$
name

"
x_11_cast_fp16a
const
q_5_pad_type_0
*$
name

"
q_5_pad_type_0*
val

	"
validl
const
q_5_strides_0


*#
name

"
q_5_strides_0*
val




f
const
	q_5_pad_0


*
name

"
	q_5_pad_0*!
val





    p
const
q_5_dilations_0


*%
name

"
q_5_dilations_0*
val




Y
const
q_5_groups_0
*"
name

"
q_5_groups_0*
val


œ
const@
encoder_2_1_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_1_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ‰≤•
const+
encoder_2_1_q_bias_to_fp16


Ä*0
name(
 
"
encoder_2_1_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿‰∂‹
conv
x

x_11_cast_fp16*
weight 

encoder_2_1_q_weight_to_fp16&
bias

encoder_2_1_q_bias_to_fp16
strides

q_5_strides_0
pad_type

q_5_pad_type_0
pad

	q_5_pad_0 
	dilations

q_5_dilations_0
groups

q_5_groups_00
q_5_cast_fp16



Ä
@
@*#
name

"
q_5_cast_fp16a
const
k_5_pad_type_0
*$
name

"
k_5_pad_type_0*
val

	"
validl
const
k_5_strides_0


*#
name

"
k_5_strides_0*
val




f
const
	k_5_pad_0


*
name

"
	k_5_pad_0*!
val





    p
const
k_5_dilations_0


*%
name

"
k_5_dilations_0*
val




Y
const
k_5_groups_0
*"
name

"
k_5_groups_0*
val


œ
const@
encoder_2_1_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_1_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÈ∂•
const+
encoder_2_1_k_bias_to_fp16


Ä*0
name(
 
"
encoder_2_1_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿È∫‹
conv
x

x_11_cast_fp16*
weight 

encoder_2_1_k_weight_to_fp16&
bias

encoder_2_1_k_bias_to_fp16
strides

k_5_strides_0
pad_type

k_5_pad_type_0
pad

	k_5_pad_0 
	dilations

k_5_dilations_0
groups

k_5_groups_00
k_5_cast_fp16



Ä
@
@*#
name

"
k_5_cast_fp16a
const
v_5_pad_type_0
*$
name

"
v_5_pad_type_0*
val

	"
validl
const
v_5_strides_0


*#
name

"
v_5_strides_0*
val




f
const
	v_5_pad_0


*
name

"
	v_5_pad_0*!
val





    p
const
v_5_dilations_0


*%
name

"
v_5_dilations_0*
val




Y
const
v_5_groups_0
*"
name

"
v_5_groups_0*
val


œ
const@
encoder_2_1_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_1_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÓ∫•
const+
encoder_2_1_v_bias_to_fp16


Ä*0
name(
 
"
encoder_2_1_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Ó¬‹
conv
x

x_11_cast_fp16*
weight 

encoder_2_1_v_weight_to_fp16&
bias

encoder_2_1_v_bias_to_fp16
strides

v_5_strides_0
pad_type

v_5_pad_type_0
pad

	v_5_pad_0 
	dilations

v_5_dilations_0
groups

v_5_groups_00
v_5_cast_fp16



Ä
@
@*#
name

"
v_5_cast_fp16k
const
var_367


*
name


"
op_367*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ï
reshape
x

q_5_cast_fp16
shape
	
var_3674
var_368_cast_fp16




 
Ä *&
name

"
op_368_cast_fp16k
const
var_373


*
name


"
op_373*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ï
reshape
x

k_5_cast_fp16
shape
	
var_3734
var_374_cast_fp16




 
Ä *&
name

"
op_374_cast_fp16k
const
var_379


*
name


"
op_379*+
val$




ˇˇˇˇˇˇˇˇˇ@Ä ï
reshape
x

v_5_cast_fp16
shape
	
var_3794
var_380_cast_fp16




@
Ä *&
name

"
op_380_cast_fp16d
const
mul_1_y_0_to_fp16

*'
name

"
mul_1_y_0_to_fp16*
val


:
®1ò
mul
x

var_368_cast_fp16
y

mul_1_y_0_to_fp162
mul_1_cast_fp16




 
Ä *%
name

"
mul_1_cast_fp16m
const
matmul_1_transpose_x_1
*,
name$

"
matmul_1_transpose_x_1*
val


m
const
matmul_1_transpose_y_1
*,
name$

"
matmul_1_transpose_y_1*
val


 ˆ
matmul
x

mul_1_cast_fp16
y

var_374_cast_fp16)
transpose_x

matmul_1_transpose_x_1)
transpose_y

matmul_1_transpose_y_16
matmul_1_cast_fp16 




Ä 
Ä *(
name 

"
matmul_1_cast_fp16j
const
softmax_1_axis_0
*&
name

"
softmax_1_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_1_cast_fp16
axis

softmax_1_axis_07
softmax_1_cast_fp16 




Ä 
Ä *)
name!

"
softmax_1_cast_fp16e
const
x_13_transpose_x_1
*(
name 

"
x_13_transpose_x_1*
val


 e
const
x_13_transpose_y_1
*(
name 

"
x_13_transpose_y_1*
val


È
matmul
x

softmax_1_cast_fp16
y

var_380_cast_fp16%
transpose_x

x_13_transpose_x_1%
transpose_y

x_13_transpose_y_11
x_13_cast_fp16




Ä 
@*$
name

"
x_13_cast_fp16a
const
var_384


*
name


"
op_384*!
val





 k
const
var_386


*
name


"
op_386*+
val$




ˇˇˇˇˇˇˇˇˇÄ@@î
	transpose
x

x_13_cast_fp16
perm
	
var_3844
var_385_cast_fp16




@
Ä *#
name

"
transpose_223ú
reshape
x

var_385_cast_fp16
shape
	
var_3865
input_91_cast_fp16



Ä
@
@*(
name 

"
input_91_cast_fp16k
const
input_93_pad_type_0
*)
name!

"
input_93_pad_type_0*
val

	"
validv
const"
input_93_strides_0


*(
name 

"
input_93_strides_0*
val




p
const
input_93_pad_0


*$
name

"
input_93_pad_0*!
val





    z
const$
input_93_dilations_0


**
name"

"
input_93_dilations_0*
val




c
const
input_93_groups_0
*'
name

"
input_93_groups_0*
val


’
constC
encoder_2_1_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_2_1_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ˜¬´
const.
encoder_2_1_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_2_1_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿˜ â
conv
x

input_91_cast_fp16-
weight#
!
encoder_2_1_proj_weight_to_fp16)
bias!

encoder_2_1_proj_bias_to_fp16!
strides

input_93_strides_0#
pad_type

input_93_pad_type_0
pad

input_93_pad_0%
	dilations

input_93_dilations_0
groups

input_93_groups_05
input_93_cast_fp16



Ä
@
@*(
name 

"
input_93_cast_fp16k
const
input_95_pad_type_0
*)
name!

"
input_95_pad_type_0*
val

	"
validv
const"
input_95_strides_0


*(
name 

"
input_95_strides_0*
val




p
const
input_95_pad_0


*$
name

"
input_95_pad_0*!
val





    z
const$
input_95_dilations_0


**
name"

"
input_95_dilations_0*
val




c
const
input_95_groups_0
*'
name

"
input_95_groups_0*
val


◊
constD
 encoder_2_1_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_1_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ˙ ≠
const/
encoder_2_1_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_1_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿˙“ã
conv
x

input_93_cast_fp16.
weight$
"
 encoder_2_1_ffn_0_weight_to_fp16*
bias"
 
encoder_2_1_ffn_0_bias_to_fp16!
strides

input_95_strides_0#
pad_type

input_95_pad_type_0
pad

input_95_pad_0%
	dilations

input_95_dilations_0
groups

input_95_groups_05
input_95_cast_fp16



Ä
@
@*(
name 

"
input_95_cast_fp16c
const
input_97_mode_0
*%
name

"
input_97_mode_0*
val

	"
EXACT°
gelu
x

input_95_cast_fp16
mode

input_97_mode_05
input_97_cast_fp16



Ä
@
@*(
name 

"
input_97_cast_fp16c
const
x_15_pad_type_0
*%
name

"
x_15_pad_type_0*
val

	"
validn
const
x_15_strides_0


*$
name

"
x_15_strides_0*
val




h
const

x_15_pad_0


* 
name

"

x_15_pad_0*!
val





    r
const 
x_15_dilations_0


*&
name

"
x_15_dilations_0*
val




[
const
x_15_groups_0
*#
name

"
x_15_groups_0*
val


◊
constD
 encoder_2_1_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_1_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÉ”≠
const/
encoder_2_1_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_1_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿É€Ô
conv
x

input_97_cast_fp16.
weight$
"
 encoder_2_1_ffn_2_weight_to_fp16*
bias"
 
encoder_2_1_ffn_2_bias_to_fp16
strides

x_15_strides_0
pad_type

x_15_pad_type_0
pad


x_15_pad_0!
	dilations

x_15_dilations_0
groups

x_15_groups_01
x_15_cast_fp16



Ä
@
@*$
name

"
x_15_cast_fp16a
const
q_9_pad_type_0
*$
name

"
q_9_pad_type_0*
val

	"
validl
const
q_9_strides_0


*#
name

"
q_9_strides_0*
val




f
const
	q_9_pad_0


*
name

"
	q_9_pad_0*!
val





    p
const
q_9_dilations_0


*%
name

"
q_9_dilations_0*
val




Y
const
q_9_groups_0
*"
name

"
q_9_groups_0*
val


œ
const@
encoder_2_2_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_2_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÜ€•
const+
encoder_2_2_q_bias_to_fp16


Ä*0
name(
 
"
encoder_2_2_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Üﬂ‹
conv
x

x_15_cast_fp16*
weight 

encoder_2_2_q_weight_to_fp16&
bias

encoder_2_2_q_bias_to_fp16
strides

q_9_strides_0
pad_type

q_9_pad_type_0
pad

	q_9_pad_0 
	dilations

q_9_dilations_0
groups

q_9_groups_00
q_9_cast_fp16



Ä
@
@*#
name

"
q_9_cast_fp16a
const
k_9_pad_type_0
*$
name

"
k_9_pad_type_0*
val

	"
validl
const
k_9_strides_0


*#
name

"
k_9_strides_0*
val




f
const
	k_9_pad_0


*
name

"
	k_9_pad_0*!
val





    p
const
k_9_dilations_0


*%
name

"
k_9_dilations_0*
val




Y
const
k_9_groups_0
*"
name

"
k_9_groups_0*
val


œ
const@
encoder_2_2_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_2_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄãﬂ•
const+
encoder_2_2_k_bias_to_fp16


Ä*0
name(
 
"
encoder_2_2_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ã„‹
conv
x

x_15_cast_fp16*
weight 

encoder_2_2_k_weight_to_fp16&
bias

encoder_2_2_k_bias_to_fp16
strides

k_9_strides_0
pad_type

k_9_pad_type_0
pad

	k_9_pad_0 
	dilations

k_9_dilations_0
groups

k_9_groups_00
k_9_cast_fp16



Ä
@
@*#
name

"
k_9_cast_fp16a
const
v_9_pad_type_0
*$
name

"
v_9_pad_type_0*
val

	"
validl
const
v_9_strides_0


*#
name

"
v_9_strides_0*
val




f
const
	v_9_pad_0


*
name

"
	v_9_pad_0*!
val





    p
const
v_9_dilations_0


*%
name

"
v_9_dilations_0*
val




Y
const
v_9_groups_0
*"
name

"
v_9_groups_0*
val


œ
const@
encoder_2_2_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_2_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄê„•
const+
encoder_2_2_v_bias_to_fp16


Ä*0
name(
 
"
encoder_2_2_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿êÎ‹
conv
x

x_15_cast_fp16*
weight 

encoder_2_2_v_weight_to_fp16&
bias

encoder_2_2_v_bias_to_fp16
strides

v_9_strides_0
pad_type

v_9_pad_type_0
pad

	v_9_pad_0 
	dilations

v_9_dilations_0
groups

v_9_groups_00
v_9_cast_fp16



Ä
@
@*#
name

"
v_9_cast_fp16k
const
var_444


*
name


"
op_444*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ï
reshape
x

q_9_cast_fp16
shape
	
var_4444
var_445_cast_fp16




 
Ä *&
name

"
op_445_cast_fp16k
const
var_450


*
name


"
op_450*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ï
reshape
x

k_9_cast_fp16
shape
	
var_4504
var_451_cast_fp16




 
Ä *&
name

"
op_451_cast_fp16k
const
var_456


*
name


"
op_456*+
val$




ˇˇˇˇˇˇˇˇˇ@Ä ï
reshape
x

v_9_cast_fp16
shape
	
var_4564
var_457_cast_fp16




@
Ä *&
name

"
op_457_cast_fp16d
const
mul_2_y_0_to_fp16

*'
name

"
mul_2_y_0_to_fp16*
val


:
®1ò
mul
x

var_445_cast_fp16
y

mul_2_y_0_to_fp162
mul_2_cast_fp16




 
Ä *%
name

"
mul_2_cast_fp16m
const
matmul_2_transpose_x_1
*,
name$

"
matmul_2_transpose_x_1*
val


m
const
matmul_2_transpose_y_1
*,
name$

"
matmul_2_transpose_y_1*
val


 ˆ
matmul
x

mul_2_cast_fp16
y

var_451_cast_fp16)
transpose_x

matmul_2_transpose_x_1)
transpose_y

matmul_2_transpose_y_16
matmul_2_cast_fp16 




Ä 
Ä *(
name 

"
matmul_2_cast_fp16j
const
softmax_2_axis_0
*&
name

"
softmax_2_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_2_cast_fp16
axis

softmax_2_axis_07
softmax_2_cast_fp16 




Ä 
Ä *)
name!

"
softmax_2_cast_fp16e
const
x_17_transpose_x_1
*(
name 

"
x_17_transpose_x_1*
val


 e
const
x_17_transpose_y_1
*(
name 

"
x_17_transpose_y_1*
val


È
matmul
x

softmax_2_cast_fp16
y

var_457_cast_fp16%
transpose_x

x_17_transpose_x_1%
transpose_y

x_17_transpose_y_11
x_17_cast_fp16




Ä 
@*$
name

"
x_17_cast_fp16a
const
var_461


*
name


"
op_461*!
val





 k
const
var_463


*
name


"
op_463*+
val$




ˇˇˇˇˇˇˇˇˇÄ@@î
	transpose
x

x_17_cast_fp16
perm
	
var_4614
var_462_cast_fp16




@
Ä *#
name

"
transpose_222ú
reshape
x

var_462_cast_fp16
shape
	
var_4635
input_99_cast_fp16



Ä
@
@*(
name 

"
input_99_cast_fp16m
const
input_101_pad_type_0
**
name"

"
input_101_pad_type_0*
val

	"
validx
const#
input_101_strides_0


*)
name!

"
input_101_strides_0*
val




r
const
input_101_pad_0


*%
name

"
input_101_pad_0*!
val





    |
const%
input_101_dilations_0


*+
name#

"
input_101_dilations_0*
val




e
const
input_101_groups_0
*(
name 

"
input_101_groups_0*
val


’
constC
encoder_2_2_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_2_2_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄôÎ´
const.
encoder_2_2_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_2_2_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ôÛê
conv
x

input_99_cast_fp16-
weight#
!
encoder_2_2_proj_weight_to_fp16)
bias!

encoder_2_2_proj_bias_to_fp16"
strides

input_101_strides_0$
pad_type

input_101_pad_type_0
pad

input_101_pad_0&
	dilations

input_101_dilations_0 
groups

input_101_groups_06
input_101_cast_fp16



Ä
@
@*)
name!

"
input_101_cast_fp16m
const
input_103_pad_type_0
**
name"

"
input_103_pad_type_0*
val

	"
validx
const#
input_103_strides_0


*)
name!

"
input_103_strides_0*
val




r
const
input_103_pad_0


*%
name

"
input_103_pad_0*!
val





    |
const%
input_103_dilations_0


*+
name#

"
input_103_dilations_0*
val




e
const
input_103_groups_0
*(
name 

"
input_103_groups_0*
val


◊
constD
 encoder_2_2_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_2_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄúÛ≠
const/
encoder_2_2_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_2_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ú˚ì
conv
x

input_101_cast_fp16.
weight$
"
 encoder_2_2_ffn_0_weight_to_fp16*
bias"
 
encoder_2_2_ffn_0_bias_to_fp16"
strides

input_103_strides_0$
pad_type

input_103_pad_type_0
pad

input_103_pad_0&
	dilations

input_103_dilations_0 
groups

input_103_groups_06
input_103_cast_fp16



Ä
@
@*)
name!

"
input_103_cast_fp16e
const
input_105_mode_0
*&
name

"
input_105_mode_0*
val

	"
EXACT•
gelu
x

input_103_cast_fp16
mode

input_105_mode_06
input_105_cast_fp16



Ä
@
@*)
name!

"
input_105_cast_fp16c
const
x_19_pad_type_0
*%
name

"
x_19_pad_type_0*
val

	"
validn
const
x_19_strides_0


*$
name

"
x_19_strides_0*
val




h
const

x_19_pad_0


* 
name

"

x_19_pad_0*!
val





    r
const 
x_19_dilations_0


*&
name

"
x_19_dilations_0*
val




[
const
x_19_groups_0
*#
name

"
x_19_groups_0*
val


◊
constD
 encoder_2_2_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_2_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ•˚≠
const/
encoder_2_2_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_2_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿•É
conv
x

input_105_cast_fp16.
weight$
"
 encoder_2_2_ffn_2_weight_to_fp16*
bias"
 
encoder_2_2_ffn_2_bias_to_fp16
strides

x_19_strides_0
pad_type

x_19_pad_type_0
pad


x_19_pad_0!
	dilations

x_19_dilations_0
groups

x_19_groups_01
x_19_cast_fp16



Ä
@
@*$
name

"
x_19_cast_fp16c
const
q_13_pad_type_0
*%
name

"
q_13_pad_type_0*
val

	"
validn
const
q_13_strides_0


*$
name

"
q_13_strides_0*
val




h
const

q_13_pad_0


* 
name

"

q_13_pad_0*!
val





    r
const 
q_13_dilations_0


*&
name

"
q_13_dilations_0*
val




[
const
q_13_groups_0
*#
name

"
q_13_groups_0*
val


œ
const@
encoder_2_3_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_3_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ®É•
const+
encoder_2_3_q_bias_to_fp16


Ä*0
name(
 
"
encoder_2_3_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿®á„
conv
x

x_19_cast_fp16*
weight 

encoder_2_3_q_weight_to_fp16&
bias

encoder_2_3_q_bias_to_fp16
strides

q_13_strides_0
pad_type

q_13_pad_type_0
pad


q_13_pad_0!
	dilations

q_13_dilations_0
groups

q_13_groups_01
q_13_cast_fp16



Ä
@
@*$
name

"
q_13_cast_fp16c
const
k_13_pad_type_0
*%
name

"
k_13_pad_type_0*
val

	"
validn
const
k_13_strides_0


*$
name

"
k_13_strides_0*
val




h
const

k_13_pad_0


* 
name

"

k_13_pad_0*!
val





    r
const 
k_13_dilations_0


*&
name

"
k_13_dilations_0*
val




[
const
k_13_groups_0
*#
name

"
k_13_groups_0*
val


œ
const@
encoder_2_3_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_3_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ≠á•
const+
encoder_2_3_k_bias_to_fp16


Ä*0
name(
 
"
encoder_2_3_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿≠ã„
conv
x

x_19_cast_fp16*
weight 

encoder_2_3_k_weight_to_fp16&
bias

encoder_2_3_k_bias_to_fp16
strides

k_13_strides_0
pad_type

k_13_pad_type_0
pad


k_13_pad_0!
	dilations

k_13_dilations_0
groups

k_13_groups_01
k_13_cast_fp16



Ä
@
@*$
name

"
k_13_cast_fp16c
const
v_13_pad_type_0
*%
name

"
v_13_pad_type_0*
val

	"
validn
const
v_13_strides_0


*$
name

"
v_13_strides_0*
val




h
const

v_13_pad_0


* 
name

"

v_13_pad_0*!
val





    r
const 
v_13_dilations_0


*&
name

"
v_13_dilations_0*
val




[
const
v_13_groups_0
*#
name

"
v_13_groups_0*
val


œ
const@
encoder_2_3_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_3_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ≤ã•
const+
encoder_2_3_v_bias_to_fp16


Ä*0
name(
 
"
encoder_2_3_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿≤ì„
conv
x

x_19_cast_fp16*
weight 

encoder_2_3_v_weight_to_fp16&
bias

encoder_2_3_v_bias_to_fp16
strides

v_13_strides_0
pad_type

v_13_pad_type_0
pad


v_13_pad_0!
	dilations

v_13_dilations_0
groups

v_13_groups_01
v_13_cast_fp16



Ä
@
@*$
name

"
v_13_cast_fp16k
const
var_521


*
name


"
op_521*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ñ
reshape
x

q_13_cast_fp16
shape
	
var_5214
var_522_cast_fp16




 
Ä *&
name

"
op_522_cast_fp16k
const
var_527


*
name


"
op_527*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ñ
reshape
x

k_13_cast_fp16
shape
	
var_5274
var_528_cast_fp16




 
Ä *&
name

"
op_528_cast_fp16k
const
var_533


*
name


"
op_533*+
val$




ˇˇˇˇˇˇˇˇˇ@Ä ñ
reshape
x

v_13_cast_fp16
shape
	
var_5334
var_534_cast_fp16




@
Ä *&
name

"
op_534_cast_fp16d
const
mul_3_y_0_to_fp16

*'
name

"
mul_3_y_0_to_fp16*
val


:
®1ò
mul
x

var_522_cast_fp16
y

mul_3_y_0_to_fp162
mul_3_cast_fp16




 
Ä *%
name

"
mul_3_cast_fp16m
const
matmul_3_transpose_x_1
*,
name$

"
matmul_3_transpose_x_1*
val


m
const
matmul_3_transpose_y_1
*,
name$

"
matmul_3_transpose_y_1*
val


 ˆ
matmul
x

mul_3_cast_fp16
y

var_528_cast_fp16)
transpose_x

matmul_3_transpose_x_1)
transpose_y

matmul_3_transpose_y_16
matmul_3_cast_fp16 




Ä 
Ä *(
name 

"
matmul_3_cast_fp16j
const
softmax_3_axis_0
*&
name

"
softmax_3_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_3_cast_fp16
axis

softmax_3_axis_07
softmax_3_cast_fp16 




Ä 
Ä *)
name!

"
softmax_3_cast_fp16e
const
x_21_transpose_x_1
*(
name 

"
x_21_transpose_x_1*
val


 e
const
x_21_transpose_y_1
*(
name 

"
x_21_transpose_y_1*
val


È
matmul
x

softmax_3_cast_fp16
y

var_534_cast_fp16%
transpose_x

x_21_transpose_x_1%
transpose_y

x_21_transpose_y_11
x_21_cast_fp16




Ä 
@*$
name

"
x_21_cast_fp16a
const
var_538


*
name


"
op_538*!
val





 k
const
var_540


*
name


"
op_540*+
val$




ˇˇˇˇˇˇˇˇˇÄ@@î
	transpose
x

x_21_cast_fp16
perm
	
var_5384
var_539_cast_fp16




@
Ä *#
name

"
transpose_221û
reshape
x

var_539_cast_fp16
shape
	
var_5406
input_107_cast_fp16



Ä
@
@*)
name!

"
input_107_cast_fp16m
const
input_109_pad_type_0
**
name"

"
input_109_pad_type_0*
val

	"
validx
const#
input_109_strides_0


*)
name!

"
input_109_strides_0*
val




r
const
input_109_pad_0


*%
name

"
input_109_pad_0*!
val





    |
const%
input_109_dilations_0


*+
name#

"
input_109_dilations_0*
val




e
const
input_109_groups_0
*(
name 

"
input_109_groups_0*
val


’
constC
encoder_2_3_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_2_3_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄªì´
const.
encoder_2_3_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_2_3_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ªõë
conv
x

input_107_cast_fp16-
weight#
!
encoder_2_3_proj_weight_to_fp16)
bias!

encoder_2_3_proj_bias_to_fp16"
strides

input_109_strides_0$
pad_type

input_109_pad_type_0
pad

input_109_pad_0&
	dilations

input_109_dilations_0 
groups

input_109_groups_06
input_109_cast_fp16



Ä
@
@*)
name!

"
input_109_cast_fp16m
const
input_111_pad_type_0
**
name"

"
input_111_pad_type_0*
val

	"
validx
const#
input_111_strides_0


*)
name!

"
input_111_strides_0*
val




r
const
input_111_pad_0


*%
name

"
input_111_pad_0*!
val





    |
const%
input_111_dilations_0


*+
name#

"
input_111_dilations_0*
val




e
const
input_111_groups_0
*(
name 

"
input_111_groups_0*
val


◊
constD
 encoder_2_3_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_3_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄæõ≠
const/
encoder_2_3_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_3_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿æ£ì
conv
x

input_109_cast_fp16.
weight$
"
 encoder_2_3_ffn_0_weight_to_fp16*
bias"
 
encoder_2_3_ffn_0_bias_to_fp16"
strides

input_111_strides_0$
pad_type

input_111_pad_type_0
pad

input_111_pad_0&
	dilations

input_111_dilations_0 
groups

input_111_groups_06
input_111_cast_fp16



Ä
@
@*)
name!

"
input_111_cast_fp16e
const
input_113_mode_0
*&
name

"
input_113_mode_0*
val

	"
EXACT•
gelu
x

input_111_cast_fp16
mode

input_113_mode_06
input_113_cast_fp16



Ä
@
@*)
name!

"
input_113_cast_fp16c
const
x_23_pad_type_0
*%
name

"
x_23_pad_type_0*
val

	"
validn
const
x_23_strides_0


*$
name

"
x_23_strides_0*
val




h
const

x_23_pad_0


* 
name

"

x_23_pad_0*!
val





    r
const 
x_23_dilations_0


*&
name

"
x_23_dilations_0*
val




[
const
x_23_groups_0
*#
name

"
x_23_groups_0*
val


◊
constD
 encoder_2_3_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_3_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ«£≠
const/
encoder_2_3_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_3_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿«´
conv
x

input_113_cast_fp16.
weight$
"
 encoder_2_3_ffn_2_weight_to_fp16*
bias"
 
encoder_2_3_ffn_2_bias_to_fp16
strides

x_23_strides_0
pad_type

x_23_pad_type_0
pad


x_23_pad_0!
	dilations

x_23_dilations_0
groups

x_23_groups_01
x_23_cast_fp16



Ä
@
@*$
name

"
x_23_cast_fp16c
const
q_17_pad_type_0
*%
name

"
q_17_pad_type_0*
val

	"
validn
const
q_17_strides_0


*$
name

"
q_17_strides_0*
val




h
const

q_17_pad_0


* 
name

"

q_17_pad_0*!
val





    r
const 
q_17_dilations_0


*&
name

"
q_17_dilations_0*
val




[
const
q_17_groups_0
*#
name

"
q_17_groups_0*
val


œ
const@
encoder_2_4_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_4_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ ´•
const+
encoder_2_4_q_bias_to_fp16


Ä*0
name(
 
"
encoder_2_4_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ Ø„
conv
x

x_23_cast_fp16*
weight 

encoder_2_4_q_weight_to_fp16&
bias

encoder_2_4_q_bias_to_fp16
strides

q_17_strides_0
pad_type

q_17_pad_type_0
pad


q_17_pad_0!
	dilations

q_17_dilations_0
groups

q_17_groups_01
q_17_cast_fp16



Ä
@
@*$
name

"
q_17_cast_fp16c
const
k_17_pad_type_0
*%
name

"
k_17_pad_type_0*
val

	"
validn
const
k_17_strides_0


*$
name

"
k_17_strides_0*
val




h
const

k_17_pad_0


* 
name

"

k_17_pad_0*!
val





    r
const 
k_17_dilations_0


*&
name

"
k_17_dilations_0*
val




[
const
k_17_groups_0
*#
name

"
k_17_groups_0*
val


œ
const@
encoder_2_4_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_4_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄœØ•
const+
encoder_2_4_k_bias_to_fp16


Ä*0
name(
 
"
encoder_2_4_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿œ≥„
conv
x

x_23_cast_fp16*
weight 

encoder_2_4_k_weight_to_fp16&
bias

encoder_2_4_k_bias_to_fp16
strides

k_17_strides_0
pad_type

k_17_pad_type_0
pad


k_17_pad_0!
	dilations

k_17_dilations_0
groups

k_17_groups_01
k_17_cast_fp16



Ä
@
@*$
name

"
k_17_cast_fp16c
const
v_17_pad_type_0
*%
name

"
v_17_pad_type_0*
val

	"
validn
const
v_17_strides_0


*$
name

"
v_17_strides_0*
val




h
const

v_17_pad_0


* 
name

"

v_17_pad_0*!
val





    r
const 
v_17_dilations_0


*&
name

"
v_17_dilations_0*
val




[
const
v_17_groups_0
*#
name

"
v_17_groups_0*
val


œ
const@
encoder_2_4_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_2_4_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ‘≥•
const+
encoder_2_4_v_bias_to_fp16


Ä*0
name(
 
"
encoder_2_4_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿‘ª„
conv
x

x_23_cast_fp16*
weight 

encoder_2_4_v_weight_to_fp16&
bias

encoder_2_4_v_bias_to_fp16
strides

v_17_strides_0
pad_type

v_17_pad_type_0
pad


v_17_pad_0!
	dilations

v_17_dilations_0
groups

v_17_groups_01
v_17_cast_fp16



Ä
@
@*$
name

"
v_17_cast_fp16k
const
var_598


*
name


"
op_598*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ñ
reshape
x

q_17_cast_fp16
shape
	
var_5984
var_599_cast_fp16




 
Ä *&
name

"
op_599_cast_fp16k
const
var_604


*
name


"
op_604*+
val$




ˇˇˇˇˇˇˇˇˇ Ä ñ
reshape
x

k_17_cast_fp16
shape
	
var_6044
var_605_cast_fp16




 
Ä *&
name

"
op_605_cast_fp16k
const
var_610


*
name


"
op_610*+
val$




ˇˇˇˇˇˇˇˇˇ@Ä ñ
reshape
x

v_17_cast_fp16
shape
	
var_6104
var_611_cast_fp16




@
Ä *&
name

"
op_611_cast_fp16d
const
mul_4_y_0_to_fp16

*'
name

"
mul_4_y_0_to_fp16*
val


:
®1ò
mul
x

var_599_cast_fp16
y

mul_4_y_0_to_fp162
mul_4_cast_fp16




 
Ä *%
name

"
mul_4_cast_fp16m
const
matmul_4_transpose_x_1
*,
name$

"
matmul_4_transpose_x_1*
val


m
const
matmul_4_transpose_y_1
*,
name$

"
matmul_4_transpose_y_1*
val


 ˆ
matmul
x

mul_4_cast_fp16
y

var_605_cast_fp16)
transpose_x

matmul_4_transpose_x_1)
transpose_y

matmul_4_transpose_y_16
matmul_4_cast_fp16 




Ä 
Ä *(
name 

"
matmul_4_cast_fp16j
const
softmax_4_axis_0
*&
name

"
softmax_4_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_4_cast_fp16
axis

softmax_4_axis_07
softmax_4_cast_fp16 




Ä 
Ä *)
name!

"
softmax_4_cast_fp16e
const
x_25_transpose_x_1
*(
name 

"
x_25_transpose_x_1*
val


 e
const
x_25_transpose_y_1
*(
name 

"
x_25_transpose_y_1*
val


È
matmul
x

softmax_4_cast_fp16
y

var_611_cast_fp16%
transpose_x

x_25_transpose_x_1%
transpose_y

x_25_transpose_y_11
x_25_cast_fp16




Ä 
@*$
name

"
x_25_cast_fp16a
const
var_615


*
name


"
op_615*!
val





 k
const
var_617


*
name


"
op_617*+
val$




ˇˇˇˇˇˇˇˇˇÄ@@î
	transpose
x

x_25_cast_fp16
perm
	
var_6154
var_616_cast_fp16




@
Ä *#
name

"
transpose_220û
reshape
x

var_616_cast_fp16
shape
	
var_6176
input_115_cast_fp16



Ä
@
@*)
name!

"
input_115_cast_fp16m
const
input_117_pad_type_0
**
name"

"
input_117_pad_type_0*
val

	"
validx
const#
input_117_strides_0


*)
name!

"
input_117_strides_0*
val




r
const
input_117_pad_0


*%
name

"
input_117_pad_0*!
val





    |
const%
input_117_dilations_0


*+
name#

"
input_117_dilations_0*
val




e
const
input_117_groups_0
*(
name 

"
input_117_groups_0*
val


’
constC
encoder_2_4_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_2_4_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ›ª´
const.
encoder_2_4_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_2_4_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿›√ë
conv
x

input_115_cast_fp16-
weight#
!
encoder_2_4_proj_weight_to_fp16)
bias!

encoder_2_4_proj_bias_to_fp16"
strides

input_117_strides_0$
pad_type

input_117_pad_type_0
pad

input_117_pad_0&
	dilations

input_117_dilations_0 
groups

input_117_groups_06
input_117_cast_fp16



Ä
@
@*)
name!

"
input_117_cast_fp16m
const
input_119_pad_type_0
**
name"

"
input_119_pad_type_0*
val

	"
validx
const#
input_119_strides_0


*)
name!

"
input_119_strides_0*
val




r
const
input_119_pad_0


*%
name

"
input_119_pad_0*!
val





    |
const%
input_119_dilations_0


*+
name#

"
input_119_dilations_0*
val




e
const
input_119_groups_0
*(
name 

"
input_119_groups_0*
val


◊
constD
 encoder_2_4_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_4_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ‡√≠
const/
encoder_2_4_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_4_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿‡Àì
conv
x

input_117_cast_fp16.
weight$
"
 encoder_2_4_ffn_0_weight_to_fp16*
bias"
 
encoder_2_4_ffn_0_bias_to_fp16"
strides

input_119_strides_0$
pad_type

input_119_pad_type_0
pad

input_119_pad_0&
	dilations

input_119_dilations_0 
groups

input_119_groups_06
input_119_cast_fp16



Ä
@
@*)
name!

"
input_119_cast_fp16e
const
input_121_mode_0
*&
name

"
input_121_mode_0*
val

	"
EXACT•
gelu
x

input_119_cast_fp16
mode

input_121_mode_06
input_121_cast_fp16



Ä
@
@*)
name!

"
input_121_cast_fp16c
const
x_27_pad_type_0
*%
name

"
x_27_pad_type_0*
val

	"
validn
const
x_27_strides_0


*$
name

"
x_27_strides_0*
val




h
const

x_27_pad_0


* 
name

"

x_27_pad_0*!
val





    r
const 
x_27_dilations_0


*&
name

"
x_27_dilations_0*
val




[
const
x_27_groups_0
*#
name

"
x_27_groups_0*
val


◊
constD
 encoder_2_4_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_2_4_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÈÀ≠
const/
encoder_2_4_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_2_4_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿È”
conv
x

input_121_cast_fp16.
weight$
"
 encoder_2_4_ffn_2_weight_to_fp16*
bias"
 
encoder_2_4_ffn_2_bias_to_fp16
strides

x_27_strides_0
pad_type

x_27_pad_type_0
pad


x_27_pad_0!
	dilations

x_27_dilations_0
groups

x_27_groups_01
x_27_cast_fp16



Ä
@
@*$
name

"
x_27_cast_fp16_
const
var_643


*
name


"
op_643*
val




_
const
var_644


*
name


"
op_644*
val




d
const
x_29_pad_type_0
*%
name

"
x_29_pad_type_0*
val


"
customh
const

x_29_pad_0


* 
name

"

x_29_pad_0*!
val





    á
const+
#x_29_exclude_padding_from_average_0
*9
name1
)
'"%
#x_29_exclude_padding_from_average_0*
val


 a
const
x_29_ceil_mode_0
*&
name

"
x_29_ceil_mode_0*
val


 ’
avg_poolG
exclude_padding_from_average'
%
#x_29_exclude_padding_from_average_0
x

x_27_cast_fp16
kernel_sizes
	
var_643
strides
	
var_644
pad_type

x_29_pad_type_0
pad


x_29_pad_0!
	ceil_mode

x_29_ceil_mode_01
x_29_cast_fp16



Ä
 
 *$
name

"
x_29_cast_fp16c
const
q_21_pad_type_0
*%
name

"
q_21_pad_type_0*
val

	"
validn
const
q_21_strides_0


*$
name

"
q_21_strides_0*
val




h
const

q_21_pad_0


* 
name

"

q_21_pad_0*!
val





    r
const 
q_21_dilations_0


*&
name

"
q_21_dilations_0*
val




[
const
q_21_groups_0
*#
name

"
q_21_groups_0*
val


œ
const@
encoder_3_0_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_0_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÏ”•
const+
encoder_3_0_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_0_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Ï◊„
conv
x

x_29_cast_fp16*
weight 

encoder_3_0_q_weight_to_fp16&
bias

encoder_3_0_q_bias_to_fp16
strides

q_21_strides_0
pad_type

q_21_pad_type_0
pad


q_21_pad_0!
	dilations

q_21_dilations_0
groups

q_21_groups_01
q_21_cast_fp16



Ä
 
 *$
name

"
q_21_cast_fp16c
const
k_21_pad_type_0
*%
name

"
k_21_pad_type_0*
val

	"
validn
const
k_21_strides_0


*$
name

"
k_21_strides_0*
val




h
const

k_21_pad_0


* 
name

"

k_21_pad_0*!
val





    r
const 
k_21_dilations_0


*&
name

"
k_21_dilations_0*
val




[
const
k_21_groups_0
*#
name

"
k_21_groups_0*
val


œ
const@
encoder_3_0_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_0_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÒ◊•
const+
encoder_3_0_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_0_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Ò€„
conv
x

x_29_cast_fp16*
weight 

encoder_3_0_k_weight_to_fp16&
bias

encoder_3_0_k_bias_to_fp16
strides

k_21_strides_0
pad_type

k_21_pad_type_0
pad


k_21_pad_0!
	dilations

k_21_dilations_0
groups

k_21_groups_01
k_21_cast_fp16



Ä
 
 *$
name

"
k_21_cast_fp16c
const
v_21_pad_type_0
*%
name

"
v_21_pad_type_0*
val

	"
validn
const
v_21_strides_0


*$
name

"
v_21_strides_0*
val




h
const

v_21_pad_0


* 
name

"

v_21_pad_0*!
val





    r
const 
v_21_dilations_0


*&
name

"
v_21_dilations_0*
val




[
const
v_21_groups_0
*#
name

"
v_21_groups_0*
val


œ
const@
encoder_3_0_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_0_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄˆ€•
const+
encoder_3_0_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_0_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ˆ„„
conv
x

x_29_cast_fp16*
weight 

encoder_3_0_v_weight_to_fp16&
bias

encoder_3_0_v_bias_to_fp16
strides

v_21_strides_0
pad_type

v_21_pad_type_0
pad


v_21_pad_0!
	dilations

v_21_dilations_0
groups

v_21_groups_01
v_21_cast_fp16



Ä
 
 *$
name

"
v_21_cast_fp16k
const
var_689


*
name


"
op_689*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

q_21_cast_fp16
shape
	
var_6894
var_690_cast_fp16




 
Ä*&
name

"
op_690_cast_fp16k
const
var_695


*
name


"
op_695*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

k_21_cast_fp16
shape
	
var_6954
var_696_cast_fp16




 
Ä*&
name

"
op_696_cast_fp16k
const
var_701


*
name


"
op_701*+
val$




ˇˇˇˇˇˇˇˇˇ@Äñ
reshape
x

v_21_cast_fp16
shape
	
var_7014
var_702_cast_fp16




@
Ä*&
name

"
op_702_cast_fp16d
const
mul_5_y_0_to_fp16

*'
name

"
mul_5_y_0_to_fp16*
val


:
®1ò
mul
x

var_690_cast_fp16
y

mul_5_y_0_to_fp162
mul_5_cast_fp16




 
Ä*%
name

"
mul_5_cast_fp16m
const
matmul_5_transpose_x_1
*,
name$

"
matmul_5_transpose_x_1*
val


m
const
matmul_5_transpose_y_1
*,
name$

"
matmul_5_transpose_y_1*
val


 ˆ
matmul
x

mul_5_cast_fp16
y

var_696_cast_fp16)
transpose_x

matmul_5_transpose_x_1)
transpose_y

matmul_5_transpose_y_16
matmul_5_cast_fp16 




Ä
Ä*(
name 

"
matmul_5_cast_fp16j
const
softmax_5_axis_0
*&
name

"
softmax_5_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_5_cast_fp16
axis

softmax_5_axis_07
softmax_5_cast_fp16 




Ä
Ä*)
name!

"
softmax_5_cast_fp16e
const
x_31_transpose_x_1
*(
name 

"
x_31_transpose_x_1*
val


 e
const
x_31_transpose_y_1
*(
name 

"
x_31_transpose_y_1*
val


È
matmul
x

softmax_5_cast_fp16
y

var_702_cast_fp16%
transpose_x

x_31_transpose_x_1%
transpose_y

x_31_transpose_y_11
x_31_cast_fp16




Ä
@*$
name

"
x_31_cast_fp16a
const
var_706


*
name


"
op_706*!
val





 k
const
var_708


*
name


"
op_708*+
val$




ˇˇˇˇˇˇˇˇˇÄ  î
	transpose
x

x_31_cast_fp16
perm
	
var_7064
var_707_cast_fp16




@
Ä*#
name

"
transpose_219û
reshape
x

var_707_cast_fp16
shape
	
var_7086
input_123_cast_fp16



Ä
 
 *)
name!

"
input_123_cast_fp16m
const
input_125_pad_type_0
**
name"

"
input_125_pad_type_0*
val

	"
validx
const#
input_125_strides_0


*)
name!

"
input_125_strides_0*
val




r
const
input_125_pad_0


*%
name

"
input_125_pad_0*!
val





    |
const%
input_125_dilations_0


*+
name#

"
input_125_dilations_0*
val




e
const
input_125_groups_0
*(
name 

"
input_125_groups_0*
val


’
constC
encoder_3_0_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_0_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄˇ„´
const.
encoder_3_0_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_0_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ˇÎë
conv
x

input_123_cast_fp16-
weight#
!
encoder_3_0_proj_weight_to_fp16)
bias!

encoder_3_0_proj_bias_to_fp16"
strides

input_125_strides_0$
pad_type

input_125_pad_type_0
pad

input_125_pad_0&
	dilations

input_125_dilations_0 
groups

input_125_groups_06
input_125_cast_fp16



Ä
 
 *)
name!

"
input_125_cast_fp16m
const
input_127_pad_type_0
**
name"

"
input_127_pad_type_0*
val

	"
validx
const#
input_127_strides_0


*)
name!

"
input_127_strides_0*
val




r
const
input_127_pad_0


*%
name

"
input_127_pad_0*!
val





    |
const%
input_127_dilations_0


*+
name#

"
input_127_dilations_0*
val




e
const
input_127_groups_0
*(
name 

"
input_127_groups_0*
val


◊
constD
 encoder_3_0_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_0_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÇÏ≠
const/
encoder_3_0_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_0_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ÇÙì
conv
x

input_125_cast_fp16.
weight$
"
 encoder_3_0_ffn_0_weight_to_fp16*
bias"
 
encoder_3_0_ffn_0_bias_to_fp16"
strides

input_127_strides_0$
pad_type

input_127_pad_type_0
pad

input_127_pad_0&
	dilations

input_127_dilations_0 
groups

input_127_groups_06
input_127_cast_fp16



Ä
 
 *)
name!

"
input_127_cast_fp16e
const
input_129_mode_0
*&
name

"
input_129_mode_0*
val

	"
EXACT•
gelu
x

input_127_cast_fp16
mode

input_129_mode_06
input_129_cast_fp16



Ä
 
 *)
name!

"
input_129_cast_fp16c
const
x_33_pad_type_0
*%
name

"
x_33_pad_type_0*
val

	"
validn
const
x_33_strides_0


*$
name

"
x_33_strides_0*
val




h
const

x_33_pad_0


* 
name

"

x_33_pad_0*!
val





    r
const 
x_33_dilations_0


*&
name

"
x_33_dilations_0*
val




[
const
x_33_groups_0
*#
name

"
x_33_groups_0*
val


◊
constD
 encoder_3_0_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_0_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄãÙ≠
const/
encoder_3_0_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_0_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ã¸
conv
x

input_129_cast_fp16.
weight$
"
 encoder_3_0_ffn_2_weight_to_fp16*
bias"
 
encoder_3_0_ffn_2_bias_to_fp16
strides

x_33_strides_0
pad_type

x_33_pad_type_0
pad


x_33_pad_0!
	dilations

x_33_dilations_0
groups

x_33_groups_01
x_33_cast_fp16



Ä
 
 *$
name

"
x_33_cast_fp16c
const
q_25_pad_type_0
*%
name

"
q_25_pad_type_0*
val

	"
validn
const
q_25_strides_0


*$
name

"
q_25_strides_0*
val




h
const

q_25_pad_0


* 
name

"

q_25_pad_0*!
val





    r
const 
q_25_dilations_0


*&
name

"
q_25_dilations_0*
val




[
const
q_25_groups_0
*#
name

"
q_25_groups_0*
val


œ
const@
encoder_3_1_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_1_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄé¸•
const+
encoder_3_1_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_1_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿éÄ„
conv
x

x_33_cast_fp16*
weight 

encoder_3_1_q_weight_to_fp16&
bias

encoder_3_1_q_bias_to_fp16
strides

q_25_strides_0
pad_type

q_25_pad_type_0
pad


q_25_pad_0!
	dilations

q_25_dilations_0
groups

q_25_groups_01
q_25_cast_fp16



Ä
 
 *$
name

"
q_25_cast_fp16c
const
k_25_pad_type_0
*%
name

"
k_25_pad_type_0*
val

	"
validn
const
k_25_strides_0


*$
name

"
k_25_strides_0*
val




h
const

k_25_pad_0


* 
name

"

k_25_pad_0*!
val





    r
const 
k_25_dilations_0


*&
name

"
k_25_dilations_0*
val




[
const
k_25_groups_0
*#
name

"
k_25_groups_0*
val


œ
const@
encoder_3_1_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_1_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄìÄ•
const+
encoder_3_1_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_1_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ìÑ„
conv
x

x_33_cast_fp16*
weight 

encoder_3_1_k_weight_to_fp16&
bias

encoder_3_1_k_bias_to_fp16
strides

k_25_strides_0
pad_type

k_25_pad_type_0
pad


k_25_pad_0!
	dilations

k_25_dilations_0
groups

k_25_groups_01
k_25_cast_fp16



Ä
 
 *$
name

"
k_25_cast_fp16c
const
v_25_pad_type_0
*%
name

"
v_25_pad_type_0*
val

	"
validn
const
v_25_strides_0


*$
name

"
v_25_strides_0*
val




h
const

v_25_pad_0


* 
name

"

v_25_pad_0*!
val





    r
const 
v_25_dilations_0


*&
name

"
v_25_dilations_0*
val




[
const
v_25_groups_0
*#
name

"
v_25_groups_0*
val


œ
const@
encoder_3_1_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_1_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄòÑ•
const+
encoder_3_1_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_1_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿òå„
conv
x

x_33_cast_fp16*
weight 

encoder_3_1_v_weight_to_fp16&
bias

encoder_3_1_v_bias_to_fp16
strides

v_25_strides_0
pad_type

v_25_pad_type_0
pad


v_25_pad_0!
	dilations

v_25_dilations_0
groups

v_25_groups_01
v_25_cast_fp16



Ä
 
 *$
name

"
v_25_cast_fp16k
const
var_766


*
name


"
op_766*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

q_25_cast_fp16
shape
	
var_7664
var_767_cast_fp16




 
Ä*&
name

"
op_767_cast_fp16k
const
var_772


*
name


"
op_772*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

k_25_cast_fp16
shape
	
var_7724
var_773_cast_fp16




 
Ä*&
name

"
op_773_cast_fp16k
const
var_778


*
name


"
op_778*+
val$




ˇˇˇˇˇˇˇˇˇ@Äñ
reshape
x

v_25_cast_fp16
shape
	
var_7784
var_779_cast_fp16




@
Ä*&
name

"
op_779_cast_fp16d
const
mul_6_y_0_to_fp16

*'
name

"
mul_6_y_0_to_fp16*
val


:
®1ò
mul
x

var_767_cast_fp16
y

mul_6_y_0_to_fp162
mul_6_cast_fp16




 
Ä*%
name

"
mul_6_cast_fp16m
const
matmul_6_transpose_x_1
*,
name$

"
matmul_6_transpose_x_1*
val


m
const
matmul_6_transpose_y_1
*,
name$

"
matmul_6_transpose_y_1*
val


 ˆ
matmul
x

mul_6_cast_fp16
y

var_773_cast_fp16)
transpose_x

matmul_6_transpose_x_1)
transpose_y

matmul_6_transpose_y_16
matmul_6_cast_fp16 




Ä
Ä*(
name 

"
matmul_6_cast_fp16j
const
softmax_6_axis_0
*&
name

"
softmax_6_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_6_cast_fp16
axis

softmax_6_axis_07
softmax_6_cast_fp16 




Ä
Ä*)
name!

"
softmax_6_cast_fp16e
const
x_35_transpose_x_1
*(
name 

"
x_35_transpose_x_1*
val


 e
const
x_35_transpose_y_1
*(
name 

"
x_35_transpose_y_1*
val


È
matmul
x

softmax_6_cast_fp16
y

var_779_cast_fp16%
transpose_x

x_35_transpose_x_1%
transpose_y

x_35_transpose_y_11
x_35_cast_fp16




Ä
@*$
name

"
x_35_cast_fp16a
const
var_783


*
name


"
op_783*!
val





 k
const
var_785


*
name


"
op_785*+
val$




ˇˇˇˇˇˇˇˇˇÄ  î
	transpose
x

x_35_cast_fp16
perm
	
var_7834
var_784_cast_fp16




@
Ä*#
name

"
transpose_218û
reshape
x

var_784_cast_fp16
shape
	
var_7856
input_131_cast_fp16



Ä
 
 *)
name!

"
input_131_cast_fp16m
const
input_133_pad_type_0
**
name"

"
input_133_pad_type_0*
val

	"
validx
const#
input_133_strides_0


*)
name!

"
input_133_strides_0*
val




r
const
input_133_pad_0


*%
name

"
input_133_pad_0*!
val





    |
const%
input_133_dilations_0


*+
name#

"
input_133_dilations_0*
val




e
const
input_133_groups_0
*(
name 

"
input_133_groups_0*
val


’
constC
encoder_3_1_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_1_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ°å´
const.
encoder_3_1_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_1_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿°îë
conv
x

input_131_cast_fp16-
weight#
!
encoder_3_1_proj_weight_to_fp16)
bias!

encoder_3_1_proj_bias_to_fp16"
strides

input_133_strides_0$
pad_type

input_133_pad_type_0
pad

input_133_pad_0&
	dilations

input_133_dilations_0 
groups

input_133_groups_06
input_133_cast_fp16



Ä
 
 *)
name!

"
input_133_cast_fp16m
const
input_135_pad_type_0
**
name"

"
input_135_pad_type_0*
val

	"
validx
const#
input_135_strides_0


*)
name!

"
input_135_strides_0*
val




r
const
input_135_pad_0


*%
name

"
input_135_pad_0*!
val





    |
const%
input_135_dilations_0


*+
name#

"
input_135_dilations_0*
val




e
const
input_135_groups_0
*(
name 

"
input_135_groups_0*
val


◊
constD
 encoder_3_1_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_1_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ§î≠
const/
encoder_3_1_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_1_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿§úì
conv
x

input_133_cast_fp16.
weight$
"
 encoder_3_1_ffn_0_weight_to_fp16*
bias"
 
encoder_3_1_ffn_0_bias_to_fp16"
strides

input_135_strides_0$
pad_type

input_135_pad_type_0
pad

input_135_pad_0&
	dilations

input_135_dilations_0 
groups

input_135_groups_06
input_135_cast_fp16



Ä
 
 *)
name!

"
input_135_cast_fp16e
const
input_137_mode_0
*&
name

"
input_137_mode_0*
val

	"
EXACT•
gelu
x

input_135_cast_fp16
mode

input_137_mode_06
input_137_cast_fp16



Ä
 
 *)
name!

"
input_137_cast_fp16c
const
x_37_pad_type_0
*%
name

"
x_37_pad_type_0*
val

	"
validn
const
x_37_strides_0


*$
name

"
x_37_strides_0*
val




h
const

x_37_pad_0


* 
name

"

x_37_pad_0*!
val





    r
const 
x_37_dilations_0


*&
name

"
x_37_dilations_0*
val




[
const
x_37_groups_0
*#
name

"
x_37_groups_0*
val


◊
constD
 encoder_3_1_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_1_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ≠ú≠
const/
encoder_3_1_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_1_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿≠§
conv
x

input_137_cast_fp16.
weight$
"
 encoder_3_1_ffn_2_weight_to_fp16*
bias"
 
encoder_3_1_ffn_2_bias_to_fp16
strides

x_37_strides_0
pad_type

x_37_pad_type_0
pad


x_37_pad_0!
	dilations

x_37_dilations_0
groups

x_37_groups_01
x_37_cast_fp16



Ä
 
 *$
name

"
x_37_cast_fp16c
const
q_29_pad_type_0
*%
name

"
q_29_pad_type_0*
val

	"
validn
const
q_29_strides_0


*$
name

"
q_29_strides_0*
val




h
const

q_29_pad_0


* 
name

"

q_29_pad_0*!
val





    r
const 
q_29_dilations_0


*&
name

"
q_29_dilations_0*
val




[
const
q_29_groups_0
*#
name

"
q_29_groups_0*
val


œ
const@
encoder_3_2_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_2_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ∞§•
const+
encoder_3_2_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_2_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿∞®„
conv
x

x_37_cast_fp16*
weight 

encoder_3_2_q_weight_to_fp16&
bias

encoder_3_2_q_bias_to_fp16
strides

q_29_strides_0
pad_type

q_29_pad_type_0
pad


q_29_pad_0!
	dilations

q_29_dilations_0
groups

q_29_groups_01
q_29_cast_fp16



Ä
 
 *$
name

"
q_29_cast_fp16c
const
k_29_pad_type_0
*%
name

"
k_29_pad_type_0*
val

	"
validn
const
k_29_strides_0


*$
name

"
k_29_strides_0*
val




h
const

k_29_pad_0


* 
name

"

k_29_pad_0*!
val





    r
const 
k_29_dilations_0


*&
name

"
k_29_dilations_0*
val




[
const
k_29_groups_0
*#
name

"
k_29_groups_0*
val


œ
const@
encoder_3_2_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_2_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄµ®•
const+
encoder_3_2_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_2_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿µ¨„
conv
x

x_37_cast_fp16*
weight 

encoder_3_2_k_weight_to_fp16&
bias

encoder_3_2_k_bias_to_fp16
strides

k_29_strides_0
pad_type

k_29_pad_type_0
pad


k_29_pad_0!
	dilations

k_29_dilations_0
groups

k_29_groups_01
k_29_cast_fp16



Ä
 
 *$
name

"
k_29_cast_fp16c
const
v_29_pad_type_0
*%
name

"
v_29_pad_type_0*
val

	"
validn
const
v_29_strides_0


*$
name

"
v_29_strides_0*
val




h
const

v_29_pad_0


* 
name

"

v_29_pad_0*!
val





    r
const 
v_29_dilations_0


*&
name

"
v_29_dilations_0*
val




[
const
v_29_groups_0
*#
name

"
v_29_groups_0*
val


œ
const@
encoder_3_2_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_2_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ∫¨•
const+
encoder_3_2_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_2_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿∫¥„
conv
x

x_37_cast_fp16*
weight 

encoder_3_2_v_weight_to_fp16&
bias

encoder_3_2_v_bias_to_fp16
strides

v_29_strides_0
pad_type

v_29_pad_type_0
pad


v_29_pad_0!
	dilations

v_29_dilations_0
groups

v_29_groups_01
v_29_cast_fp16



Ä
 
 *$
name

"
v_29_cast_fp16k
const
var_843


*
name


"
op_843*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

q_29_cast_fp16
shape
	
var_8434
var_844_cast_fp16




 
Ä*&
name

"
op_844_cast_fp16k
const
var_849


*
name


"
op_849*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

k_29_cast_fp16
shape
	
var_8494
var_850_cast_fp16




 
Ä*&
name

"
op_850_cast_fp16k
const
var_855


*
name


"
op_855*+
val$




ˇˇˇˇˇˇˇˇˇ@Äñ
reshape
x

v_29_cast_fp16
shape
	
var_8554
var_856_cast_fp16




@
Ä*&
name

"
op_856_cast_fp16d
const
mul_7_y_0_to_fp16

*'
name

"
mul_7_y_0_to_fp16*
val


:
®1ò
mul
x

var_844_cast_fp16
y

mul_7_y_0_to_fp162
mul_7_cast_fp16




 
Ä*%
name

"
mul_7_cast_fp16m
const
matmul_7_transpose_x_1
*,
name$

"
matmul_7_transpose_x_1*
val


m
const
matmul_7_transpose_y_1
*,
name$

"
matmul_7_transpose_y_1*
val


 ˆ
matmul
x

mul_7_cast_fp16
y

var_850_cast_fp16)
transpose_x

matmul_7_transpose_x_1)
transpose_y

matmul_7_transpose_y_16
matmul_7_cast_fp16 




Ä
Ä*(
name 

"
matmul_7_cast_fp16j
const
softmax_7_axis_0
*&
name

"
softmax_7_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_7_cast_fp16
axis

softmax_7_axis_07
softmax_7_cast_fp16 




Ä
Ä*)
name!

"
softmax_7_cast_fp16e
const
x_39_transpose_x_1
*(
name 

"
x_39_transpose_x_1*
val


 e
const
x_39_transpose_y_1
*(
name 

"
x_39_transpose_y_1*
val


È
matmul
x

softmax_7_cast_fp16
y

var_856_cast_fp16%
transpose_x

x_39_transpose_x_1%
transpose_y

x_39_transpose_y_11
x_39_cast_fp16




Ä
@*$
name

"
x_39_cast_fp16a
const
var_860


*
name


"
op_860*!
val





 k
const
var_862


*
name


"
op_862*+
val$




ˇˇˇˇˇˇˇˇˇÄ  î
	transpose
x

x_39_cast_fp16
perm
	
var_8604
var_861_cast_fp16




@
Ä*#
name

"
transpose_217û
reshape
x

var_861_cast_fp16
shape
	
var_8626
input_139_cast_fp16



Ä
 
 *)
name!

"
input_139_cast_fp16m
const
input_141_pad_type_0
**
name"

"
input_141_pad_type_0*
val

	"
validx
const#
input_141_strides_0


*)
name!

"
input_141_strides_0*
val




r
const
input_141_pad_0


*%
name

"
input_141_pad_0*!
val





    |
const%
input_141_dilations_0


*+
name#

"
input_141_dilations_0*
val




e
const
input_141_groups_0
*(
name 

"
input_141_groups_0*
val


’
constC
encoder_3_2_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_2_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ√¥´
const.
encoder_3_2_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_2_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿√ºë
conv
x

input_139_cast_fp16-
weight#
!
encoder_3_2_proj_weight_to_fp16)
bias!

encoder_3_2_proj_bias_to_fp16"
strides

input_141_strides_0$
pad_type

input_141_pad_type_0
pad

input_141_pad_0&
	dilations

input_141_dilations_0 
groups

input_141_groups_06
input_141_cast_fp16



Ä
 
 *)
name!

"
input_141_cast_fp16m
const
input_143_pad_type_0
**
name"

"
input_143_pad_type_0*
val

	"
validx
const#
input_143_strides_0


*)
name!

"
input_143_strides_0*
val




r
const
input_143_pad_0


*%
name

"
input_143_pad_0*!
val





    |
const%
input_143_dilations_0


*+
name#

"
input_143_dilations_0*
val




e
const
input_143_groups_0
*(
name 

"
input_143_groups_0*
val


◊
constD
 encoder_3_2_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_2_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ∆º≠
const/
encoder_3_2_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_2_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿∆ƒì
conv
x

input_141_cast_fp16.
weight$
"
 encoder_3_2_ffn_0_weight_to_fp16*
bias"
 
encoder_3_2_ffn_0_bias_to_fp16"
strides

input_143_strides_0$
pad_type

input_143_pad_type_0
pad

input_143_pad_0&
	dilations

input_143_dilations_0 
groups

input_143_groups_06
input_143_cast_fp16



Ä
 
 *)
name!

"
input_143_cast_fp16e
const
input_145_mode_0
*&
name

"
input_145_mode_0*
val

	"
EXACT•
gelu
x

input_143_cast_fp16
mode

input_145_mode_06
input_145_cast_fp16



Ä
 
 *)
name!

"
input_145_cast_fp16c
const
x_41_pad_type_0
*%
name

"
x_41_pad_type_0*
val

	"
validn
const
x_41_strides_0


*$
name

"
x_41_strides_0*
val




h
const

x_41_pad_0


* 
name

"

x_41_pad_0*!
val





    r
const 
x_41_dilations_0


*&
name

"
x_41_dilations_0*
val




[
const
x_41_groups_0
*#
name

"
x_41_groups_0*
val


◊
constD
 encoder_3_2_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_2_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄœƒ≠
const/
encoder_3_2_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_2_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿œÃ
conv
x

input_145_cast_fp16.
weight$
"
 encoder_3_2_ffn_2_weight_to_fp16*
bias"
 
encoder_3_2_ffn_2_bias_to_fp16
strides

x_41_strides_0
pad_type

x_41_pad_type_0
pad


x_41_pad_0!
	dilations

x_41_dilations_0
groups

x_41_groups_01
x_41_cast_fp16



Ä
 
 *$
name

"
x_41_cast_fp16c
const
q_33_pad_type_0
*%
name

"
q_33_pad_type_0*
val

	"
validn
const
q_33_strides_0


*$
name

"
q_33_strides_0*
val




h
const

q_33_pad_0


* 
name

"

q_33_pad_0*!
val





    r
const 
q_33_dilations_0


*&
name

"
q_33_dilations_0*
val




[
const
q_33_groups_0
*#
name

"
q_33_groups_0*
val


œ
const@
encoder_3_3_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_3_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ“Ã•
const+
encoder_3_3_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_3_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿“–„
conv
x

x_41_cast_fp16*
weight 

encoder_3_3_q_weight_to_fp16&
bias

encoder_3_3_q_bias_to_fp16
strides

q_33_strides_0
pad_type

q_33_pad_type_0
pad


q_33_pad_0!
	dilations

q_33_dilations_0
groups

q_33_groups_01
q_33_cast_fp16



Ä
 
 *$
name

"
q_33_cast_fp16c
const
k_33_pad_type_0
*%
name

"
k_33_pad_type_0*
val

	"
validn
const
k_33_strides_0


*$
name

"
k_33_strides_0*
val




h
const

k_33_pad_0


* 
name

"

k_33_pad_0*!
val





    r
const 
k_33_dilations_0


*&
name

"
k_33_dilations_0*
val




[
const
k_33_groups_0
*#
name

"
k_33_groups_0*
val


œ
const@
encoder_3_3_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_3_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ◊–•
const+
encoder_3_3_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_3_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿◊‘„
conv
x

x_41_cast_fp16*
weight 

encoder_3_3_k_weight_to_fp16&
bias

encoder_3_3_k_bias_to_fp16
strides

k_33_strides_0
pad_type

k_33_pad_type_0
pad


k_33_pad_0!
	dilations

k_33_dilations_0
groups

k_33_groups_01
k_33_cast_fp16



Ä
 
 *$
name

"
k_33_cast_fp16c
const
v_33_pad_type_0
*%
name

"
v_33_pad_type_0*
val

	"
validn
const
v_33_strides_0


*$
name

"
v_33_strides_0*
val




h
const

v_33_pad_0


* 
name

"

v_33_pad_0*!
val





    r
const 
v_33_dilations_0


*&
name

"
v_33_dilations_0*
val




[
const
v_33_groups_0
*#
name

"
v_33_groups_0*
val


œ
const@
encoder_3_3_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_3_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ‹‘•
const+
encoder_3_3_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_3_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿‹‹„
conv
x

x_41_cast_fp16*
weight 

encoder_3_3_v_weight_to_fp16&
bias

encoder_3_3_v_bias_to_fp16
strides

v_33_strides_0
pad_type

v_33_pad_type_0
pad


v_33_pad_0!
	dilations

v_33_dilations_0
groups

v_33_groups_01
v_33_cast_fp16



Ä
 
 *$
name

"
v_33_cast_fp16k
const
var_920


*
name


"
op_920*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

q_33_cast_fp16
shape
	
var_9204
var_921_cast_fp16




 
Ä*&
name

"
op_921_cast_fp16k
const
var_926


*
name


"
op_926*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

k_33_cast_fp16
shape
	
var_9264
var_927_cast_fp16




 
Ä*&
name

"
op_927_cast_fp16k
const
var_932


*
name


"
op_932*+
val$




ˇˇˇˇˇˇˇˇˇ@Äñ
reshape
x

v_33_cast_fp16
shape
	
var_9324
var_933_cast_fp16




@
Ä*&
name

"
op_933_cast_fp16d
const
mul_8_y_0_to_fp16

*'
name

"
mul_8_y_0_to_fp16*
val


:
®1ò
mul
x

var_921_cast_fp16
y

mul_8_y_0_to_fp162
mul_8_cast_fp16




 
Ä*%
name

"
mul_8_cast_fp16m
const
matmul_8_transpose_x_1
*,
name$

"
matmul_8_transpose_x_1*
val


m
const
matmul_8_transpose_y_1
*,
name$

"
matmul_8_transpose_y_1*
val


 ˆ
matmul
x

mul_8_cast_fp16
y

var_927_cast_fp16)
transpose_x

matmul_8_transpose_x_1)
transpose_y

matmul_8_transpose_y_16
matmul_8_cast_fp16 




Ä
Ä*(
name 

"
matmul_8_cast_fp16j
const
softmax_8_axis_0
*&
name

"
softmax_8_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_8_cast_fp16
axis

softmax_8_axis_07
softmax_8_cast_fp16 




Ä
Ä*)
name!

"
softmax_8_cast_fp16e
const
x_43_transpose_x_1
*(
name 

"
x_43_transpose_x_1*
val


 e
const
x_43_transpose_y_1
*(
name 

"
x_43_transpose_y_1*
val


È
matmul
x

softmax_8_cast_fp16
y

var_933_cast_fp16%
transpose_x

x_43_transpose_x_1%
transpose_y

x_43_transpose_y_11
x_43_cast_fp16




Ä
@*$
name

"
x_43_cast_fp16a
const
var_937


*
name


"
op_937*!
val





 k
const
var_939


*
name


"
op_939*+
val$




ˇˇˇˇˇˇˇˇˇÄ  î
	transpose
x

x_43_cast_fp16
perm
	
var_9374
var_938_cast_fp16




@
Ä*#
name

"
transpose_216û
reshape
x

var_938_cast_fp16
shape
	
var_9396
input_147_cast_fp16



Ä
 
 *)
name!

"
input_147_cast_fp16m
const
input_149_pad_type_0
**
name"

"
input_149_pad_type_0*
val

	"
validx
const#
input_149_strides_0


*)
name!

"
input_149_strides_0*
val




r
const
input_149_pad_0


*%
name

"
input_149_pad_0*!
val





    |
const%
input_149_dilations_0


*+
name#

"
input_149_dilations_0*
val




e
const
input_149_groups_0
*(
name 

"
input_149_groups_0*
val


’
constC
encoder_3_3_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_3_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÂ‹´
const.
encoder_3_3_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_3_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Â‰ë
conv
x

input_147_cast_fp16-
weight#
!
encoder_3_3_proj_weight_to_fp16)
bias!

encoder_3_3_proj_bias_to_fp16"
strides

input_149_strides_0$
pad_type

input_149_pad_type_0
pad

input_149_pad_0&
	dilations

input_149_dilations_0 
groups

input_149_groups_06
input_149_cast_fp16



Ä
 
 *)
name!

"
input_149_cast_fp16m
const
input_151_pad_type_0
**
name"

"
input_151_pad_type_0*
val

	"
validx
const#
input_151_strides_0


*)
name!

"
input_151_strides_0*
val




r
const
input_151_pad_0


*%
name

"
input_151_pad_0*!
val





    |
const%
input_151_dilations_0


*+
name#

"
input_151_dilations_0*
val




e
const
input_151_groups_0
*(
name 

"
input_151_groups_0*
val


◊
constD
 encoder_3_3_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_3_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄË‰≠
const/
encoder_3_3_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_3_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ËÏì
conv
x

input_149_cast_fp16.
weight$
"
 encoder_3_3_ffn_0_weight_to_fp16*
bias"
 
encoder_3_3_ffn_0_bias_to_fp16"
strides

input_151_strides_0$
pad_type

input_151_pad_type_0
pad

input_151_pad_0&
	dilations

input_151_dilations_0 
groups

input_151_groups_06
input_151_cast_fp16



Ä
 
 *)
name!

"
input_151_cast_fp16e
const
input_153_mode_0
*&
name

"
input_153_mode_0*
val

	"
EXACT•
gelu
x

input_151_cast_fp16
mode

input_153_mode_06
input_153_cast_fp16



Ä
 
 *)
name!

"
input_153_cast_fp16c
const
x_45_pad_type_0
*%
name

"
x_45_pad_type_0*
val

	"
validn
const
x_45_strides_0


*$
name

"
x_45_strides_0*
val




h
const

x_45_pad_0


* 
name

"

x_45_pad_0*!
val





    r
const 
x_45_dilations_0


*&
name

"
x_45_dilations_0*
val




[
const
x_45_groups_0
*#
name

"
x_45_groups_0*
val


◊
constD
 encoder_3_3_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_3_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÒÏ≠
const/
encoder_3_3_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_3_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ÒÙ
conv
x

input_153_cast_fp16.
weight$
"
 encoder_3_3_ffn_2_weight_to_fp16*
bias"
 
encoder_3_3_ffn_2_bias_to_fp16
strides

x_45_strides_0
pad_type

x_45_pad_type_0
pad


x_45_pad_0!
	dilations

x_45_dilations_0
groups

x_45_groups_01
x_45_cast_fp16



Ä
 
 *$
name

"
x_45_cast_fp16c
const
q_37_pad_type_0
*%
name

"
q_37_pad_type_0*
val

	"
validn
const
q_37_strides_0


*$
name

"
q_37_strides_0*
val




h
const

q_37_pad_0


* 
name

"

q_37_pad_0*!
val





    r
const 
q_37_dilations_0


*&
name

"
q_37_dilations_0*
val




[
const
q_37_groups_0
*#
name

"
q_37_groups_0*
val


œ
const@
encoder_3_4_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_4_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÙÙ•
const+
encoder_3_4_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_4_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Ù¯„
conv
x

x_45_cast_fp16*
weight 

encoder_3_4_q_weight_to_fp16&
bias

encoder_3_4_q_bias_to_fp16
strides

q_37_strides_0
pad_type

q_37_pad_type_0
pad


q_37_pad_0!
	dilations

q_37_dilations_0
groups

q_37_groups_01
q_37_cast_fp16



Ä
 
 *$
name

"
q_37_cast_fp16c
const
k_37_pad_type_0
*%
name

"
k_37_pad_type_0*
val

	"
validn
const
k_37_strides_0


*$
name

"
k_37_strides_0*
val




h
const

k_37_pad_0


* 
name

"

k_37_pad_0*!
val





    r
const 
k_37_dilations_0


*&
name

"
k_37_dilations_0*
val




[
const
k_37_groups_0
*#
name

"
k_37_groups_0*
val


œ
const@
encoder_3_4_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_4_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ˘¯•
const+
encoder_3_4_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_4_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿˘¸„
conv
x

x_45_cast_fp16*
weight 

encoder_3_4_k_weight_to_fp16&
bias

encoder_3_4_k_bias_to_fp16
strides

k_37_strides_0
pad_type

k_37_pad_type_0
pad


k_37_pad_0!
	dilations

k_37_dilations_0
groups

k_37_groups_01
k_37_cast_fp16



Ä
 
 *$
name

"
k_37_cast_fp16c
const
v_37_pad_type_0
*%
name

"
v_37_pad_type_0*
val

	"
validn
const
v_37_strides_0


*$
name

"
v_37_strides_0*
val




h
const

v_37_pad_0


* 
name

"

v_37_pad_0*!
val





    r
const 
v_37_dilations_0


*&
name

"
v_37_dilations_0*
val




[
const
v_37_groups_0
*#
name

"
v_37_groups_0*
val


œ
const@
encoder_3_4_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_4_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ˛¸•
const+
encoder_3_4_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_4_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿˛Ñ„
conv
x

x_45_cast_fp16*
weight 

encoder_3_4_v_weight_to_fp16&
bias

encoder_3_4_v_bias_to_fp16
strides

v_37_strides_0
pad_type

v_37_pad_type_0
pad


v_37_pad_0!
	dilations

v_37_dilations_0
groups

v_37_groups_01
v_37_cast_fp16



Ä
 
 *$
name

"
v_37_cast_fp16k
const
var_997


*
name


"
op_997*+
val$




ˇˇˇˇˇˇˇˇˇ Äñ
reshape
x

q_37_cast_fp16
shape
	
var_9974
var_998_cast_fp16




 
Ä*&
name

"
op_998_cast_fp16m
const
var_1003


*
name

"	
op_1003*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

k_37_cast_fp16
shape


var_10035
var_1004_cast_fp16




 
Ä*'
name

"
op_1004_cast_fp16m
const
var_1009


*
name

"	
op_1009*+
val$




ˇˇˇˇˇˇˇˇˇ@Äô
reshape
x

v_37_cast_fp16
shape


var_10095
var_1010_cast_fp16




@
Ä*'
name

"
op_1010_cast_fp16d
const
mul_9_y_0_to_fp16

*'
name

"
mul_9_y_0_to_fp16*
val


:
®1ò
mul
x

var_998_cast_fp16
y

mul_9_y_0_to_fp162
mul_9_cast_fp16




 
Ä*%
name

"
mul_9_cast_fp16m
const
matmul_9_transpose_x_1
*,
name$

"
matmul_9_transpose_x_1*
val


m
const
matmul_9_transpose_y_1
*,
name$

"
matmul_9_transpose_y_1*
val


 ˜
matmul
x

mul_9_cast_fp16
y

var_1004_cast_fp16)
transpose_x

matmul_9_transpose_x_1)
transpose_y

matmul_9_transpose_y_16
matmul_9_cast_fp16 




Ä
Ä*(
name 

"
matmul_9_cast_fp16j
const
softmax_9_axis_0
*&
name

"
softmax_9_axis_0*
val



ˇˇˇˇˇˇˇˇˇ®
softmax
x

matmul_9_cast_fp16
axis

softmax_9_axis_07
softmax_9_cast_fp16 




Ä
Ä*)
name!

"
softmax_9_cast_fp16e
const
x_47_transpose_x_1
*(
name 

"
x_47_transpose_x_1*
val


 e
const
x_47_transpose_y_1
*(
name 

"
x_47_transpose_y_1*
val


Í
matmul
x

softmax_9_cast_fp16
y

var_1010_cast_fp16%
transpose_x

x_47_transpose_x_1%
transpose_y

x_47_transpose_y_11
x_47_cast_fp16




Ä
@*$
name

"
x_47_cast_fp16c
const
var_1014


*
name

"	
op_1014*!
val





 m
const
var_1016


*
name

"	
op_1016*+
val$




ˇˇˇˇˇˇˇˇˇÄ  ñ
	transpose
x

x_47_cast_fp16
perm


var_10145
var_1015_cast_fp16




@
Ä*#
name

"
transpose_215†
reshape
x

var_1015_cast_fp16
shape


var_10166
input_155_cast_fp16



Ä
 
 *)
name!

"
input_155_cast_fp16m
const
input_157_pad_type_0
**
name"

"
input_157_pad_type_0*
val

	"
validx
const#
input_157_strides_0


*)
name!

"
input_157_strides_0*
val




r
const
input_157_pad_0


*%
name

"
input_157_pad_0*!
val





    |
const%
input_157_dilations_0


*+
name#

"
input_157_dilations_0*
val




e
const
input_157_groups_0
*(
name 

"
input_157_groups_0*
val


’
constC
encoder_3_4_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_4_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄáÖ´
const.
encoder_3_4_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_4_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿áçë
conv
x

input_155_cast_fp16-
weight#
!
encoder_3_4_proj_weight_to_fp16)
bias!

encoder_3_4_proj_bias_to_fp16"
strides

input_157_strides_0$
pad_type

input_157_pad_type_0
pad

input_157_pad_0&
	dilations

input_157_dilations_0 
groups

input_157_groups_06
input_157_cast_fp16



Ä
 
 *)
name!

"
input_157_cast_fp16m
const
input_159_pad_type_0
**
name"

"
input_159_pad_type_0*
val

	"
validx
const#
input_159_strides_0


*)
name!

"
input_159_strides_0*
val




r
const
input_159_pad_0


*%
name

"
input_159_pad_0*!
val





    |
const%
input_159_dilations_0


*+
name#

"
input_159_dilations_0*
val




e
const
input_159_groups_0
*(
name 

"
input_159_groups_0*
val


◊
constD
 encoder_3_4_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_4_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄäç≠
const/
encoder_3_4_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_4_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿äïì
conv
x

input_157_cast_fp16.
weight$
"
 encoder_3_4_ffn_0_weight_to_fp16*
bias"
 
encoder_3_4_ffn_0_bias_to_fp16"
strides

input_159_strides_0$
pad_type

input_159_pad_type_0
pad

input_159_pad_0&
	dilations

input_159_dilations_0 
groups

input_159_groups_06
input_159_cast_fp16



Ä
 
 *)
name!

"
input_159_cast_fp16e
const
input_161_mode_0
*&
name

"
input_161_mode_0*
val

	"
EXACT•
gelu
x

input_159_cast_fp16
mode

input_161_mode_06
input_161_cast_fp16



Ä
 
 *)
name!

"
input_161_cast_fp16c
const
x_49_pad_type_0
*%
name

"
x_49_pad_type_0*
val

	"
validn
const
x_49_strides_0


*$
name

"
x_49_strides_0*
val




h
const

x_49_pad_0


* 
name

"

x_49_pad_0*!
val





    r
const 
x_49_dilations_0


*&
name

"
x_49_dilations_0*
val




[
const
x_49_groups_0
*#
name

"
x_49_groups_0*
val


◊
constD
 encoder_3_4_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_4_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄìï≠
const/
encoder_3_4_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_4_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ìù
conv
x

input_161_cast_fp16.
weight$
"
 encoder_3_4_ffn_2_weight_to_fp16*
bias"
 
encoder_3_4_ffn_2_bias_to_fp16
strides

x_49_strides_0
pad_type

x_49_pad_type_0
pad


x_49_pad_0!
	dilations

x_49_dilations_0
groups

x_49_groups_01
x_49_cast_fp16



Ä
 
 *$
name

"
x_49_cast_fp16c
const
q_41_pad_type_0
*%
name

"
q_41_pad_type_0*
val

	"
validn
const
q_41_strides_0


*$
name

"
q_41_strides_0*
val




h
const

q_41_pad_0


* 
name

"

q_41_pad_0*!
val





    r
const 
q_41_dilations_0


*&
name

"
q_41_dilations_0*
val




[
const
q_41_groups_0
*#
name

"
q_41_groups_0*
val


œ
const@
encoder_3_5_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_5_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄñù•
const+
encoder_3_5_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_5_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ñ°„
conv
x

x_49_cast_fp16*
weight 

encoder_3_5_q_weight_to_fp16&
bias

encoder_3_5_q_bias_to_fp16
strides

q_41_strides_0
pad_type

q_41_pad_type_0
pad


q_41_pad_0!
	dilations

q_41_dilations_0
groups

q_41_groups_01
q_41_cast_fp16



Ä
 
 *$
name

"
q_41_cast_fp16c
const
k_41_pad_type_0
*%
name

"
k_41_pad_type_0*
val

	"
validn
const
k_41_strides_0


*$
name

"
k_41_strides_0*
val




h
const

k_41_pad_0


* 
name

"

k_41_pad_0*!
val





    r
const 
k_41_dilations_0


*&
name

"
k_41_dilations_0*
val




[
const
k_41_groups_0
*#
name

"
k_41_groups_0*
val


œ
const@
encoder_3_5_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_5_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄõ°•
const+
encoder_3_5_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_5_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿õ•„
conv
x

x_49_cast_fp16*
weight 

encoder_3_5_k_weight_to_fp16&
bias

encoder_3_5_k_bias_to_fp16
strides

k_41_strides_0
pad_type

k_41_pad_type_0
pad


k_41_pad_0!
	dilations

k_41_dilations_0
groups

k_41_groups_01
k_41_cast_fp16



Ä
 
 *$
name

"
k_41_cast_fp16c
const
v_41_pad_type_0
*%
name

"
v_41_pad_type_0*
val

	"
validn
const
v_41_strides_0


*$
name

"
v_41_strides_0*
val




h
const

v_41_pad_0


* 
name

"

v_41_pad_0*!
val





    r
const 
v_41_dilations_0


*&
name

"
v_41_dilations_0*
val




[
const
v_41_groups_0
*#
name

"
v_41_groups_0*
val


œ
const@
encoder_3_5_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_5_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ†••
const+
encoder_3_5_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_5_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿†≠„
conv
x

x_49_cast_fp16*
weight 

encoder_3_5_v_weight_to_fp16&
bias

encoder_3_5_v_bias_to_fp16
strides

v_41_strides_0
pad_type

v_41_pad_type_0
pad


v_41_pad_0!
	dilations

v_41_dilations_0
groups

v_41_groups_01
v_41_cast_fp16



Ä
 
 *$
name

"
v_41_cast_fp16m
const
var_1074


*
name

"	
op_1074*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

q_41_cast_fp16
shape


var_10745
var_1075_cast_fp16




 
Ä*'
name

"
op_1075_cast_fp16m
const
var_1080


*
name

"	
op_1080*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

k_41_cast_fp16
shape


var_10805
var_1081_cast_fp16




 
Ä*'
name

"
op_1081_cast_fp16m
const
var_1086


*
name

"	
op_1086*+
val$




ˇˇˇˇˇˇˇˇˇ@Äô
reshape
x

v_41_cast_fp16
shape


var_10865
var_1087_cast_fp16




@
Ä*'
name

"
op_1087_cast_fp16f
const
mul_10_y_0_to_fp16

*(
name 

"
mul_10_y_0_to_fp16*
val


:
®1ú
mul
x

var_1075_cast_fp16
y

mul_10_y_0_to_fp163
mul_10_cast_fp16




 
Ä*&
name

"
mul_10_cast_fp16o
const
matmul_10_transpose_x_1
*-
name%

"
matmul_10_transpose_x_1*
val


o
const
matmul_10_transpose_y_1
*-
name%

"
matmul_10_transpose_y_1*
val


 ¸
matmul
x

mul_10_cast_fp16
y

var_1081_cast_fp16*
transpose_x

matmul_10_transpose_x_1*
transpose_y

matmul_10_transpose_y_17
matmul_10_cast_fp16 




Ä
Ä*)
name!

"
matmul_10_cast_fp16l
const
softmax_10_axis_0
*'
name

"
softmax_10_axis_0*
val



ˇˇˇˇˇˇˇˇˇ¨
softmax
x

matmul_10_cast_fp16
axis

softmax_10_axis_08
softmax_10_cast_fp16 




Ä
Ä**
name"

"
softmax_10_cast_fp16e
const
x_51_transpose_x_1
*(
name 

"
x_51_transpose_x_1*
val


 e
const
x_51_transpose_y_1
*(
name 

"
x_51_transpose_y_1*
val


Î
matmul
x

softmax_10_cast_fp16
y

var_1087_cast_fp16%
transpose_x

x_51_transpose_x_1%
transpose_y

x_51_transpose_y_11
x_51_cast_fp16




Ä
@*$
name

"
x_51_cast_fp16c
const
var_1091


*
name

"	
op_1091*!
val





 m
const
var_1093


*
name

"	
op_1093*+
val$




ˇˇˇˇˇˇˇˇˇÄ  ñ
	transpose
x

x_51_cast_fp16
perm


var_10915
var_1092_cast_fp16




@
Ä*#
name

"
transpose_214†
reshape
x

var_1092_cast_fp16
shape


var_10936
input_163_cast_fp16



Ä
 
 *)
name!

"
input_163_cast_fp16m
const
input_165_pad_type_0
**
name"

"
input_165_pad_type_0*
val

	"
validx
const#
input_165_strides_0


*)
name!

"
input_165_strides_0*
val




r
const
input_165_pad_0


*%
name

"
input_165_pad_0*!
val





    |
const%
input_165_dilations_0


*+
name#

"
input_165_dilations_0*
val




e
const
input_165_groups_0
*(
name 

"
input_165_groups_0*
val


’
constC
encoder_3_5_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_5_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ©≠´
const.
encoder_3_5_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_5_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿©µë
conv
x

input_163_cast_fp16-
weight#
!
encoder_3_5_proj_weight_to_fp16)
bias!

encoder_3_5_proj_bias_to_fp16"
strides

input_165_strides_0$
pad_type

input_165_pad_type_0
pad

input_165_pad_0&
	dilations

input_165_dilations_0 
groups

input_165_groups_06
input_165_cast_fp16



Ä
 
 *)
name!

"
input_165_cast_fp16m
const
input_167_pad_type_0
**
name"

"
input_167_pad_type_0*
val

	"
validx
const#
input_167_strides_0


*)
name!

"
input_167_strides_0*
val




r
const
input_167_pad_0


*%
name

"
input_167_pad_0*!
val





    |
const%
input_167_dilations_0


*+
name#

"
input_167_dilations_0*
val




e
const
input_167_groups_0
*(
name 

"
input_167_groups_0*
val


◊
constD
 encoder_3_5_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_5_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ¨µ≠
const/
encoder_3_5_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_5_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿¨Ωì
conv
x

input_165_cast_fp16.
weight$
"
 encoder_3_5_ffn_0_weight_to_fp16*
bias"
 
encoder_3_5_ffn_0_bias_to_fp16"
strides

input_167_strides_0$
pad_type

input_167_pad_type_0
pad

input_167_pad_0&
	dilations

input_167_dilations_0 
groups

input_167_groups_06
input_167_cast_fp16



Ä
 
 *)
name!

"
input_167_cast_fp16e
const
input_169_mode_0
*&
name

"
input_169_mode_0*
val

	"
EXACT•
gelu
x

input_167_cast_fp16
mode

input_169_mode_06
input_169_cast_fp16



Ä
 
 *)
name!

"
input_169_cast_fp16c
const
x_53_pad_type_0
*%
name

"
x_53_pad_type_0*
val

	"
validn
const
x_53_strides_0


*$
name

"
x_53_strides_0*
val




h
const

x_53_pad_0


* 
name

"

x_53_pad_0*!
val





    r
const 
x_53_dilations_0


*&
name

"
x_53_dilations_0*
val




[
const
x_53_groups_0
*#
name

"
x_53_groups_0*
val


◊
constD
 encoder_3_5_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_5_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄµΩ≠
const/
encoder_3_5_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_5_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿µ≈
conv
x

input_169_cast_fp16.
weight$
"
 encoder_3_5_ffn_2_weight_to_fp16*
bias"
 
encoder_3_5_ffn_2_bias_to_fp16
strides

x_53_strides_0
pad_type

x_53_pad_type_0
pad


x_53_pad_0!
	dilations

x_53_dilations_0
groups

x_53_groups_01
x_53_cast_fp16



Ä
 
 *$
name

"
x_53_cast_fp16c
const
q_45_pad_type_0
*%
name

"
q_45_pad_type_0*
val

	"
validn
const
q_45_strides_0


*$
name

"
q_45_strides_0*
val




h
const

q_45_pad_0


* 
name

"

q_45_pad_0*!
val





    r
const 
q_45_dilations_0


*&
name

"
q_45_dilations_0*
val




[
const
q_45_groups_0
*#
name

"
q_45_groups_0*
val


œ
const@
encoder_3_6_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_6_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ∏≈•
const+
encoder_3_6_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_6_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿∏…„
conv
x

x_53_cast_fp16*
weight 

encoder_3_6_q_weight_to_fp16&
bias

encoder_3_6_q_bias_to_fp16
strides

q_45_strides_0
pad_type

q_45_pad_type_0
pad


q_45_pad_0!
	dilations

q_45_dilations_0
groups

q_45_groups_01
q_45_cast_fp16



Ä
 
 *$
name

"
q_45_cast_fp16c
const
k_45_pad_type_0
*%
name

"
k_45_pad_type_0*
val

	"
validn
const
k_45_strides_0


*$
name

"
k_45_strides_0*
val




h
const

k_45_pad_0


* 
name

"

k_45_pad_0*!
val





    r
const 
k_45_dilations_0


*&
name

"
k_45_dilations_0*
val




[
const
k_45_groups_0
*#
name

"
k_45_groups_0*
val


œ
const@
encoder_3_6_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_6_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄΩ…•
const+
encoder_3_6_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_6_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ΩÕ„
conv
x

x_53_cast_fp16*
weight 

encoder_3_6_k_weight_to_fp16&
bias

encoder_3_6_k_bias_to_fp16
strides

k_45_strides_0
pad_type

k_45_pad_type_0
pad


k_45_pad_0!
	dilations

k_45_dilations_0
groups

k_45_groups_01
k_45_cast_fp16



Ä
 
 *$
name

"
k_45_cast_fp16c
const
v_45_pad_type_0
*%
name

"
v_45_pad_type_0*
val

	"
validn
const
v_45_strides_0


*$
name

"
v_45_strides_0*
val




h
const

v_45_pad_0


* 
name

"

v_45_pad_0*!
val





    r
const 
v_45_dilations_0


*&
name

"
v_45_dilations_0*
val




[
const
v_45_groups_0
*#
name

"
v_45_groups_0*
val


œ
const@
encoder_3_6_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_6_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ¬Õ•
const+
encoder_3_6_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_6_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿¬’„
conv
x

x_53_cast_fp16*
weight 

encoder_3_6_v_weight_to_fp16&
bias

encoder_3_6_v_bias_to_fp16
strides

v_45_strides_0
pad_type

v_45_pad_type_0
pad


v_45_pad_0!
	dilations

v_45_dilations_0
groups

v_45_groups_01
v_45_cast_fp16



Ä
 
 *$
name

"
v_45_cast_fp16m
const
var_1151


*
name

"	
op_1151*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

q_45_cast_fp16
shape


var_11515
var_1152_cast_fp16




 
Ä*'
name

"
op_1152_cast_fp16m
const
var_1157


*
name

"	
op_1157*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

k_45_cast_fp16
shape


var_11575
var_1158_cast_fp16




 
Ä*'
name

"
op_1158_cast_fp16m
const
var_1163


*
name

"	
op_1163*+
val$




ˇˇˇˇˇˇˇˇˇ@Äô
reshape
x

v_45_cast_fp16
shape


var_11635
var_1164_cast_fp16




@
Ä*'
name

"
op_1164_cast_fp16f
const
mul_11_y_0_to_fp16

*(
name 

"
mul_11_y_0_to_fp16*
val


:
®1ú
mul
x

var_1152_cast_fp16
y

mul_11_y_0_to_fp163
mul_11_cast_fp16




 
Ä*&
name

"
mul_11_cast_fp16o
const
matmul_11_transpose_x_1
*-
name%

"
matmul_11_transpose_x_1*
val


o
const
matmul_11_transpose_y_1
*-
name%

"
matmul_11_transpose_y_1*
val


 ¸
matmul
x

mul_11_cast_fp16
y

var_1158_cast_fp16*
transpose_x

matmul_11_transpose_x_1*
transpose_y

matmul_11_transpose_y_17
matmul_11_cast_fp16 




Ä
Ä*)
name!

"
matmul_11_cast_fp16l
const
softmax_11_axis_0
*'
name

"
softmax_11_axis_0*
val



ˇˇˇˇˇˇˇˇˇ¨
softmax
x

matmul_11_cast_fp16
axis

softmax_11_axis_08
softmax_11_cast_fp16 




Ä
Ä**
name"

"
softmax_11_cast_fp16e
const
x_55_transpose_x_1
*(
name 

"
x_55_transpose_x_1*
val


 e
const
x_55_transpose_y_1
*(
name 

"
x_55_transpose_y_1*
val


Î
matmul
x

softmax_11_cast_fp16
y

var_1164_cast_fp16%
transpose_x

x_55_transpose_x_1%
transpose_y

x_55_transpose_y_11
x_55_cast_fp16




Ä
@*$
name

"
x_55_cast_fp16c
const
var_1168


*
name

"	
op_1168*!
val





 m
const
var_1170


*
name

"	
op_1170*+
val$




ˇˇˇˇˇˇˇˇˇÄ  ñ
	transpose
x

x_55_cast_fp16
perm


var_11685
var_1169_cast_fp16




@
Ä*#
name

"
transpose_213†
reshape
x

var_1169_cast_fp16
shape


var_11706
input_171_cast_fp16



Ä
 
 *)
name!

"
input_171_cast_fp16m
const
input_173_pad_type_0
**
name"

"
input_173_pad_type_0*
val

	"
validx
const#
input_173_strides_0


*)
name!

"
input_173_strides_0*
val




r
const
input_173_pad_0


*%
name

"
input_173_pad_0*!
val





    |
const%
input_173_dilations_0


*+
name#

"
input_173_dilations_0*
val




e
const
input_173_groups_0
*(
name 

"
input_173_groups_0*
val


’
constC
encoder_3_6_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_6_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÀ’´
const.
encoder_3_6_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_6_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿À›ë
conv
x

input_171_cast_fp16-
weight#
!
encoder_3_6_proj_weight_to_fp16)
bias!

encoder_3_6_proj_bias_to_fp16"
strides

input_173_strides_0$
pad_type

input_173_pad_type_0
pad

input_173_pad_0&
	dilations

input_173_dilations_0 
groups

input_173_groups_06
input_173_cast_fp16



Ä
 
 *)
name!

"
input_173_cast_fp16m
const
input_175_pad_type_0
**
name"

"
input_175_pad_type_0*
val

	"
validx
const#
input_175_strides_0


*)
name!

"
input_175_strides_0*
val




r
const
input_175_pad_0


*%
name

"
input_175_pad_0*!
val





    |
const%
input_175_dilations_0


*+
name#

"
input_175_dilations_0*
val




e
const
input_175_groups_0
*(
name 

"
input_175_groups_0*
val


◊
constD
 encoder_3_6_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_6_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄŒ›≠
const/
encoder_3_6_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_6_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ŒÂì
conv
x

input_173_cast_fp16.
weight$
"
 encoder_3_6_ffn_0_weight_to_fp16*
bias"
 
encoder_3_6_ffn_0_bias_to_fp16"
strides

input_175_strides_0$
pad_type

input_175_pad_type_0
pad

input_175_pad_0&
	dilations

input_175_dilations_0 
groups

input_175_groups_06
input_175_cast_fp16



Ä
 
 *)
name!

"
input_175_cast_fp16e
const
input_177_mode_0
*&
name

"
input_177_mode_0*
val

	"
EXACT•
gelu
x

input_175_cast_fp16
mode

input_177_mode_06
input_177_cast_fp16



Ä
 
 *)
name!

"
input_177_cast_fp16c
const
x_57_pad_type_0
*%
name

"
x_57_pad_type_0*
val

	"
validn
const
x_57_strides_0


*$
name

"
x_57_strides_0*
val




h
const

x_57_pad_0


* 
name

"

x_57_pad_0*!
val





    r
const 
x_57_dilations_0


*&
name

"
x_57_dilations_0*
val




[
const
x_57_groups_0
*#
name

"
x_57_groups_0*
val


◊
constD
 encoder_3_6_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_6_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ◊Â≠
const/
encoder_3_6_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_6_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿◊Ì
conv
x

input_177_cast_fp16.
weight$
"
 encoder_3_6_ffn_2_weight_to_fp16*
bias"
 
encoder_3_6_ffn_2_bias_to_fp16
strides

x_57_strides_0
pad_type

x_57_pad_type_0
pad


x_57_pad_0!
	dilations

x_57_dilations_0
groups

x_57_groups_01
x_57_cast_fp16



Ä
 
 *$
name

"
x_57_cast_fp16c
const
q_49_pad_type_0
*%
name

"
q_49_pad_type_0*
val

	"
validn
const
q_49_strides_0


*$
name

"
q_49_strides_0*
val




h
const

q_49_pad_0


* 
name

"

q_49_pad_0*!
val





    r
const 
q_49_dilations_0


*&
name

"
q_49_dilations_0*
val




[
const
q_49_groups_0
*#
name

"
q_49_groups_0*
val


œ
const@
encoder_3_7_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_7_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ⁄Ì•
const+
encoder_3_7_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_7_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿⁄Ò„
conv
x

x_57_cast_fp16*
weight 

encoder_3_7_q_weight_to_fp16&
bias

encoder_3_7_q_bias_to_fp16
strides

q_49_strides_0
pad_type

q_49_pad_type_0
pad


q_49_pad_0!
	dilations

q_49_dilations_0
groups

q_49_groups_01
q_49_cast_fp16



Ä
 
 *$
name

"
q_49_cast_fp16c
const
k_49_pad_type_0
*%
name

"
k_49_pad_type_0*
val

	"
validn
const
k_49_strides_0


*$
name

"
k_49_strides_0*
val




h
const

k_49_pad_0


* 
name

"

k_49_pad_0*!
val





    r
const 
k_49_dilations_0


*&
name

"
k_49_dilations_0*
val




[
const
k_49_groups_0
*#
name

"
k_49_groups_0*
val


œ
const@
encoder_3_7_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_7_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄﬂÒ•
const+
encoder_3_7_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_7_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ﬂı„
conv
x

x_57_cast_fp16*
weight 

encoder_3_7_k_weight_to_fp16&
bias

encoder_3_7_k_bias_to_fp16
strides

k_49_strides_0
pad_type

k_49_pad_type_0
pad


k_49_pad_0!
	dilations

k_49_dilations_0
groups

k_49_groups_01
k_49_cast_fp16



Ä
 
 *$
name

"
k_49_cast_fp16c
const
v_49_pad_type_0
*%
name

"
v_49_pad_type_0*
val

	"
validn
const
v_49_strides_0


*$
name

"
v_49_strides_0*
val




h
const

v_49_pad_0


* 
name

"

v_49_pad_0*!
val





    r
const 
v_49_dilations_0


*&
name

"
v_49_dilations_0*
val




[
const
v_49_groups_0
*#
name

"
v_49_groups_0*
val


œ
const@
encoder_3_7_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_7_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ‰ı•
const+
encoder_3_7_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_7_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿‰˝„
conv
x

x_57_cast_fp16*
weight 

encoder_3_7_v_weight_to_fp16&
bias

encoder_3_7_v_bias_to_fp16
strides

v_49_strides_0
pad_type

v_49_pad_type_0
pad


v_49_pad_0!
	dilations

v_49_dilations_0
groups

v_49_groups_01
v_49_cast_fp16



Ä
 
 *$
name

"
v_49_cast_fp16m
const
var_1228


*
name

"	
op_1228*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

q_49_cast_fp16
shape


var_12285
var_1229_cast_fp16




 
Ä*'
name

"
op_1229_cast_fp16m
const
var_1234


*
name

"	
op_1234*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

k_49_cast_fp16
shape


var_12345
var_1235_cast_fp16




 
Ä*'
name

"
op_1235_cast_fp16m
const
var_1240


*
name

"	
op_1240*+
val$




ˇˇˇˇˇˇˇˇˇ@Äô
reshape
x

v_49_cast_fp16
shape


var_12405
var_1241_cast_fp16




@
Ä*'
name

"
op_1241_cast_fp16f
const
mul_12_y_0_to_fp16

*(
name 

"
mul_12_y_0_to_fp16*
val


:
®1ú
mul
x

var_1229_cast_fp16
y

mul_12_y_0_to_fp163
mul_12_cast_fp16




 
Ä*&
name

"
mul_12_cast_fp16o
const
matmul_12_transpose_x_1
*-
name%

"
matmul_12_transpose_x_1*
val


o
const
matmul_12_transpose_y_1
*-
name%

"
matmul_12_transpose_y_1*
val


 ¸
matmul
x

mul_12_cast_fp16
y

var_1235_cast_fp16*
transpose_x

matmul_12_transpose_x_1*
transpose_y

matmul_12_transpose_y_17
matmul_12_cast_fp16 




Ä
Ä*)
name!

"
matmul_12_cast_fp16l
const
softmax_12_axis_0
*'
name

"
softmax_12_axis_0*
val



ˇˇˇˇˇˇˇˇˇ¨
softmax
x

matmul_12_cast_fp16
axis

softmax_12_axis_08
softmax_12_cast_fp16 




Ä
Ä**
name"

"
softmax_12_cast_fp16e
const
x_59_transpose_x_1
*(
name 

"
x_59_transpose_x_1*
val


 e
const
x_59_transpose_y_1
*(
name 

"
x_59_transpose_y_1*
val


Î
matmul
x

softmax_12_cast_fp16
y

var_1241_cast_fp16%
transpose_x

x_59_transpose_x_1%
transpose_y

x_59_transpose_y_11
x_59_cast_fp16




Ä
@*$
name

"
x_59_cast_fp16c
const
var_1245


*
name

"	
op_1245*!
val





 m
const
var_1247


*
name

"	
op_1247*+
val$




ˇˇˇˇˇˇˇˇˇÄ  ñ
	transpose
x

x_59_cast_fp16
perm


var_12455
var_1246_cast_fp16




@
Ä*#
name

"
transpose_212†
reshape
x

var_1246_cast_fp16
shape


var_12476
input_179_cast_fp16



Ä
 
 *)
name!

"
input_179_cast_fp16m
const
input_181_pad_type_0
**
name"

"
input_181_pad_type_0*
val

	"
validx
const#
input_181_strides_0


*)
name!

"
input_181_strides_0*
val




r
const
input_181_pad_0


*%
name

"
input_181_pad_0*!
val





    |
const%
input_181_dilations_0


*+
name#

"
input_181_dilations_0*
val




e
const
input_181_groups_0
*(
name 

"
input_181_groups_0*
val


’
constC
encoder_3_7_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_7_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÌ˝´
const.
encoder_3_7_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_7_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ÌÖë
conv
x

input_179_cast_fp16-
weight#
!
encoder_3_7_proj_weight_to_fp16)
bias!

encoder_3_7_proj_bias_to_fp16"
strides

input_181_strides_0$
pad_type

input_181_pad_type_0
pad

input_181_pad_0&
	dilations

input_181_dilations_0 
groups

input_181_groups_06
input_181_cast_fp16



Ä
 
 *)
name!

"
input_181_cast_fp16m
const
input_183_pad_type_0
**
name"

"
input_183_pad_type_0*
val

	"
validx
const#
input_183_strides_0


*)
name!

"
input_183_strides_0*
val




r
const
input_183_pad_0


*%
name

"
input_183_pad_0*!
val





    |
const%
input_183_dilations_0


*+
name#

"
input_183_dilations_0*
val




e
const
input_183_groups_0
*(
name 

"
input_183_groups_0*
val


◊
constD
 encoder_3_7_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_7_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÖ≠
const/
encoder_3_7_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_7_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿çì
conv
x

input_181_cast_fp16.
weight$
"
 encoder_3_7_ffn_0_weight_to_fp16*
bias"
 
encoder_3_7_ffn_0_bias_to_fp16"
strides

input_183_strides_0$
pad_type

input_183_pad_type_0
pad

input_183_pad_0&
	dilations

input_183_dilations_0 
groups

input_183_groups_06
input_183_cast_fp16



Ä
 
 *)
name!

"
input_183_cast_fp16e
const
input_185_mode_0
*&
name

"
input_185_mode_0*
val

	"
EXACT•
gelu
x

input_183_cast_fp16
mode

input_185_mode_06
input_185_cast_fp16



Ä
 
 *)
name!

"
input_185_cast_fp16c
const
x_61_pad_type_0
*%
name

"
x_61_pad_type_0*
val

	"
validn
const
x_61_strides_0


*$
name

"
x_61_strides_0*
val




h
const

x_61_pad_0


* 
name

"

x_61_pad_0*!
val





    r
const 
x_61_dilations_0


*&
name

"
x_61_dilations_0*
val




[
const
x_61_groups_0
*#
name

"
x_61_groups_0*
val


◊
constD
 encoder_3_7_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_7_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ˘ç≠
const/
encoder_3_7_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_7_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿˘ï
conv
x

input_185_cast_fp16.
weight$
"
 encoder_3_7_ffn_2_weight_to_fp16*
bias"
 
encoder_3_7_ffn_2_bias_to_fp16
strides

x_61_strides_0
pad_type

x_61_pad_type_0
pad


x_61_pad_0!
	dilations

x_61_dilations_0
groups

x_61_groups_01
x_61_cast_fp16



Ä
 
 *$
name

"
x_61_cast_fp16c
const
q_53_pad_type_0
*%
name

"
q_53_pad_type_0*
val

	"
validn
const
q_53_strides_0


*$
name

"
q_53_strides_0*
val




h
const

q_53_pad_0


* 
name

"

q_53_pad_0*!
val





    r
const 
q_53_dilations_0


*&
name

"
q_53_dilations_0*
val




[
const
q_53_groups_0
*#
name

"
q_53_groups_0*
val


œ
const@
encoder_3_8_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_8_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ¸ï•
const+
encoder_3_8_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_8_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿¸ô„
conv
x

x_61_cast_fp16*
weight 

encoder_3_8_q_weight_to_fp16&
bias

encoder_3_8_q_bias_to_fp16
strides

q_53_strides_0
pad_type

q_53_pad_type_0
pad


q_53_pad_0!
	dilations

q_53_dilations_0
groups

q_53_groups_01
q_53_cast_fp16



Ä
 
 *$
name

"
q_53_cast_fp16c
const
k_53_pad_type_0
*%
name

"
k_53_pad_type_0*
val

	"
validn
const
k_53_strides_0


*$
name

"
k_53_strides_0*
val




h
const

k_53_pad_0


* 
name

"

k_53_pad_0*!
val





    r
const 
k_53_dilations_0


*&
name

"
k_53_dilations_0*
val




[
const
k_53_groups_0
*#
name

"
k_53_groups_0*
val


œ
const@
encoder_3_8_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_8_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÅö•
const+
encoder_3_8_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_8_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Åû„
conv
x

x_61_cast_fp16*
weight 

encoder_3_8_k_weight_to_fp16&
bias

encoder_3_8_k_bias_to_fp16
strides

k_53_strides_0
pad_type

k_53_pad_type_0
pad


k_53_pad_0!
	dilations

k_53_dilations_0
groups

k_53_groups_01
k_53_cast_fp16



Ä
 
 *$
name

"
k_53_cast_fp16c
const
v_53_pad_type_0
*%
name

"
v_53_pad_type_0*
val

	"
validn
const
v_53_strides_0


*$
name

"
v_53_strides_0*
val




h
const

v_53_pad_0


* 
name

"

v_53_pad_0*!
val





    r
const 
v_53_dilations_0


*&
name

"
v_53_dilations_0*
val




[
const
v_53_groups_0
*#
name

"
v_53_groups_0*
val


œ
const@
encoder_3_8_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_8_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÜû•
const+
encoder_3_8_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_8_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿Ü¶„
conv
x

x_61_cast_fp16*
weight 

encoder_3_8_v_weight_to_fp16&
bias

encoder_3_8_v_bias_to_fp16
strides

v_53_strides_0
pad_type

v_53_pad_type_0
pad


v_53_pad_0!
	dilations

v_53_dilations_0
groups

v_53_groups_01
v_53_cast_fp16



Ä
 
 *$
name

"
v_53_cast_fp16m
const
var_1305


*
name

"	
op_1305*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

q_53_cast_fp16
shape


var_13055
var_1306_cast_fp16




 
Ä*'
name

"
op_1306_cast_fp16m
const
var_1311


*
name

"	
op_1311*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

k_53_cast_fp16
shape


var_13115
var_1312_cast_fp16




 
Ä*'
name

"
op_1312_cast_fp16m
const
var_1317


*
name

"	
op_1317*+
val$




ˇˇˇˇˇˇˇˇˇ@Äô
reshape
x

v_53_cast_fp16
shape


var_13175
var_1318_cast_fp16




@
Ä*'
name

"
op_1318_cast_fp16f
const
mul_13_y_0_to_fp16

*(
name 

"
mul_13_y_0_to_fp16*
val


:
®1ú
mul
x

var_1306_cast_fp16
y

mul_13_y_0_to_fp163
mul_13_cast_fp16




 
Ä*&
name

"
mul_13_cast_fp16o
const
matmul_13_transpose_x_1
*-
name%

"
matmul_13_transpose_x_1*
val


o
const
matmul_13_transpose_y_1
*-
name%

"
matmul_13_transpose_y_1*
val


 ¸
matmul
x

mul_13_cast_fp16
y

var_1312_cast_fp16*
transpose_x

matmul_13_transpose_x_1*
transpose_y

matmul_13_transpose_y_17
matmul_13_cast_fp16 




Ä
Ä*)
name!

"
matmul_13_cast_fp16l
const
softmax_13_axis_0
*'
name

"
softmax_13_axis_0*
val



ˇˇˇˇˇˇˇˇˇ¨
softmax
x

matmul_13_cast_fp16
axis

softmax_13_axis_08
softmax_13_cast_fp16 




Ä
Ä**
name"

"
softmax_13_cast_fp16e
const
x_63_transpose_x_1
*(
name 

"
x_63_transpose_x_1*
val


 e
const
x_63_transpose_y_1
*(
name 

"
x_63_transpose_y_1*
val


Î
matmul
x

softmax_13_cast_fp16
y

var_1318_cast_fp16%
transpose_x

x_63_transpose_x_1%
transpose_y

x_63_transpose_y_11
x_63_cast_fp16




Ä
@*$
name

"
x_63_cast_fp16c
const
var_1322


*
name

"	
op_1322*!
val





 m
const
var_1324


*
name

"	
op_1324*+
val$




ˇˇˇˇˇˇˇˇˇÄ  ñ
	transpose
x

x_63_cast_fp16
perm


var_13225
var_1323_cast_fp16




@
Ä*#
name

"
transpose_211†
reshape
x

var_1323_cast_fp16
shape


var_13246
input_187_cast_fp16



Ä
 
 *)
name!

"
input_187_cast_fp16m
const
input_189_pad_type_0
**
name"

"
input_189_pad_type_0*
val

	"
validx
const#
input_189_strides_0


*)
name!

"
input_189_strides_0*
val




r
const
input_189_pad_0


*%
name

"
input_189_pad_0*!
val





    |
const%
input_189_dilations_0


*+
name#

"
input_189_dilations_0*
val




e
const
input_189_groups_0
*(
name 

"
input_189_groups_0*
val


’
constC
encoder_3_8_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_8_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄè¶´
const.
encoder_3_8_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_8_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿èÆë
conv
x

input_187_cast_fp16-
weight#
!
encoder_3_8_proj_weight_to_fp16)
bias!

encoder_3_8_proj_bias_to_fp16"
strides

input_189_strides_0$
pad_type

input_189_pad_type_0
pad

input_189_pad_0&
	dilations

input_189_dilations_0 
groups

input_189_groups_06
input_189_cast_fp16



Ä
 
 *)
name!

"
input_189_cast_fp16m
const
input_191_pad_type_0
**
name"

"
input_191_pad_type_0*
val

	"
validx
const#
input_191_strides_0


*)
name!

"
input_191_strides_0*
val




r
const
input_191_pad_0


*%
name

"
input_191_pad_0*!
val





    |
const%
input_191_dilations_0


*+
name#

"
input_191_dilations_0*
val




e
const
input_191_groups_0
*(
name 

"
input_191_groups_0*
val


◊
constD
 encoder_3_8_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_8_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄíÆ≠
const/
encoder_3_8_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_8_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿í∂ì
conv
x

input_189_cast_fp16.
weight$
"
 encoder_3_8_ffn_0_weight_to_fp16*
bias"
 
encoder_3_8_ffn_0_bias_to_fp16"
strides

input_191_strides_0$
pad_type

input_191_pad_type_0
pad

input_191_pad_0&
	dilations

input_191_dilations_0 
groups

input_191_groups_06
input_191_cast_fp16



Ä
 
 *)
name!

"
input_191_cast_fp16e
const
input_193_mode_0
*&
name

"
input_193_mode_0*
val

	"
EXACT•
gelu
x

input_191_cast_fp16
mode

input_193_mode_06
input_193_cast_fp16



Ä
 
 *)
name!

"
input_193_cast_fp16c
const
x_65_pad_type_0
*%
name

"
x_65_pad_type_0*
val

	"
validn
const
x_65_strides_0


*$
name

"
x_65_strides_0*
val




h
const

x_65_pad_0


* 
name

"

x_65_pad_0*!
val





    r
const 
x_65_dilations_0


*&
name

"
x_65_dilations_0*
val




[
const
x_65_groups_0
*#
name

"
x_65_groups_0*
val


◊
constD
 encoder_3_8_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_8_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄõ∂≠
const/
encoder_3_8_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_8_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿õæ
conv
x

input_193_cast_fp16.
weight$
"
 encoder_3_8_ffn_2_weight_to_fp16*
bias"
 
encoder_3_8_ffn_2_bias_to_fp16
strides

x_65_strides_0
pad_type

x_65_pad_type_0
pad


x_65_pad_0!
	dilations

x_65_dilations_0
groups

x_65_groups_01
x_65_cast_fp16



Ä
 
 *$
name

"
x_65_cast_fp16c
const
q_57_pad_type_0
*%
name

"
q_57_pad_type_0*
val

	"
validn
const
q_57_strides_0


*$
name

"
q_57_strides_0*
val




h
const

q_57_pad_0


* 
name

"

q_57_pad_0*!
val





    r
const 
q_57_dilations_0


*&
name

"
q_57_dilations_0*
val




[
const
q_57_groups_0
*#
name

"
q_57_groups_0*
val


œ
const@
encoder_3_9_q_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_9_q_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄûæ•
const+
encoder_3_9_q_bias_to_fp16


Ä*0
name(
 
"
encoder_3_9_q_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿û¬„
conv
x

x_65_cast_fp16*
weight 

encoder_3_9_q_weight_to_fp16&
bias

encoder_3_9_q_bias_to_fp16
strides

q_57_strides_0
pad_type

q_57_pad_type_0
pad


q_57_pad_0!
	dilations

q_57_dilations_0
groups

q_57_groups_01
q_57_cast_fp16



Ä
 
 *$
name

"
q_57_cast_fp16c
const
k_57_pad_type_0
*%
name

"
k_57_pad_type_0*
val

	"
validn
const
k_57_strides_0


*$
name

"
k_57_strides_0*
val




h
const

k_57_pad_0


* 
name

"

k_57_pad_0*!
val





    r
const 
k_57_dilations_0


*&
name

"
k_57_dilations_0*
val




[
const
k_57_groups_0
*#
name

"
k_57_groups_0*
val


œ
const@
encoder_3_9_k_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_9_k_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ£¬•
const+
encoder_3_9_k_bias_to_fp16


Ä*0
name(
 
"
encoder_3_9_k_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿£∆„
conv
x

x_65_cast_fp16*
weight 

encoder_3_9_k_weight_to_fp16&
bias

encoder_3_9_k_bias_to_fp16
strides

k_57_strides_0
pad_type

k_57_pad_type_0
pad


k_57_pad_0!
	dilations

k_57_dilations_0
groups

k_57_groups_01
k_57_cast_fp16



Ä
 
 *$
name

"
k_57_cast_fp16c
const
v_57_pad_type_0
*%
name

"
v_57_pad_type_0*
val

	"
validn
const
v_57_strides_0


*$
name

"
v_57_strides_0*
val




h
const

v_57_pad_0


* 
name

"

v_57_pad_0*!
val





    r
const 
v_57_dilations_0


*&
name

"
v_57_dilations_0*
val




[
const
v_57_groups_0
*#
name

"
v_57_groups_0*
val


œ
const@
encoder_3_9_v_weight_to_fp16 


Ä
Ä

*2
name*
"
 "
encoder_3_9_v_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ®∆•
const+
encoder_3_9_v_bias_to_fp16


Ä*0
name(
 
"
encoder_3_9_v_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿®Œ„
conv
x

x_65_cast_fp16*
weight 

encoder_3_9_v_weight_to_fp16&
bias

encoder_3_9_v_bias_to_fp16
strides

v_57_strides_0
pad_type

v_57_pad_type_0
pad


v_57_pad_0!
	dilations

v_57_dilations_0
groups

v_57_groups_01
v_57_cast_fp16



Ä
 
 *$
name

"
v_57_cast_fp16m
const
var_1382


*
name

"	
op_1382*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

q_57_cast_fp16
shape


var_13825
var_1383_cast_fp16




 
Ä*'
name

"
op_1383_cast_fp16m
const
var_1388


*
name

"	
op_1388*+
val$




ˇˇˇˇˇˇˇˇˇ Äô
reshape
x

k_57_cast_fp16
shape


var_13885
var_1389_cast_fp16




 
Ä*'
name

"
op_1389_cast_fp16m
const
var_1394


*
name

"	
op_1394*+
val$




ˇˇˇˇˇˇˇˇˇ@Äô
reshape
x

v_57_cast_fp16
shape


var_13945
var_1395_cast_fp16




@
Ä*'
name

"
op_1395_cast_fp16f
const
mul_14_y_0_to_fp16

*(
name 

"
mul_14_y_0_to_fp16*
val


:
®1ú
mul
x

var_1383_cast_fp16
y

mul_14_y_0_to_fp163
mul_14_cast_fp16




 
Ä*&
name

"
mul_14_cast_fp16o
const
matmul_14_transpose_x_1
*-
name%

"
matmul_14_transpose_x_1*
val


o
const
matmul_14_transpose_y_1
*-
name%

"
matmul_14_transpose_y_1*
val


 ¸
matmul
x

mul_14_cast_fp16
y

var_1389_cast_fp16*
transpose_x

matmul_14_transpose_x_1*
transpose_y

matmul_14_transpose_y_17
matmul_14_cast_fp16 




Ä
Ä*)
name!

"
matmul_14_cast_fp16l
const
softmax_14_axis_0
*'
name

"
softmax_14_axis_0*
val



ˇˇˇˇˇˇˇˇˇ¨
softmax
x

matmul_14_cast_fp16
axis

softmax_14_axis_08
softmax_14_cast_fp16 




Ä
Ä**
name"

"
softmax_14_cast_fp16e
const
x_67_transpose_x_1
*(
name 

"
x_67_transpose_x_1*
val


 e
const
x_67_transpose_y_1
*(
name 

"
x_67_transpose_y_1*
val


Î
matmul
x

softmax_14_cast_fp16
y

var_1395_cast_fp16%
transpose_x

x_67_transpose_x_1%
transpose_y

x_67_transpose_y_11
x_67_cast_fp16




Ä
@*$
name

"
x_67_cast_fp16c
const
var_1399


*
name

"	
op_1399*!
val





 m
const
var_1401


*
name

"	
op_1401*+
val$




ˇˇˇˇˇˇˇˇˇÄ  ñ
	transpose
x

x_67_cast_fp16
perm


var_13995
var_1400_cast_fp16




@
Ä*#
name

"
transpose_210†
reshape
x

var_1400_cast_fp16
shape


var_14016
input_195_cast_fp16



Ä
 
 *)
name!

"
input_195_cast_fp16m
const
input_197_pad_type_0
**
name"

"
input_197_pad_type_0*
val

	"
validx
const#
input_197_strides_0


*)
name!

"
input_197_strides_0*
val




r
const
input_197_pad_0


*%
name

"
input_197_pad_0*!
val





    |
const%
input_197_dilations_0


*+
name#

"
input_197_dilations_0*
val




e
const
input_197_groups_0
*(
name 

"
input_197_groups_0*
val


’
constC
encoder_3_9_proj_weight_to_fp16 


Ä
Ä

*5
name-
%
#"!
encoder_3_9_proj_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ±Œ´
const.
encoder_3_9_proj_bias_to_fp16


Ä*3
name+
#
!"
encoder_3_9_proj_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿±÷ë
conv
x

input_195_cast_fp16-
weight#
!
encoder_3_9_proj_weight_to_fp16)
bias!

encoder_3_9_proj_bias_to_fp16"
strides

input_197_strides_0$
pad_type

input_197_pad_type_0
pad

input_197_pad_0&
	dilations

input_197_dilations_0 
groups

input_197_groups_06
input_197_cast_fp16



Ä
 
 *)
name!

"
input_197_cast_fp16m
const
input_199_pad_type_0
**
name"

"
input_199_pad_type_0*
val

	"
validx
const#
input_199_strides_0


*)
name!

"
input_199_strides_0*
val




r
const
input_199_pad_0


*%
name

"
input_199_pad_0*!
val





    |
const%
input_199_dilations_0


*+
name#

"
input_199_dilations_0*
val




e
const
input_199_groups_0
*(
name 

"
input_199_groups_0*
val


◊
constD
 encoder_3_9_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_9_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ¥÷≠
const/
encoder_3_9_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_9_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿¥ﬁì
conv
x

input_197_cast_fp16.
weight$
"
 encoder_3_9_ffn_0_weight_to_fp16*
bias"
 
encoder_3_9_ffn_0_bias_to_fp16"
strides

input_199_strides_0$
pad_type

input_199_pad_type_0
pad

input_199_pad_0&
	dilations

input_199_dilations_0 
groups

input_199_groups_06
input_199_cast_fp16



Ä
 
 *)
name!

"
input_199_cast_fp16e
const
input_201_mode_0
*&
name

"
input_201_mode_0*
val

	"
EXACT•
gelu
x

input_199_cast_fp16
mode

input_201_mode_06
input_201_cast_fp16



Ä
 
 *)
name!

"
input_201_cast_fp16c
const
x_69_pad_type_0
*%
name

"
x_69_pad_type_0*
val

	"
validn
const
x_69_strides_0


*$
name

"
x_69_strides_0*
val




h
const

x_69_pad_0


* 
name

"

x_69_pad_0*!
val





    r
const 
x_69_dilations_0


*&
name

"
x_69_dilations_0*
val




[
const
x_69_groups_0
*#
name

"
x_69_groups_0*
val


◊
constD
 encoder_3_9_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 encoder_3_9_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄΩﬁ≠
const/
encoder_3_9_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
encoder_3_9_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ΩÊ
conv
x

input_201_cast_fp16.
weight$
"
 encoder_3_9_ffn_2_weight_to_fp16*
bias"
 
encoder_3_9_ffn_2_bias_to_fp16
strides

x_69_strides_0
pad_type

x_69_pad_type_0
pad


x_69_pad_0!
	dilations

x_69_dilations_0
groups

x_69_groups_01
x_69_cast_fp16



Ä
 
 *$
name

"
x_69_cast_fp16a
const
var_1427


*
name

"	
op_1427*
val




a
const
var_1428


*
name

"	
op_1428*
val




n
const
input_203_pad_type_0
**
name"

"
input_203_pad_type_0*
val


"
customr
const
input_203_pad_0


*%
name

"
input_203_pad_0*!
val





    ë
const0
(input_203_exclude_padding_from_average_0
*>
name6
.
,"*
(input_203_exclude_padding_from_average_0*
val


 k
const
input_203_ceil_mode_0
*+
name#

"
input_203_ceil_mode_0*
val


 ı
avg_poolL
exclude_padding_from_average,
*
(input_203_exclude_padding_from_average_0
x

x_69_cast_fp16
kernel_sizes


var_1427
strides


var_1428$
pad_type

input_203_pad_type_0
pad

input_203_pad_0&
	ceil_mode

input_203_ceil_mode_06
input_203_cast_fp16



Ä

*)
name!

"
input_203_cast_fp16Ç
const'
input_205_scale_factor_height_0
*5
name-
%
#"!
input_205_scale_factor_height_0*
val




   @Ä
const&
input_205_scale_factor_width_0
*4
name,
$
"" 
input_205_scale_factor_width_0*
val




   @í
upsample_nearest_neighbor
x

input_203_cast_fp16:
scale_factor_height#
!
input_205_scale_factor_height_08
scale_factor_width"
 
input_205_scale_factor_width_06
input_205_cast_fp16



Ä
 
 *)
name!

"
input_205_cast_fp16c
const
x_71_pad_type_0
*%
name

"
x_71_pad_type_0*
val

	"
validn
const
x_71_strides_0


*$
name

"
x_71_strides_0*
val




h
const

x_71_pad_0


* 
name

"

x_71_pad_0*!
val





    r
const 
x_71_dilations_0


*&
name

"
x_71_dilations_0*
val




[
const
x_71_groups_0
*#
name

"
x_71_groups_0*
val


’
constC
 decoder_0_1_conv1_weight_to_fp16


`
Ä

*6
name.
&
$""
 decoder_0_1_conv1_weight_to_fp16*O
valH


`
Ä

*%
@model_path/weights/weight.binÄ¿Ê´
const.
decoder_0_1_conv1_bias_to_fp16



`*4
name,
$
"" 
decoder_0_1_conv1_bias_to_fp16*<
val5



`*%
@model_path/weights/weight.bin¿ÄËÔ
conv
x

input_205_cast_fp16.
weight$
"
 decoder_0_1_conv1_weight_to_fp16*
bias"
 
decoder_0_1_conv1_bias_to_fp16
strides

x_71_strides_0
pad_type

x_71_pad_type_0
pad


x_71_pad_0!
	dilations

x_71_dilations_0
groups

x_71_groups_00
x_71_cast_fp16



`
 
 *$
name

"
x_71_cast_fp16Å
const"
transpose_0_perm_0


*(
name 

"
transpose_0_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ }
const!
reshape_0_shape_0


*'
name

"
reshape_0_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ¢
	transpose
x

x_71_cast_fp16
perm

transpose_0_perm_07
transpose_0_cast_fp16


 
`
 
*#
name

"
transpose_209†
reshape
x

transpose_0_cast_fp16
shape

reshape_0_shape_0*
reshape_0_cast_fp16


 
Ä*)
name!

"
reshape_0_cast_fp16o
const
matmul_16_transpose_x_0
*-
name%

"
matmul_16_transpose_x_0*
val


 o
const
matmul_16_transpose_y_0
*-
name%

"
matmul_16_transpose_y_0*
val


 ï
const#
cos_0_to_fp16


 
 *#
name

"
cos_0_to_fp16*B
val;


 
 *%
@model_path/weights/weight.bin¿ÇËÌ
matmul
x

cos_0_to_fp16
y

reshape_0_cast_fp16*
transpose_x

matmul_16_transpose_x_0*
transpose_y

matmul_16_transpose_y_0*
matmul_16_cast_fp16


 
Ä*)
name!

"
matmul_16_cast_fp16o
const
matmul_18_transpose_x_0
*-
name%

"
matmul_18_transpose_x_0*
val


 o
const
matmul_18_transpose_y_0
*-
name%

"
matmul_18_transpose_y_0*
val


 ï
const#
sin_0_to_fp16


 
 *#
name

"
sin_0_to_fp16*B
val;


 
 *%
@model_path/weights/weight.binÄìËÌ
matmul
x

sin_0_to_fp16
y

reshape_0_cast_fp16*
transpose_x

matmul_18_transpose_x_0*
transpose_y

matmul_18_transpose_y_0*
matmul_18_cast_fp16


 
Ä*)
name!

"
matmul_18_cast_fp16f
const
mul_28_y_0_to_fp16

*(
name 

"
mul_28_y_0_to_fp16*
val


:
 ºë
mul
x

matmul_18_cast_fp16
y

mul_28_y_0_to_fp16'
mul_28_cast_fp16


 
Ä*&
name

"
mul_28_cast_fp16v
const!
reshape_4_shape_0


*'
name

"
reshape_4_shape_0*!
val





 ` ©
reshape
x

matmul_16_cast_fp16
shape

reshape_4_shape_05
reshape_4_cast_fp16


 
`
 
*)
name!

"
reshape_4_cast_fp16v
const!
reshape_5_shape_0


*'
name

"
reshape_5_shape_0*!
val





 ` ¶
reshape
x

mul_28_cast_fp16
shape

reshape_5_shape_05
reshape_5_cast_fp16


 
`
 
*)
name!

"
reshape_5_cast_fp16Å
const"
transpose_2_perm_0


*(
name 

"
transpose_2_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Å
const"
transpose_3_perm_0


*(
name 

"
transpose_3_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ç
const(
 _inversed_real_div_1_y_0_to_fp16

*6
name.
&
$""
 _inversed_real_div_1_y_0_to_fp16*
val


:
®1ß
	transpose
x

reshape_4_cast_fp16
perm

transpose_2_perm_07
transpose_2_cast_fp16



`
 
 *#
name

"
transpose_208»
mul
x

transpose_2_cast_fp16)
y$
"
 _inversed_real_div_1_y_0_to_fp16@
_inversed_real_div_1_cast_fp16



`
 
 *4
name,
$
"" 
_inversed_real_div_1_cast_fp16Ç
const(
 _inversed_real_div_2_y_0_to_fp16

*6
name.
&
$""
 _inversed_real_div_2_y_0_to_fp16*
val


:
®1ß
	transpose
x

reshape_5_cast_fp16
perm

transpose_3_perm_07
transpose_3_cast_fp16



`
 
 *#
name

"
transpose_207»
mul
x

transpose_3_cast_fp16)
y$
"
 _inversed_real_div_2_y_0_to_fp16@
_inversed_real_div_2_cast_fp16



`
 
 *4
name,
$
"" 
_inversed_real_div_2_cast_fp16u
const

range_1d_2


* 
name

"

range_1d_2*.
val'




 	
h
const
gather_0_axis_0
*%
name

"
gather_0_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_0_batch_dims_0
*+
name#

"
gather_0_batch_dims_0*
val


 Ú
gather'
x"
 
_inversed_real_div_1_cast_fp16
indices


range_1d_2
axis

gather_0_axis_0'

batch_dims

gather_0_batch_dims_04
gather_0_cast_fp16



`
 
*(
name 

"
gather_0_cast_fp16h
const
gather_1_axis_0
*%
name

"
gather_1_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_1_batch_dims_0
*+
name#

"
gather_1_batch_dims_0*
val


 Ú
gather'
x"
 
_inversed_real_div_2_cast_fp16
indices


range_1d_2
axis

gather_1_axis_0'

batch_dims

gather_1_batch_dims_04
gather_1_cast_fp16



`
 
*(
name 

"
gather_1_cast_fp16Å
const"
transpose_4_perm_0


*(
name 

"
transpose_4_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Å
const"
transpose_5_perm_0


*(
name 

"
transpose_5_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ }
const!
reshape_6_shape_0


*'
name

"
reshape_6_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ¶
	transpose
x

gather_0_cast_fp16
perm

transpose_4_perm_07
transpose_4_cast_fp16


 
`

*#
name

"
transpose_206†
reshape
x

transpose_4_cast_fp16
shape

reshape_6_shape_0*
reshape_6_cast_fp16


 
‡*)
name!

"
reshape_6_cast_fp16}
const!
reshape_7_shape_0


*'
name

"
reshape_7_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ¶
	transpose
x

gather_1_cast_fp16
perm

transpose_5_perm_07
transpose_5_cast_fp16


 
`

*#
name

"
transpose_205†
reshape
x

transpose_5_cast_fp16
shape

reshape_7_shape_0*
reshape_7_cast_fp16


 
‡*)
name!

"
reshape_7_cast_fp16o
const
matmul_21_transpose_x_0
*-
name%

"
matmul_21_transpose_x_0*
val


 o
const
matmul_21_transpose_y_0
*-
name%

"
matmul_21_transpose_y_0*
val


 Ì
matmul
x

cos_0_to_fp16
y

reshape_6_cast_fp16*
transpose_x

matmul_21_transpose_x_0*
transpose_y

matmul_21_transpose_y_0*
matmul_21_cast_fp16


 
‡*)
name!

"
matmul_21_cast_fp16o
const
matmul_22_transpose_x_0
*-
name%

"
matmul_22_transpose_x_0*
val


 o
const
matmul_22_transpose_y_0
*-
name%

"
matmul_22_transpose_y_0*
val


 Ì
matmul
x

sin_0_to_fp16
y

reshape_7_cast_fp16*
transpose_x

matmul_22_transpose_x_0*
transpose_y

matmul_22_transpose_y_0*
matmul_22_cast_fp16


 
‡*)
name!

"
matmul_22_cast_fp16ê
add
x

matmul_21_cast_fp16
y

matmul_22_cast_fp16&
add_1_cast_fp16


 
‡*%
name

"
add_1_cast_fp16o
const
matmul_23_transpose_x_0
*-
name%

"
matmul_23_transpose_x_0*
val


 o
const
matmul_23_transpose_y_0
*-
name%

"
matmul_23_transpose_y_0*
val


 Ì
matmul
x

sin_0_to_fp16
y

reshape_6_cast_fp16*
transpose_x

matmul_23_transpose_x_0*
transpose_y

matmul_23_transpose_y_0*
matmul_23_cast_fp16


 
‡*)
name!

"
matmul_23_cast_fp16o
const
matmul_24_transpose_x_0
*-
name%

"
matmul_24_transpose_x_0*
val


 o
const
matmul_24_transpose_y_0
*-
name%

"
matmul_24_transpose_y_0*
val


 Ì
matmul
x

cos_0_to_fp16
y

reshape_7_cast_fp16*
transpose_x

matmul_24_transpose_x_0*
transpose_y

matmul_24_transpose_y_0*
matmul_24_cast_fp16


 
‡*)
name!

"
matmul_24_cast_fp16ê
sub
x

matmul_23_cast_fp16
y

matmul_24_cast_fp16&
sub_1_cast_fp16


 
‡*%
name

"
sub_1_cast_fp16f
const
mul_30_y_0_to_fp16

*(
name 

"
mul_30_y_0_to_fp16*
val


:
 ºç
mul
x

sub_1_cast_fp16
y

mul_30_y_0_to_fp16'
mul_30_cast_fp16


 
‡*&
name

"
mul_30_cast_fp16x
const"
reshape_10_shape_0


*(
name 

"
reshape_10_shape_0*!
val





 `®
reshape
x

add_1_cast_fp16
shape

reshape_10_shape_06
reshape_10_cast_fp16


 
`

**
name"

"
reshape_10_cast_fp16x
const"
reshape_11_shape_0


*(
name 

"
reshape_11_shape_0*!
val





 `©
reshape
x

mul_30_cast_fp16
shape

reshape_11_shape_06
reshape_11_cast_fp16


 
`

**
name"

"
reshape_11_cast_fp16Ç
const(
 _inversed_real_div_4_y_0_to_fp16

*6
name.
&
$""
 _inversed_real_div_4_y_0_to_fp16*
val


:
®1«
mul
x

reshape_10_cast_fp16)
y$
"
 _inversed_real_div_4_y_0_to_fp16@
_inversed_real_div_4_cast_fp16


 
`

*4
name,
$
"" 
_inversed_real_div_4_cast_fp16Ç
const(
 _inversed_real_div_5_y_0_to_fp16

*6
name.
&
$""
 _inversed_real_div_5_y_0_to_fp16*
val


:
®1«
mul
x

reshape_11_cast_fp16)
y$
"
 _inversed_real_div_5_y_0_to_fp16@
_inversed_real_div_5_cast_fp16


 
`

*4
name,
$
"" 
_inversed_real_div_5_cast_fp16m
const
input_207_interleave_0
*,
name$

"
input_207_interleave_0*
val


 Q
const
const_90
*
name

"

const_90*
val


˚
concatN
valuesD
 
_inversed_real_div_4_cast_fp16
 
_inversed_real_div_5_cast_fp16
axis


const_90(

interleave

input_207_interleave_06
input_207_cast_fp16


 
¿

*)
name!

"
input_207_cast_fp16m
const
input_209_pad_type_0
**
name"

"
input_209_pad_type_0*
val

	"
validx
const#
input_209_strides_0


*)
name!

"
input_209_strides_0*
val




r
const
input_209_pad_0


*%
name

"
input_209_pad_0*!
val





    |
const%
input_209_dilations_0


*+
name#

"
input_209_dilations_0*
val




e
const
input_209_groups_0
*(
name 

"
input_209_groups_0*
val


Ö
const$
transpose_126_perm_0


**
name"

"
transpose_126_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ ◊
constD
 decoder_0_1_ffn_0_weight_to_fp16 


¿
¿

*6
name.
&
$""
 decoder_0_1_ffn_0_weight_to_fp16*P
valI 


¿
¿

*%
@model_path/weights/weight.bin¿£Ë≠
const/
decoder_0_1_ffn_0_bias_to_fp16


¿*4
name,
$
"" 
decoder_0_1_ffn_0_bias_to_fp16*=
val6


¿*%
@model_path/weights/weight.binÄ‰Ï¨
	transpose
x

input_207_cast_fp16 
perm

transpose_126_perm_0:
transpose_126_cast_fp16



¿
 
*#
name

"
transpose_204ó
conv 
x

transpose_126_cast_fp16.
weight$
"
 decoder_0_1_ffn_0_weight_to_fp16*
bias"
 
decoder_0_1_ffn_0_bias_to_fp16"
strides

input_209_strides_0$
pad_type

input_209_pad_type_0
pad

input_209_pad_0&
	dilations

input_209_dilations_0 
groups

input_209_groups_06
input_209_cast_fp16



¿
 
*)
name!

"
input_209_cast_fp16e
const
input_211_mode_0
*&
name

"
input_211_mode_0*
val

	"
EXACT•
gelu
x

input_209_cast_fp16
mode

input_211_mode_06
input_211_cast_fp16



¿
 
*)
name!

"
input_211_cast_fp16c
const
x_75_pad_type_0
*%
name

"
x_75_pad_type_0*
val

	"
validn
const
x_75_strides_0


*$
name

"
x_75_strides_0*
val




h
const

x_75_pad_0


* 
name

"

x_75_pad_0*!
val





    r
const 
x_75_dilations_0


*&
name

"
x_75_dilations_0*
val




[
const
x_75_groups_0
*#
name

"
x_75_groups_0*
val


◊
constD
 decoder_0_1_ffn_2_weight_to_fp16 


¿
¿

*6
name.
&
$""
 decoder_0_1_ffn_2_weight_to_fp16*P
valI 


¿
¿

*%
@model_path/weights/weight.bin¿ÁÏ≠
const/
decoder_0_1_ffn_2_bias_to_fp16


¿*4
name,
$
"" 
decoder_0_1_ffn_2_bias_to_fp16*=
val6


¿*%
@model_path/weights/weight.binÄ®Ò
conv
x

input_211_cast_fp16.
weight$
"
 decoder_0_1_ffn_2_weight_to_fp16*
bias"
 
decoder_0_1_ffn_2_bias_to_fp16
strides

x_75_strides_0
pad_type

x_75_pad_type_0
pad


x_75_pad_0!
	dilations

x_75_dilations_0
groups

x_75_groups_01
x_75_cast_fp16



¿
 
*$
name

"
x_75_cast_fp16^
const
tile_0


*
name


"
tile_0*
val




``^
const
var_1484_axis_0
*$
name

"
op_1484_axis_0*
val


Ò
split
x

x_75_cast_fp16
split_sizes


tile_0
axis

var_1484_axis_06
var_1484_cast_fp16_0



`
 
6
var_1484_cast_fp16_1



`
 
*'
name

"
op_1484_cast_fp16Å
const"
transpose_8_perm_0


*(
name 

"
transpose_8_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Å
const"
transpose_9_perm_0


*(
name 

"
transpose_9_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_12_shape_0


*(
name 

"
reshape_12_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

var_1484_cast_fp16_0
perm

transpose_8_perm_07
transpose_8_cast_fp16


 
`

*#
name

"
transpose_203£
reshape
x

transpose_8_cast_fp16
shape

reshape_12_shape_0+
reshape_12_cast_fp16


 
‡**
name"

"
reshape_12_cast_fp16
const"
reshape_13_shape_0


*(
name 

"
reshape_13_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

var_1484_cast_fp16_1
perm

transpose_9_perm_07
transpose_9_cast_fp16


 
`

*#
name

"
transpose_202£
reshape
x

transpose_9_cast_fp16
shape

reshape_13_shape_0+
reshape_13_cast_fp16


 
‡**
name"

"
reshape_13_cast_fp16o
const
matmul_26_transpose_x_0
*-
name%

"
matmul_26_transpose_x_0*
val


 o
const
matmul_26_transpose_y_0
*-
name%

"
matmul_26_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_12_cast_fp16*
transpose_x

matmul_26_transpose_x_0*
transpose_y

matmul_26_transpose_y_0*
matmul_26_cast_fp16


 
‡*)
name!

"
matmul_26_cast_fp16o
const
matmul_27_transpose_x_0
*-
name%

"
matmul_27_transpose_x_0*
val


 o
const
matmul_27_transpose_y_0
*-
name%

"
matmul_27_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_13_cast_fp16*
transpose_x

matmul_27_transpose_x_0*
transpose_y

matmul_27_transpose_y_0*
matmul_27_cast_fp16


 
‡*)
name!

"
matmul_27_cast_fp16ê
sub
x

matmul_26_cast_fp16
y

matmul_27_cast_fp16&
sub_2_cast_fp16


 
‡*%
name

"
sub_2_cast_fp16o
const
matmul_28_transpose_x_0
*-
name%

"
matmul_28_transpose_x_0*
val


 o
const
matmul_28_transpose_y_0
*-
name%

"
matmul_28_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_12_cast_fp16*
transpose_x

matmul_28_transpose_x_0*
transpose_y

matmul_28_transpose_y_0*
matmul_28_cast_fp16


 
‡*)
name!

"
matmul_28_cast_fp16o
const
matmul_29_transpose_x_0
*-
name%

"
matmul_29_transpose_x_0*
val


 o
const
matmul_29_transpose_y_0
*-
name%

"
matmul_29_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_13_cast_fp16*
transpose_x

matmul_29_transpose_x_0*
transpose_y

matmul_29_transpose_y_0*
matmul_29_cast_fp16


 
‡*)
name!

"
matmul_29_cast_fp16ê
add
x

matmul_28_cast_fp16
y

matmul_29_cast_fp16&
add_2_cast_fp16


 
‡*%
name

"
add_2_cast_fp16x
const"
reshape_16_shape_0


*(
name 

"
reshape_16_shape_0*!
val





 `®
reshape
x

sub_2_cast_fp16
shape

reshape_16_shape_06
reshape_16_cast_fp16


 
`

**
name"

"
reshape_16_cast_fp16x
const"
reshape_17_shape_0


*(
name 

"
reshape_17_shape_0*!
val





 `®
reshape
x

add_2_cast_fp16
shape

reshape_17_shape_06
reshape_17_cast_fp16


 
`

**
name"

"
reshape_17_cast_fp16É
const#
transpose_10_perm_0


*)
name!

"
transpose_10_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_11_perm_0


*)
name!

"
transpose_11_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ç
const(
 _inversed_real_div_7_y_0_to_fp16

*6
name.
&
$""
 _inversed_real_div_7_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_16_cast_fp16
perm

transpose_10_perm_08
transpose_10_cast_fp16



`
 
*#
name

"
transpose_201…
mul
x

transpose_10_cast_fp16)
y$
"
 _inversed_real_div_7_y_0_to_fp16@
_inversed_real_div_7_cast_fp16



`
 
*4
name,
$
"" 
_inversed_real_div_7_cast_fp16Ç
const(
 _inversed_real_div_8_y_0_to_fp16

*6
name.
&
$""
 _inversed_real_div_8_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_17_cast_fp16
perm

transpose_11_perm_08
transpose_11_cast_fp16



`
 
*#
name

"
transpose_200…
mul
x

transpose_11_cast_fp16)
y$
"
 _inversed_real_div_8_y_0_to_fp16@
_inversed_real_div_8_cast_fp16



`
 
*4
name,
$
"" 
_inversed_real_div_8_cast_fp16s
const

range_1d_7


* 
name

"

range_1d_7*,
val%





	h
const
gather_2_axis_0
*%
name

"
gather_2_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_2_batch_dims_0
*+
name#

"
gather_2_batch_dims_0*
val


 Ú
gather'
x"
 
_inversed_real_div_7_cast_fp16
indices


range_1d_7
axis

gather_2_axis_0'

batch_dims

gather_2_batch_dims_04
gather_2_cast_fp16



`
 
*(
name 

"
gather_2_cast_fp16h
const
gather_3_axis_0
*%
name

"
gather_3_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_3_batch_dims_0
*+
name#

"
gather_3_batch_dims_0*
val


 Ú
gather'
x"
 
_inversed_real_div_8_cast_fp16
indices


range_1d_7
axis

gather_3_axis_0'

batch_dims

gather_3_batch_dims_04
gather_3_cast_fp16



`
 
*(
name 

"
gather_3_cast_fp16f
const
mul_32_y_0_to_fp16

*(
name 

"
mul_32_y_0_to_fp16*
val


:
 ºõ
mul
x

gather_3_cast_fp16
y

mul_32_y_0_to_fp162
mul_32_cast_fp16



`
 
*&
name

"
mul_32_cast_fp16h
const
concat_0_axis_0
*%
name

"
concat_0_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_0_interleave_0
*+
name#

"
concat_0_interleave_0*
val


 Ú
concatB
values8
 
_inversed_real_div_7_cast_fp16

gather_2_cast_fp16
axis

concat_0_axis_0'

interleave

concat_0_interleave_04
concat_0_cast_fp16



`
 
 *(
name 

"
concat_0_cast_fp16h
const
concat_1_axis_0
*%
name

"
concat_1_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_1_interleave_0
*+
name#

"
concat_1_interleave_0*
val


 
concat@
values6
 
_inversed_real_div_8_cast_fp16

mul_32_cast_fp16
axis

concat_1_axis_0'

interleave

concat_1_interleave_04
concat_1_cast_fp16



`
 
 *(
name 

"
concat_1_cast_fp16É
const#
transpose_12_perm_0


*)
name!

"
transpose_12_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_13_perm_0


*)
name!

"
transpose_13_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_18_shape_0


*(
name 

"
reshape_18_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_0_cast_fp16
perm

transpose_12_perm_08
transpose_12_cast_fp16


 
`
 
*#
name

"
transpose_199§
reshape
x

transpose_12_cast_fp16
shape

reshape_18_shape_0+
reshape_18_cast_fp16


 
Ä**
name"

"
reshape_18_cast_fp16
const"
reshape_19_shape_0


*(
name 

"
reshape_19_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_1_cast_fp16
perm

transpose_13_perm_08
transpose_13_cast_fp16


 
`
 
*#
name

"
transpose_198§
reshape
x

transpose_13_cast_fp16
shape

reshape_19_shape_0+
reshape_19_cast_fp16


 
Ä**
name"

"
reshape_19_cast_fp16o
const
matmul_31_transpose_x_0
*-
name%

"
matmul_31_transpose_x_0*
val


 o
const
matmul_31_transpose_y_0
*-
name%

"
matmul_31_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_18_cast_fp16*
transpose_x

matmul_31_transpose_x_0*
transpose_y

matmul_31_transpose_y_0*
matmul_31_cast_fp16


 
Ä*)
name!

"
matmul_31_cast_fp16o
const
matmul_32_transpose_x_0
*-
name%

"
matmul_32_transpose_x_0*
val


 o
const
matmul_32_transpose_y_0
*-
name%

"
matmul_32_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_19_cast_fp16*
transpose_x

matmul_32_transpose_x_0*
transpose_y

matmul_32_transpose_y_0*
matmul_32_cast_fp16


 
Ä*)
name!

"
matmul_32_cast_fp16ê
sub
x

matmul_31_cast_fp16
y

matmul_32_cast_fp16&
sub_3_cast_fp16


 
Ä*%
name

"
sub_3_cast_fp16x
const"
reshape_22_shape_0


*(
name 

"
reshape_22_shape_0*!
val





 ` ®
reshape
x

sub_3_cast_fp16
shape

reshape_22_shape_06
reshape_22_cast_fp16


 
`
 
**
name"

"
reshape_22_cast_fp16É
const#
transpose_14_perm_0


*)
name!

"
transpose_14_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_10_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_10_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_22_cast_fp16
perm

transpose_14_perm_08
transpose_14_cast_fp16



`
 
 *#
name

"
transpose_197Ã
mul
x

transpose_14_cast_fp16*
y%
#
!_inversed_real_div_10_y_0_to_fp16A
_inversed_real_div_10_cast_fp16



`
 
 *5
name-
%
#"!
_inversed_real_div_10_cast_fp16m
const
input_215_pad_type_0
**
name"

"
input_215_pad_type_0*
val

	"
validx
const#
input_215_strides_0


*)
name!

"
input_215_strides_0*
val




r
const
input_215_pad_0


*%
name

"
input_215_pad_0*!
val





    |
const%
input_215_dilations_0


*+
name#

"
input_215_dilations_0*
val




e
const
input_215_groups_0
*(
name 

"
input_215_groups_0*
val


”
constB
 decoder_0_1_conv2_weight_to_fp16


`
`

*6
name.
&
$""
 decoder_0_1_conv2_weight_to_fp16*N
valG


`
`

*%
@model_path/weights/weight.bin¿´Ò´
const.
decoder_0_1_conv2_bias_to_fp16



`*4
name,
$
"" 
decoder_0_1_conv2_bias_to_fp16*<
val5



`*%
@model_path/weights/weight.binÄºÚû
conv(
x#
!
_inversed_real_div_10_cast_fp16.
weight$
"
 decoder_0_1_conv2_weight_to_fp16*
bias"
 
decoder_0_1_conv2_bias_to_fp16"
strides

input_215_strides_0$
pad_type

input_215_pad_type_0
pad

input_215_pad_0&
	dilations

input_215_dilations_0 
groups

input_215_groups_05
input_215_cast_fp16



`
 
 *)
name!

"
input_215_cast_fp16c
const
x_77_pad_type_0
*%
name

"
x_77_pad_type_0*
val

	"
validn
const
x_77_strides_0


*$
name

"
x_77_strides_0*
val




h
const

x_77_pad_0


* 
name

"

x_77_pad_0*!
val





    r
const 
x_77_dilations_0


*&
name

"
x_77_dilations_0*
val




[
const
x_77_groups_0
*#
name

"
x_77_groups_0*
val


”
constB
 decoder_0_2_conv1_weight_to_fp16


`
`

*6
name.
&
$""
 decoder_0_2_conv1_weight_to_fp16*N
valG


`
`

*%
@model_path/weights/weight.binÄæÚ´
const.
decoder_0_2_conv1_bias_to_fp16



`*4
name,
$
"" 
decoder_0_2_conv1_bias_to_fp16*<
val5



`*%
@model_path/weights/weight.bin¿ŒÛÔ
conv
x

input_215_cast_fp16.
weight$
"
 decoder_0_2_conv1_weight_to_fp16*
bias"
 
decoder_0_2_conv1_bias_to_fp16
strides

x_77_strides_0
pad_type

x_77_pad_type_0
pad


x_77_pad_0!
	dilations

x_77_dilations_0
groups

x_77_groups_00
x_77_cast_fp16



`
 
 *$
name

"
x_77_cast_fp16É
const#
transpose_16_perm_0


*)
name!

"
transpose_16_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_24_shape_0


*(
name 

"
reshape_24_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ§
	transpose
x

x_77_cast_fp16
perm

transpose_16_perm_08
transpose_16_cast_fp16


 
`
 
*#
name

"
transpose_196§
reshape
x

transpose_16_cast_fp16
shape

reshape_24_shape_0+
reshape_24_cast_fp16


 
Ä**
name"

"
reshape_24_cast_fp16o
const
matmul_36_transpose_x_0
*-
name%

"
matmul_36_transpose_x_0*
val


 o
const
matmul_36_transpose_y_0
*-
name%

"
matmul_36_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_24_cast_fp16*
transpose_x

matmul_36_transpose_x_0*
transpose_y

matmul_36_transpose_y_0*
matmul_36_cast_fp16


 
Ä*)
name!

"
matmul_36_cast_fp16o
const
matmul_38_transpose_x_0
*-
name%

"
matmul_38_transpose_x_0*
val


 o
const
matmul_38_transpose_y_0
*-
name%

"
matmul_38_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_24_cast_fp16*
transpose_x

matmul_38_transpose_x_0*
transpose_y

matmul_38_transpose_y_0*
matmul_38_cast_fp16


 
Ä*)
name!

"
matmul_38_cast_fp16f
const
mul_35_y_0_to_fp16

*(
name 

"
mul_35_y_0_to_fp16*
val


:
 ºë
mul
x

matmul_38_cast_fp16
y

mul_35_y_0_to_fp16'
mul_35_cast_fp16


 
Ä*&
name

"
mul_35_cast_fp16x
const"
reshape_28_shape_0


*(
name 

"
reshape_28_shape_0*!
val





 ` ¨
reshape
x

matmul_36_cast_fp16
shape

reshape_28_shape_06
reshape_28_cast_fp16


 
`
 
**
name"

"
reshape_28_cast_fp16x
const"
reshape_29_shape_0


*(
name 

"
reshape_29_shape_0*!
val





 ` ©
reshape
x

mul_35_cast_fp16
shape

reshape_29_shape_06
reshape_29_cast_fp16


 
`
 
**
name"

"
reshape_29_cast_fp16É
const#
transpose_18_perm_0


*)
name!

"
transpose_18_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_19_perm_0


*)
name!

"
transpose_19_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_13_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_13_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_28_cast_fp16
perm

transpose_18_perm_08
transpose_18_cast_fp16



`
 
 *#
name

"
transpose_195Ã
mul
x

transpose_18_cast_fp16*
y%
#
!_inversed_real_div_13_y_0_to_fp16A
_inversed_real_div_13_cast_fp16



`
 
 *5
name-
%
#"!
_inversed_real_div_13_cast_fp16Ñ
const)
!_inversed_real_div_14_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_14_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_29_cast_fp16
perm

transpose_19_perm_08
transpose_19_cast_fp16



`
 
 *#
name

"
transpose_194Ã
mul
x

transpose_19_cast_fp16*
y%
#
!_inversed_real_div_14_y_0_to_fp16A
_inversed_real_div_14_cast_fp16



`
 
 *5
name-
%
#"!
_inversed_real_div_14_cast_fp16w
const
range_1d_12


*!
name

"
range_1d_12*.
val'




 	
h
const
gather_4_axis_0
*%
name

"
gather_4_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_4_batch_dims_0
*+
name#

"
gather_4_batch_dims_0*
val


 Ù
gather(
x#
!
_inversed_real_div_13_cast_fp16
indices

range_1d_12
axis

gather_4_axis_0'

batch_dims

gather_4_batch_dims_04
gather_4_cast_fp16



`
 
*(
name 

"
gather_4_cast_fp16h
const
gather_5_axis_0
*%
name

"
gather_5_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_5_batch_dims_0
*+
name#

"
gather_5_batch_dims_0*
val


 Ù
gather(
x#
!
_inversed_real_div_14_cast_fp16
indices

range_1d_12
axis

gather_5_axis_0'

batch_dims

gather_5_batch_dims_04
gather_5_cast_fp16



`
 
*(
name 

"
gather_5_cast_fp16É
const#
transpose_20_perm_0


*)
name!

"
transpose_20_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_21_perm_0


*)
name!

"
transpose_21_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_30_shape_0


*(
name 

"
reshape_30_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

gather_4_cast_fp16
perm

transpose_20_perm_08
transpose_20_cast_fp16


 
`

*#
name

"
transpose_193§
reshape
x

transpose_20_cast_fp16
shape

reshape_30_shape_0+
reshape_30_cast_fp16


 
‡**
name"

"
reshape_30_cast_fp16
const"
reshape_31_shape_0


*(
name 

"
reshape_31_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

gather_5_cast_fp16
perm

transpose_21_perm_08
transpose_21_cast_fp16


 
`

*#
name

"
transpose_192§
reshape
x

transpose_21_cast_fp16
shape

reshape_31_shape_0+
reshape_31_cast_fp16


 
‡**
name"

"
reshape_31_cast_fp16o
const
matmul_41_transpose_x_0
*-
name%

"
matmul_41_transpose_x_0*
val


 o
const
matmul_41_transpose_y_0
*-
name%

"
matmul_41_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_30_cast_fp16*
transpose_x

matmul_41_transpose_x_0*
transpose_y

matmul_41_transpose_y_0*
matmul_41_cast_fp16


 
‡*)
name!

"
matmul_41_cast_fp16o
const
matmul_42_transpose_x_0
*-
name%

"
matmul_42_transpose_x_0*
val


 o
const
matmul_42_transpose_y_0
*-
name%

"
matmul_42_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_31_cast_fp16*
transpose_x

matmul_42_transpose_x_0*
transpose_y

matmul_42_transpose_y_0*
matmul_42_cast_fp16


 
‡*)
name!

"
matmul_42_cast_fp16ê
add
x

matmul_41_cast_fp16
y

matmul_42_cast_fp16&
add_5_cast_fp16


 
‡*%
name

"
add_5_cast_fp16o
const
matmul_43_transpose_x_0
*-
name%

"
matmul_43_transpose_x_0*
val


 o
const
matmul_43_transpose_y_0
*-
name%

"
matmul_43_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_30_cast_fp16*
transpose_x

matmul_43_transpose_x_0*
transpose_y

matmul_43_transpose_y_0*
matmul_43_cast_fp16


 
‡*)
name!

"
matmul_43_cast_fp16o
const
matmul_44_transpose_x_0
*-
name%

"
matmul_44_transpose_x_0*
val


 o
const
matmul_44_transpose_y_0
*-
name%

"
matmul_44_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_31_cast_fp16*
transpose_x

matmul_44_transpose_x_0*
transpose_y

matmul_44_transpose_y_0*
matmul_44_cast_fp16


 
‡*)
name!

"
matmul_44_cast_fp16ê
sub
x

matmul_43_cast_fp16
y

matmul_44_cast_fp16&
sub_5_cast_fp16


 
‡*%
name

"
sub_5_cast_fp16f
const
mul_37_y_0_to_fp16

*(
name 

"
mul_37_y_0_to_fp16*
val


:
 ºç
mul
x

sub_5_cast_fp16
y

mul_37_y_0_to_fp16'
mul_37_cast_fp16


 
‡*&
name

"
mul_37_cast_fp16x
const"
reshape_34_shape_0


*(
name 

"
reshape_34_shape_0*!
val





 `®
reshape
x

add_5_cast_fp16
shape

reshape_34_shape_06
reshape_34_cast_fp16


 
`

**
name"

"
reshape_34_cast_fp16x
const"
reshape_35_shape_0


*(
name 

"
reshape_35_shape_0*!
val





 `©
reshape
x

mul_37_cast_fp16
shape

reshape_35_shape_06
reshape_35_cast_fp16


 
`

**
name"

"
reshape_35_cast_fp16Ñ
const)
!_inversed_real_div_16_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_16_y_0_to_fp16*
val


:
®1 
mul
x

reshape_34_cast_fp16*
y%
#
!_inversed_real_div_16_y_0_to_fp16A
_inversed_real_div_16_cast_fp16


 
`

*5
name-
%
#"!
_inversed_real_div_16_cast_fp16Ñ
const)
!_inversed_real_div_17_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_17_y_0_to_fp16*
val


:
®1 
mul
x

reshape_35_cast_fp16*
y%
#
!_inversed_real_div_17_y_0_to_fp16A
_inversed_real_div_17_cast_fp16


 
`

*5
name-
%
#"!
_inversed_real_div_17_cast_fp16m
const
input_217_interleave_0
*,
name$

"
input_217_interleave_0*
val


 Q
const
const_91
*
name

"

const_91*
val


˝
concatP
valuesF
!
_inversed_real_div_16_cast_fp16
!
_inversed_real_div_17_cast_fp16
axis


const_91(

interleave

input_217_interleave_06
input_217_cast_fp16


 
¿

*)
name!

"
input_217_cast_fp16m
const
input_219_pad_type_0
**
name"

"
input_219_pad_type_0*
val

	"
validx
const#
input_219_strides_0


*)
name!

"
input_219_strides_0*
val




r
const
input_219_pad_0


*%
name

"
input_219_pad_0*!
val





    |
const%
input_219_dilations_0


*+
name#

"
input_219_dilations_0*
val




e
const
input_219_groups_0
*(
name 

"
input_219_groups_0*
val


Ö
const$
transpose_127_perm_0


**
name"

"
transpose_127_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ ◊
constD
 decoder_0_2_ffn_0_weight_to_fp16 


¿
¿

*6
name.
&
$""
 decoder_0_2_ffn_0_weight_to_fp16*P
valI 


¿
¿

*%
@model_path/weights/weight.bin¿–Û≠
const/
decoder_0_2_ffn_0_bias_to_fp16


¿*4
name,
$
"" 
decoder_0_2_ffn_0_bias_to_fp16*=
val6


¿*%
@model_path/weights/weight.binÄë¯¨
	transpose
x

input_217_cast_fp16 
perm

transpose_127_perm_0:
transpose_127_cast_fp16



¿
 
*#
name

"
transpose_191ó
conv 
x

transpose_127_cast_fp16.
weight$
"
 decoder_0_2_ffn_0_weight_to_fp16*
bias"
 
decoder_0_2_ffn_0_bias_to_fp16"
strides

input_219_strides_0$
pad_type

input_219_pad_type_0
pad

input_219_pad_0&
	dilations

input_219_dilations_0 
groups

input_219_groups_06
input_219_cast_fp16



¿
 
*)
name!

"
input_219_cast_fp16e
const
input_221_mode_0
*&
name

"
input_221_mode_0*
val

	"
EXACT•
gelu
x

input_219_cast_fp16
mode

input_221_mode_06
input_221_cast_fp16



¿
 
*)
name!

"
input_221_cast_fp16c
const
x_81_pad_type_0
*%
name

"
x_81_pad_type_0*
val

	"
validn
const
x_81_strides_0


*$
name

"
x_81_strides_0*
val




h
const

x_81_pad_0


* 
name

"

x_81_pad_0*!
val





    r
const 
x_81_dilations_0


*&
name

"
x_81_dilations_0*
val




[
const
x_81_groups_0
*#
name

"
x_81_groups_0*
val


◊
constD
 decoder_0_2_ffn_2_weight_to_fp16 


¿
¿

*6
name.
&
$""
 decoder_0_2_ffn_2_weight_to_fp16*P
valI 


¿
¿

*%
@model_path/weights/weight.bin¿î¯≠
const/
decoder_0_2_ffn_2_bias_to_fp16


¿*4
name,
$
"" 
decoder_0_2_ffn_2_bias_to_fp16*=
val6


¿*%
@model_path/weights/weight.binÄ’¸
conv
x

input_221_cast_fp16.
weight$
"
 decoder_0_2_ffn_2_weight_to_fp16*
bias"
 
decoder_0_2_ffn_2_bias_to_fp16
strides

x_81_strides_0
pad_type

x_81_pad_type_0
pad


x_81_pad_0!
	dilations

x_81_dilations_0
groups

x_81_groups_01
x_81_cast_fp16



¿
 
*$
name

"
x_81_cast_fp16^
const
tile_1


*
name


"
tile_1*
val




``^
const
var_1530_axis_0
*$
name

"
op_1530_axis_0*
val


Ò
split
x

x_81_cast_fp16
split_sizes


tile_1
axis

var_1530_axis_06
var_1530_cast_fp16_0



`
 
6
var_1530_cast_fp16_1



`
 
*'
name

"
op_1530_cast_fp16É
const#
transpose_24_perm_0


*)
name!

"
transpose_24_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_25_perm_0


*)
name!

"
transpose_25_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_36_shape_0


*(
name 

"
reshape_36_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ™
	transpose
x

var_1530_cast_fp16_0
perm

transpose_24_perm_08
transpose_24_cast_fp16


 
`

*#
name

"
transpose_190§
reshape
x

transpose_24_cast_fp16
shape

reshape_36_shape_0+
reshape_36_cast_fp16


 
‡**
name"

"
reshape_36_cast_fp16
const"
reshape_37_shape_0


*(
name 

"
reshape_37_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ™
	transpose
x

var_1530_cast_fp16_1
perm

transpose_25_perm_08
transpose_25_cast_fp16


 
`

*#
name

"
transpose_189§
reshape
x

transpose_25_cast_fp16
shape

reshape_37_shape_0+
reshape_37_cast_fp16


 
‡**
name"

"
reshape_37_cast_fp16o
const
matmul_46_transpose_x_0
*-
name%

"
matmul_46_transpose_x_0*
val


 o
const
matmul_46_transpose_y_0
*-
name%

"
matmul_46_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_36_cast_fp16*
transpose_x

matmul_46_transpose_x_0*
transpose_y

matmul_46_transpose_y_0*
matmul_46_cast_fp16


 
‡*)
name!

"
matmul_46_cast_fp16o
const
matmul_47_transpose_x_0
*-
name%

"
matmul_47_transpose_x_0*
val


 o
const
matmul_47_transpose_y_0
*-
name%

"
matmul_47_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_37_cast_fp16*
transpose_x

matmul_47_transpose_x_0*
transpose_y

matmul_47_transpose_y_0*
matmul_47_cast_fp16


 
‡*)
name!

"
matmul_47_cast_fp16ê
sub
x

matmul_46_cast_fp16
y

matmul_47_cast_fp16&
sub_6_cast_fp16


 
‡*%
name

"
sub_6_cast_fp16o
const
matmul_48_transpose_x_0
*-
name%

"
matmul_48_transpose_x_0*
val


 o
const
matmul_48_transpose_y_0
*-
name%

"
matmul_48_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_36_cast_fp16*
transpose_x

matmul_48_transpose_x_0*
transpose_y

matmul_48_transpose_y_0*
matmul_48_cast_fp16


 
‡*)
name!

"
matmul_48_cast_fp16o
const
matmul_49_transpose_x_0
*-
name%

"
matmul_49_transpose_x_0*
val


 o
const
matmul_49_transpose_y_0
*-
name%

"
matmul_49_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_37_cast_fp16*
transpose_x

matmul_49_transpose_x_0*
transpose_y

matmul_49_transpose_y_0*
matmul_49_cast_fp16


 
‡*)
name!

"
matmul_49_cast_fp16ê
add
x

matmul_48_cast_fp16
y

matmul_49_cast_fp16&
add_6_cast_fp16


 
‡*%
name

"
add_6_cast_fp16x
const"
reshape_40_shape_0


*(
name 

"
reshape_40_shape_0*!
val





 `®
reshape
x

sub_6_cast_fp16
shape

reshape_40_shape_06
reshape_40_cast_fp16


 
`

**
name"

"
reshape_40_cast_fp16x
const"
reshape_41_shape_0


*(
name 

"
reshape_41_shape_0*!
val





 `®
reshape
x

add_6_cast_fp16
shape

reshape_41_shape_06
reshape_41_cast_fp16


 
`

**
name"

"
reshape_41_cast_fp16É
const#
transpose_26_perm_0


*)
name!

"
transpose_26_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_27_perm_0


*)
name!

"
transpose_27_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_19_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_19_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_40_cast_fp16
perm

transpose_26_perm_08
transpose_26_cast_fp16



`
 
*#
name

"
transpose_188Ã
mul
x

transpose_26_cast_fp16*
y%
#
!_inversed_real_div_19_y_0_to_fp16A
_inversed_real_div_19_cast_fp16



`
 
*5
name-
%
#"!
_inversed_real_div_19_cast_fp16Ñ
const)
!_inversed_real_div_20_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_20_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_41_cast_fp16
perm

transpose_27_perm_08
transpose_27_cast_fp16



`
 
*#
name

"
transpose_187Ã
mul
x

transpose_27_cast_fp16*
y%
#
!_inversed_real_div_20_y_0_to_fp16A
_inversed_real_div_20_cast_fp16



`
 
*5
name-
%
#"!
_inversed_real_div_20_cast_fp16u
const
range_1d_17


*!
name

"
range_1d_17*,
val%





	h
const
gather_6_axis_0
*%
name

"
gather_6_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_6_batch_dims_0
*+
name#

"
gather_6_batch_dims_0*
val


 Ù
gather(
x#
!
_inversed_real_div_19_cast_fp16
indices

range_1d_17
axis

gather_6_axis_0'

batch_dims

gather_6_batch_dims_04
gather_6_cast_fp16



`
 
*(
name 

"
gather_6_cast_fp16h
const
gather_7_axis_0
*%
name

"
gather_7_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_7_batch_dims_0
*+
name#

"
gather_7_batch_dims_0*
val


 Ù
gather(
x#
!
_inversed_real_div_20_cast_fp16
indices

range_1d_17
axis

gather_7_axis_0'

batch_dims

gather_7_batch_dims_04
gather_7_cast_fp16



`
 
*(
name 

"
gather_7_cast_fp16f
const
mul_39_y_0_to_fp16

*(
name 

"
mul_39_y_0_to_fp16*
val


:
 ºõ
mul
x

gather_7_cast_fp16
y

mul_39_y_0_to_fp162
mul_39_cast_fp16



`
 
*&
name

"
mul_39_cast_fp16h
const
concat_2_axis_0
*%
name

"
concat_2_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_2_interleave_0
*+
name#

"
concat_2_interleave_0*
val


 Û
concatC
values9
!
_inversed_real_div_19_cast_fp16

gather_6_cast_fp16
axis

concat_2_axis_0'

interleave

concat_2_interleave_04
concat_2_cast_fp16



`
 
 *(
name 

"
concat_2_cast_fp16h
const
concat_3_axis_0
*%
name

"
concat_3_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_3_interleave_0
*+
name#

"
concat_3_interleave_0*
val


 Ò
concatA
values7
!
_inversed_real_div_20_cast_fp16

mul_39_cast_fp16
axis

concat_3_axis_0'

interleave

concat_3_interleave_04
concat_3_cast_fp16



`
 
 *(
name 

"
concat_3_cast_fp16É
const#
transpose_28_perm_0


*)
name!

"
transpose_28_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_29_perm_0


*)
name!

"
transpose_29_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_42_shape_0


*(
name 

"
reshape_42_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_2_cast_fp16
perm

transpose_28_perm_08
transpose_28_cast_fp16


 
`
 
*#
name

"
transpose_186§
reshape
x

transpose_28_cast_fp16
shape

reshape_42_shape_0+
reshape_42_cast_fp16


 
Ä**
name"

"
reshape_42_cast_fp16
const"
reshape_43_shape_0


*(
name 

"
reshape_43_shape_0*(
val!




 ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_3_cast_fp16
perm

transpose_29_perm_08
transpose_29_cast_fp16


 
`
 
*#
name

"
transpose_185§
reshape
x

transpose_29_cast_fp16
shape

reshape_43_shape_0+
reshape_43_cast_fp16


 
Ä**
name"

"
reshape_43_cast_fp16o
const
matmul_51_transpose_x_0
*-
name%

"
matmul_51_transpose_x_0*
val


 o
const
matmul_51_transpose_y_0
*-
name%

"
matmul_51_transpose_y_0*
val


 Ó
matmul
x

cos_0_to_fp16
y

reshape_42_cast_fp16*
transpose_x

matmul_51_transpose_x_0*
transpose_y

matmul_51_transpose_y_0*
matmul_51_cast_fp16


 
Ä*)
name!

"
matmul_51_cast_fp16o
const
matmul_52_transpose_x_0
*-
name%

"
matmul_52_transpose_x_0*
val


 o
const
matmul_52_transpose_y_0
*-
name%

"
matmul_52_transpose_y_0*
val


 Ó
matmul
x

sin_0_to_fp16
y

reshape_43_cast_fp16*
transpose_x

matmul_52_transpose_x_0*
transpose_y

matmul_52_transpose_y_0*
matmul_52_cast_fp16


 
Ä*)
name!

"
matmul_52_cast_fp16ê
sub
x

matmul_51_cast_fp16
y

matmul_52_cast_fp16&
sub_7_cast_fp16


 
Ä*%
name

"
sub_7_cast_fp16x
const"
reshape_46_shape_0


*(
name 

"
reshape_46_shape_0*!
val





 ` ®
reshape
x

sub_7_cast_fp16
shape

reshape_46_shape_06
reshape_46_cast_fp16


 
`
 
**
name"

"
reshape_46_cast_fp16É
const#
transpose_30_perm_0


*)
name!

"
transpose_30_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_22_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_22_y_0_to_fp16*
val


:
®1™
	transpose
x

reshape_46_cast_fp16
perm

transpose_30_perm_08
transpose_30_cast_fp16



`
 
 *#
name

"
transpose_184Ã
mul
x

transpose_30_cast_fp16*
y%
#
!_inversed_real_div_22_y_0_to_fp16A
_inversed_real_div_22_cast_fp16



`
 
 *5
name-
%
#"!
_inversed_real_div_22_cast_fp16m
const
input_225_pad_type_0
**
name"

"
input_225_pad_type_0*
val

	"
validx
const#
input_225_strides_0


*)
name!

"
input_225_strides_0*
val




r
const
input_225_pad_0


*%
name

"
input_225_pad_0*!
val





    |
const%
input_225_dilations_0


*+
name#

"
input_225_dilations_0*
val




e
const
input_225_groups_0
*(
name 

"
input_225_groups_0*
val


”
constB
 decoder_0_2_conv2_weight_to_fp16


`
`

*6
name.
&
$""
 decoder_0_2_conv2_weight_to_fp16*N
valG


`
`

*%
@model_path/weights/weight.bin¿ÿ¸´
const.
decoder_0_2_conv2_bias_to_fp16



`*4
name,
$
"" 
decoder_0_2_conv2_bias_to_fp16*<
val5



`*%
@model_path/weights/weight.binÄÈ˝û
conv(
x#
!
_inversed_real_div_22_cast_fp16.
weight$
"
 decoder_0_2_conv2_weight_to_fp16*
bias"
 
decoder_0_2_conv2_bias_to_fp16"
strides

input_225_strides_0$
pad_type

input_225_pad_type_0
pad

input_225_pad_0&
	dilations

input_225_dilations_0 
groups

input_225_groups_05
input_225_cast_fp16



`
 
 *)
name!

"
input_225_cast_fp16Ç
const'
input_227_scale_factor_height_0
*5
name-
%
#"!
input_227_scale_factor_height_0*
val




   @Ä
const&
input_227_scale_factor_width_0
*4
name,
$
"" 
input_227_scale_factor_width_0*
val




   @ë
upsample_nearest_neighbor
x

input_225_cast_fp16:
scale_factor_height#
!
input_227_scale_factor_height_08
scale_factor_width"
 
input_227_scale_factor_width_05
input_227_cast_fp16



`
@
@*)
name!

"
input_227_cast_fp16c
const
x_83_pad_type_0
*%
name

"
x_83_pad_type_0*
val

	"
validn
const
x_83_strides_0


*$
name

"
x_83_strides_0*
val




h
const

x_83_pad_0


* 
name

"

x_83_pad_0*!
val





    r
const 
x_83_dilations_0


*&
name

"
x_83_dilations_0*
val




[
const
x_83_groups_0
*#
name

"
x_83_groups_0*
val


”
constB
 decoder_1_1_conv1_weight_to_fp16


@
`

*6
name.
&
$""
 decoder_1_1_conv1_weight_to_fp16*N
valG


@
`

*%
@model_path/weights/weight.binÄÎ˝´
const.
decoder_1_1_conv1_bias_to_fp16



@*4
name,
$
"" 
decoder_1_1_conv1_bias_to_fp16*<
val5



@*%
@model_path/weights/weight.bin¿À˛Ô
conv
x

input_227_cast_fp16.
weight$
"
 decoder_1_1_conv1_weight_to_fp16*
bias"
 
decoder_1_1_conv1_bias_to_fp16
strides

x_83_strides_0
pad_type

x_83_pad_type_0
pad


x_83_pad_0!
	dilations

x_83_dilations_0
groups

x_83_groups_00
x_83_cast_fp16



@
@
@*$
name

"
x_83_cast_fp16É
const#
transpose_32_perm_0


*)
name!

"
transpose_32_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_48_shape_0


*(
name 

"
reshape_48_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ§
	transpose
x

x_83_cast_fp16
perm

transpose_32_perm_08
transpose_32_cast_fp16


@
@
@
*#
name

"
transpose_183§
reshape
x

transpose_32_cast_fp16
shape

reshape_48_shape_0+
reshape_48_cast_fp16


@
Ä **
name"

"
reshape_48_cast_fp16o
const
matmul_56_transpose_x_0
*-
name%

"
matmul_56_transpose_x_0*
val


 o
const
matmul_56_transpose_y_0
*-
name%

"
matmul_56_transpose_y_0*
val


 ï
const#
cos_8_to_fp16


@
@*#
name

"
cos_8_to_fp16*B
val;


@
@*%
@model_path/weights/weight.binÄÕ˛Ó
matmul
x

cos_8_to_fp16
y

reshape_48_cast_fp16*
transpose_x

matmul_56_transpose_x_0*
transpose_y

matmul_56_transpose_y_0*
matmul_56_cast_fp16


@
Ä *)
name!

"
matmul_56_cast_fp16o
const
matmul_58_transpose_x_0
*-
name%

"
matmul_58_transpose_x_0*
val


 o
const
matmul_58_transpose_y_0
*-
name%

"
matmul_58_transpose_y_0*
val


 ï
const#
sin_8_to_fp16


@
@*#
name

"
sin_8_to_fp16*B
val;


@
@*%
@model_path/weights/weight.bin¿çˇÓ
matmul
x

sin_8_to_fp16
y

reshape_48_cast_fp16*
transpose_x

matmul_58_transpose_x_0*
transpose_y

matmul_58_transpose_y_0*
matmul_58_cast_fp16


@
Ä *)
name!

"
matmul_58_cast_fp16f
const
mul_42_y_0_to_fp16

*(
name 

"
mul_42_y_0_to_fp16*
val


:
 ºë
mul
x

matmul_58_cast_fp16
y

mul_42_y_0_to_fp16'
mul_42_cast_fp16


@
Ä *&
name

"
mul_42_cast_fp16x
const"
reshape_52_shape_0


*(
name 

"
reshape_52_shape_0*!
val





@@@¨
reshape
x

matmul_56_cast_fp16
shape

reshape_52_shape_06
reshape_52_cast_fp16


@
@
@
**
name"

"
reshape_52_cast_fp16x
const"
reshape_53_shape_0


*(
name 

"
reshape_53_shape_0*!
val





@@@©
reshape
x

mul_42_cast_fp16
shape

reshape_53_shape_06
reshape_53_cast_fp16


@
@
@
**
name"

"
reshape_53_cast_fp16É
const#
transpose_34_perm_0


*)
name!

"
transpose_34_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_35_perm_0


*)
name!

"
transpose_35_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_25_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_25_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_52_cast_fp16
perm

transpose_34_perm_08
transpose_34_cast_fp16



@
@
@*#
name

"
transpose_182Ã
mul
x

transpose_34_cast_fp16*
y%
#
!_inversed_real_div_25_y_0_to_fp16A
_inversed_real_div_25_cast_fp16



@
@
@*5
name-
%
#"!
_inversed_real_div_25_cast_fp16Ñ
const)
!_inversed_real_div_26_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_26_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_53_cast_fp16
perm

transpose_35_perm_08
transpose_35_cast_fp16



@
@
@*#
name

"
transpose_181Ã
mul
x

transpose_35_cast_fp16*
y%
#
!_inversed_real_div_26_y_0_to_fp16A
_inversed_real_div_26_cast_fp16



@
@
@*5
name-
%
#"!
_inversed_real_div_26_cast_fp16á
const
range_1d_22


!*!
name

"
range_1d_22*>
val7


!'
%#
! 	
 h
const
gather_8_axis_0
*%
name

"
gather_8_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_8_batch_dims_0
*+
name#

"
gather_8_batch_dims_0*
val


 Ù
gather(
x#
!
_inversed_real_div_25_cast_fp16
indices

range_1d_22
axis

gather_8_axis_0'

batch_dims

gather_8_batch_dims_04
gather_8_cast_fp16



@
@
!*(
name 

"
gather_8_cast_fp16h
const
gather_9_axis_0
*%
name

"
gather_9_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
gather_9_batch_dims_0
*+
name#

"
gather_9_batch_dims_0*
val


 Ù
gather(
x#
!
_inversed_real_div_26_cast_fp16
indices

range_1d_22
axis

gather_9_axis_0'

batch_dims

gather_9_batch_dims_04
gather_9_cast_fp16



@
@
!*(
name 

"
gather_9_cast_fp16É
const#
transpose_36_perm_0


*)
name!

"
transpose_36_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_37_perm_0


*)
name!

"
transpose_37_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_54_shape_0


*(
name 

"
reshape_54_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ®
	transpose
x

gather_8_cast_fp16
perm

transpose_36_perm_08
transpose_36_cast_fp16


@
@

!*#
name

"
transpose_180§
reshape
x

transpose_36_cast_fp16
shape

reshape_54_shape_0+
reshape_54_cast_fp16


@
¿**
name"

"
reshape_54_cast_fp16
const"
reshape_55_shape_0


*(
name 

"
reshape_55_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ®
	transpose
x

gather_9_cast_fp16
perm

transpose_37_perm_08
transpose_37_cast_fp16


@
@

!*#
name

"
transpose_179§
reshape
x

transpose_37_cast_fp16
shape

reshape_55_shape_0+
reshape_55_cast_fp16


@
¿**
name"

"
reshape_55_cast_fp16o
const
matmul_61_transpose_x_0
*-
name%

"
matmul_61_transpose_x_0*
val


 o
const
matmul_61_transpose_y_0
*-
name%

"
matmul_61_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_54_cast_fp16*
transpose_x

matmul_61_transpose_x_0*
transpose_y

matmul_61_transpose_y_0*
matmul_61_cast_fp16


@
¿*)
name!

"
matmul_61_cast_fp16o
const
matmul_62_transpose_x_0
*-
name%

"
matmul_62_transpose_x_0*
val


 o
const
matmul_62_transpose_y_0
*-
name%

"
matmul_62_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_55_cast_fp16*
transpose_x

matmul_62_transpose_x_0*
transpose_y

matmul_62_transpose_y_0*
matmul_62_cast_fp16


@
¿*)
name!

"
matmul_62_cast_fp16ê
add
x

matmul_61_cast_fp16
y

matmul_62_cast_fp16&
add_9_cast_fp16


@
¿*%
name

"
add_9_cast_fp16o
const
matmul_63_transpose_x_0
*-
name%

"
matmul_63_transpose_x_0*
val


 o
const
matmul_63_transpose_y_0
*-
name%

"
matmul_63_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_54_cast_fp16*
transpose_x

matmul_63_transpose_x_0*
transpose_y

matmul_63_transpose_y_0*
matmul_63_cast_fp16


@
¿*)
name!

"
matmul_63_cast_fp16o
const
matmul_64_transpose_x_0
*-
name%

"
matmul_64_transpose_x_0*
val


 o
const
matmul_64_transpose_y_0
*-
name%

"
matmul_64_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_55_cast_fp16*
transpose_x

matmul_64_transpose_x_0*
transpose_y

matmul_64_transpose_y_0*
matmul_64_cast_fp16


@
¿*)
name!

"
matmul_64_cast_fp16ê
sub
x

matmul_63_cast_fp16
y

matmul_64_cast_fp16&
sub_9_cast_fp16


@
¿*%
name

"
sub_9_cast_fp16f
const
mul_44_y_0_to_fp16

*(
name 

"
mul_44_y_0_to_fp16*
val


:
 ºç
mul
x

sub_9_cast_fp16
y

mul_44_y_0_to_fp16'
mul_44_cast_fp16


@
¿*&
name

"
mul_44_cast_fp16x
const"
reshape_58_shape_0


*(
name 

"
reshape_58_shape_0*!
val





@@!®
reshape
x

add_9_cast_fp16
shape

reshape_58_shape_06
reshape_58_cast_fp16


@
@

!**
name"

"
reshape_58_cast_fp16x
const"
reshape_59_shape_0


*(
name 

"
reshape_59_shape_0*!
val





@@!©
reshape
x

mul_44_cast_fp16
shape

reshape_59_shape_06
reshape_59_cast_fp16


@
@

!**
name"

"
reshape_59_cast_fp16Ñ
const)
!_inversed_real_div_28_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_28_y_0_to_fp16*
val


:
 0 
mul
x

reshape_58_cast_fp16*
y%
#
!_inversed_real_div_28_y_0_to_fp16A
_inversed_real_div_28_cast_fp16


@
@

!*5
name-
%
#"!
_inversed_real_div_28_cast_fp16Ñ
const)
!_inversed_real_div_29_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_29_y_0_to_fp16*
val


:
 0 
mul
x

reshape_59_cast_fp16*
y%
#
!_inversed_real_div_29_y_0_to_fp16A
_inversed_real_div_29_cast_fp16


@
@

!*5
name-
%
#"!
_inversed_real_div_29_cast_fp16m
const
input_229_interleave_0
*,
name$

"
input_229_interleave_0*
val


 Q
const
const_92
*
name

"

const_92*
val


˝
concatP
valuesF
!
_inversed_real_div_28_cast_fp16
!
_inversed_real_div_29_cast_fp16
axis


const_92(

interleave

input_229_interleave_06
input_229_cast_fp16


@
Ä

!*)
name!

"
input_229_cast_fp16m
const
input_231_pad_type_0
**
name"

"
input_231_pad_type_0*
val

	"
validx
const#
input_231_strides_0


*)
name!

"
input_231_strides_0*
val




r
const
input_231_pad_0


*%
name

"
input_231_pad_0*!
val





    |
const%
input_231_dilations_0


*+
name#

"
input_231_dilations_0*
val




e
const
input_231_groups_0
*(
name 

"
input_231_groups_0*
val


Ö
const$
transpose_128_perm_0


**
name"

"
transpose_128_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ ◊
constD
 decoder_1_1_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 decoder_1_1_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄŒˇ≠
const/
decoder_1_1_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
decoder_1_1_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ŒÅ¨
	transpose
x

input_229_cast_fp16 
perm

transpose_128_perm_0:
transpose_128_cast_fp16



Ä
@
!*#
name

"
transpose_178ó
conv 
x

transpose_128_cast_fp16.
weight$
"
 decoder_1_1_ffn_0_weight_to_fp16*
bias"
 
decoder_1_1_ffn_0_bias_to_fp16"
strides

input_231_strides_0$
pad_type

input_231_pad_type_0
pad

input_231_pad_0&
	dilations

input_231_dilations_0 
groups

input_231_groups_06
input_231_cast_fp16



Ä
@
!*)
name!

"
input_231_cast_fp16e
const
input_233_mode_0
*&
name

"
input_233_mode_0*
val

	"
EXACT•
gelu
x

input_231_cast_fp16
mode

input_233_mode_06
input_233_cast_fp16



Ä
@
!*)
name!

"
input_233_cast_fp16c
const
x_87_pad_type_0
*%
name

"
x_87_pad_type_0*
val

	"
validn
const
x_87_strides_0


*$
name

"
x_87_strides_0*
val




h
const

x_87_pad_0


* 
name

"

x_87_pad_0*!
val





    r
const 
x_87_dilations_0


*&
name

"
x_87_dilations_0*
val




[
const
x_87_groups_0
*#
name

"
x_87_groups_0*
val


◊
constD
 decoder_1_1_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 decoder_1_1_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ—Å≠
const/
decoder_1_1_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
decoder_1_1_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿—É
conv
x

input_233_cast_fp16.
weight$
"
 decoder_1_1_ffn_2_weight_to_fp16*
bias"
 
decoder_1_1_ffn_2_bias_to_fp16
strides

x_87_strides_0
pad_type

x_87_pad_type_0
pad


x_87_pad_0!
	dilations

x_87_dilations_0
groups

x_87_groups_01
x_87_cast_fp16



Ä
@
!*$
name

"
x_87_cast_fp16^
const
tile_2


*
name


"
tile_2*
val




@@^
const
var_1580_axis_0
*$
name

"
op_1580_axis_0*
val


Ò
split
x

x_87_cast_fp16
split_sizes


tile_2
axis

var_1580_axis_06
var_1580_cast_fp16_0



@
@
!6
var_1580_cast_fp16_1



@
@
!*'
name

"
op_1580_cast_fp16É
const#
transpose_40_perm_0


*)
name!

"
transpose_40_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_41_perm_0


*)
name!

"
transpose_41_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_60_shape_0


*(
name 

"
reshape_60_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ™
	transpose
x

var_1580_cast_fp16_0
perm

transpose_40_perm_08
transpose_40_cast_fp16


@
@

!*#
name

"
transpose_177§
reshape
x

transpose_40_cast_fp16
shape

reshape_60_shape_0+
reshape_60_cast_fp16


@
¿**
name"

"
reshape_60_cast_fp16
const"
reshape_61_shape_0


*(
name 

"
reshape_61_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ™
	transpose
x

var_1580_cast_fp16_1
perm

transpose_41_perm_08
transpose_41_cast_fp16


@
@

!*#
name

"
transpose_176§
reshape
x

transpose_41_cast_fp16
shape

reshape_61_shape_0+
reshape_61_cast_fp16


@
¿**
name"

"
reshape_61_cast_fp16o
const
matmul_66_transpose_x_0
*-
name%

"
matmul_66_transpose_x_0*
val


 o
const
matmul_66_transpose_y_0
*-
name%

"
matmul_66_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_60_cast_fp16*
transpose_x

matmul_66_transpose_x_0*
transpose_y

matmul_66_transpose_y_0*
matmul_66_cast_fp16


@
¿*)
name!

"
matmul_66_cast_fp16o
const
matmul_67_transpose_x_0
*-
name%

"
matmul_67_transpose_x_0*
val


 o
const
matmul_67_transpose_y_0
*-
name%

"
matmul_67_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_61_cast_fp16*
transpose_x

matmul_67_transpose_x_0*
transpose_y

matmul_67_transpose_y_0*
matmul_67_cast_fp16


@
¿*)
name!

"
matmul_67_cast_fp16í
sub
x

matmul_66_cast_fp16
y

matmul_67_cast_fp16'
sub_10_cast_fp16


@
¿*&
name

"
sub_10_cast_fp16o
const
matmul_68_transpose_x_0
*-
name%

"
matmul_68_transpose_x_0*
val


 o
const
matmul_68_transpose_y_0
*-
name%

"
matmul_68_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_60_cast_fp16*
transpose_x

matmul_68_transpose_x_0*
transpose_y

matmul_68_transpose_y_0*
matmul_68_cast_fp16


@
¿*)
name!

"
matmul_68_cast_fp16o
const
matmul_69_transpose_x_0
*-
name%

"
matmul_69_transpose_x_0*
val


 o
const
matmul_69_transpose_y_0
*-
name%

"
matmul_69_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_61_cast_fp16*
transpose_x

matmul_69_transpose_x_0*
transpose_y

matmul_69_transpose_y_0*
matmul_69_cast_fp16


@
¿*)
name!

"
matmul_69_cast_fp16í
add
x

matmul_68_cast_fp16
y

matmul_69_cast_fp16'
add_10_cast_fp16


@
¿*&
name

"
add_10_cast_fp16x
const"
reshape_64_shape_0


*(
name 

"
reshape_64_shape_0*!
val





@@!©
reshape
x

sub_10_cast_fp16
shape

reshape_64_shape_06
reshape_64_cast_fp16


@
@

!**
name"

"
reshape_64_cast_fp16x
const"
reshape_65_shape_0


*(
name 

"
reshape_65_shape_0*!
val





@@!©
reshape
x

add_10_cast_fp16
shape

reshape_65_shape_06
reshape_65_cast_fp16


@
@

!**
name"

"
reshape_65_cast_fp16É
const#
transpose_42_perm_0


*)
name!

"
transpose_42_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_43_perm_0


*)
name!

"
transpose_43_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_31_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_31_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_64_cast_fp16
perm

transpose_42_perm_08
transpose_42_cast_fp16



@
@
!*#
name

"
transpose_175Ã
mul
x

transpose_42_cast_fp16*
y%
#
!_inversed_real_div_31_y_0_to_fp16A
_inversed_real_div_31_cast_fp16



@
@
!*5
name-
%
#"!
_inversed_real_div_31_cast_fp16Ñ
const)
!_inversed_real_div_32_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_32_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_65_cast_fp16
perm

transpose_43_perm_08
transpose_43_cast_fp16



@
@
!*#
name

"
transpose_174Ã
mul
x

transpose_43_cast_fp16*
y%
#
!_inversed_real_div_32_y_0_to_fp16A
_inversed_real_div_32_cast_fp16



@
@
!*5
name-
%
#"!
_inversed_real_div_32_cast_fp16Ö
const
range_1d_27


*!
name

"
range_1d_27*<
val5


%
#!

	j
const
gather_10_axis_0
*&
name

"
gather_10_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_10_batch_dims_0
*,
name$

"
gather_10_batch_dims_0*
val


 ¯
gather(
x#
!
_inversed_real_div_31_cast_fp16
indices

range_1d_27
axis

gather_10_axis_0(

batch_dims

gather_10_batch_dims_05
gather_10_cast_fp16



@
@
*)
name!

"
gather_10_cast_fp16j
const
gather_11_axis_0
*&
name

"
gather_11_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_11_batch_dims_0
*,
name$

"
gather_11_batch_dims_0*
val


 ¯
gather(
x#
!
_inversed_real_div_32_cast_fp16
indices

range_1d_27
axis

gather_11_axis_0(

batch_dims

gather_11_batch_dims_05
gather_11_cast_fp16



@
@
*)
name!

"
gather_11_cast_fp16f
const
mul_46_y_0_to_fp16

*(
name 

"
mul_46_y_0_to_fp16*
val


:
 ºú
mul
x

gather_11_cast_fp16
y

mul_46_y_0_to_fp162
mul_46_cast_fp16



@
@
*&
name

"
mul_46_cast_fp16h
const
concat_4_axis_0
*%
name

"
concat_4_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_4_interleave_0
*+
name#

"
concat_4_interleave_0*
val


 Ù
concatD
values:
!
_inversed_real_div_31_cast_fp16

gather_10_cast_fp16
axis

concat_4_axis_0'

interleave

concat_4_interleave_04
concat_4_cast_fp16



@
@
@*(
name 

"
concat_4_cast_fp16h
const
concat_5_axis_0
*%
name

"
concat_5_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_5_interleave_0
*+
name#

"
concat_5_interleave_0*
val


 Ò
concatA
values7
!
_inversed_real_div_32_cast_fp16

mul_46_cast_fp16
axis

concat_5_axis_0'

interleave

concat_5_interleave_04
concat_5_cast_fp16



@
@
@*(
name 

"
concat_5_cast_fp16É
const#
transpose_44_perm_0


*)
name!

"
transpose_44_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_45_perm_0


*)
name!

"
transpose_45_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_66_shape_0


*(
name 

"
reshape_66_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_4_cast_fp16
perm

transpose_44_perm_08
transpose_44_cast_fp16


@
@
@
*#
name

"
transpose_173§
reshape
x

transpose_44_cast_fp16
shape

reshape_66_shape_0+
reshape_66_cast_fp16


@
Ä **
name"

"
reshape_66_cast_fp16
const"
reshape_67_shape_0


*(
name 

"
reshape_67_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_5_cast_fp16
perm

transpose_45_perm_08
transpose_45_cast_fp16


@
@
@
*#
name

"
transpose_172§
reshape
x

transpose_45_cast_fp16
shape

reshape_67_shape_0+
reshape_67_cast_fp16


@
Ä **
name"

"
reshape_67_cast_fp16o
const
matmul_71_transpose_x_0
*-
name%

"
matmul_71_transpose_x_0*
val


 o
const
matmul_71_transpose_y_0
*-
name%

"
matmul_71_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_66_cast_fp16*
transpose_x

matmul_71_transpose_x_0*
transpose_y

matmul_71_transpose_y_0*
matmul_71_cast_fp16


@
Ä *)
name!

"
matmul_71_cast_fp16o
const
matmul_72_transpose_x_0
*-
name%

"
matmul_72_transpose_x_0*
val


 o
const
matmul_72_transpose_y_0
*-
name%

"
matmul_72_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_67_cast_fp16*
transpose_x

matmul_72_transpose_x_0*
transpose_y

matmul_72_transpose_y_0*
matmul_72_cast_fp16


@
Ä *)
name!

"
matmul_72_cast_fp16í
sub
x

matmul_71_cast_fp16
y

matmul_72_cast_fp16'
sub_11_cast_fp16


@
Ä *&
name

"
sub_11_cast_fp16x
const"
reshape_70_shape_0


*(
name 

"
reshape_70_shape_0*!
val





@@@©
reshape
x

sub_11_cast_fp16
shape

reshape_70_shape_06
reshape_70_cast_fp16


@
@
@
**
name"

"
reshape_70_cast_fp16É
const#
transpose_46_perm_0


*)
name!

"
transpose_46_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_34_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_34_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_70_cast_fp16
perm

transpose_46_perm_08
transpose_46_cast_fp16



@
@
@*#
name

"
transpose_171Ã
mul
x

transpose_46_cast_fp16*
y%
#
!_inversed_real_div_34_y_0_to_fp16A
_inversed_real_div_34_cast_fp16



@
@
@*5
name-
%
#"!
_inversed_real_div_34_cast_fp16m
const
input_237_pad_type_0
**
name"

"
input_237_pad_type_0*
val

	"
validx
const#
input_237_strides_0


*)
name!

"
input_237_strides_0*
val




r
const
input_237_pad_0


*%
name

"
input_237_pad_0*!
val





    |
const%
input_237_dilations_0


*+
name#

"
input_237_dilations_0*
val




e
const
input_237_groups_0
*(
name 

"
input_237_groups_0*
val


”
constB
 decoder_1_1_conv2_weight_to_fp16


@
@

*6
name.
&
$""
 decoder_1_1_conv2_weight_to_fp16*N
valG


@
@

*%
@model_path/weights/weight.binÄ‘É´
const.
decoder_1_1_conv2_bias_to_fp16



@*4
name,
$
"" 
decoder_1_1_conv2_bias_to_fp16*<
val5



@*%
@model_path/weights/weight.bin¿îÑû
conv(
x#
!
_inversed_real_div_34_cast_fp16.
weight$
"
 decoder_1_1_conv2_weight_to_fp16*
bias"
 
decoder_1_1_conv2_bias_to_fp16"
strides

input_237_strides_0$
pad_type

input_237_pad_type_0
pad

input_237_pad_0&
	dilations

input_237_dilations_0 
groups

input_237_groups_05
input_237_cast_fp16



@
@
@*)
name!

"
input_237_cast_fp16c
const
x_89_pad_type_0
*%
name

"
x_89_pad_type_0*
val

	"
validn
const
x_89_strides_0


*$
name

"
x_89_strides_0*
val




h
const

x_89_pad_0


* 
name

"

x_89_pad_0*!
val





    r
const 
x_89_dilations_0


*&
name

"
x_89_dilations_0*
val




[
const
x_89_groups_0
*#
name

"
x_89_groups_0*
val


”
constB
 decoder_1_2_conv1_weight_to_fp16


@
@

*6
name.
&
$""
 decoder_1_2_conv1_weight_to_fp16*N
valG


@
@

*%
@model_path/weights/weight.binÄñÑ´
const.
decoder_1_2_conv1_bias_to_fp16



@*4
name,
$
"" 
decoder_1_2_conv1_bias_to_fp16*<
val5



@*%
@model_path/weights/weight.bin¿÷ÑÔ
conv
x

input_237_cast_fp16.
weight$
"
 decoder_1_2_conv1_weight_to_fp16*
bias"
 
decoder_1_2_conv1_bias_to_fp16
strides

x_89_strides_0
pad_type

x_89_pad_type_0
pad


x_89_pad_0!
	dilations

x_89_dilations_0
groups

x_89_groups_00
x_89_cast_fp16



@
@
@*$
name

"
x_89_cast_fp16É
const#
transpose_48_perm_0


*)
name!

"
transpose_48_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_72_shape_0


*(
name 

"
reshape_72_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ§
	transpose
x

x_89_cast_fp16
perm

transpose_48_perm_08
transpose_48_cast_fp16


@
@
@
*#
name

"
transpose_170§
reshape
x

transpose_48_cast_fp16
shape

reshape_72_shape_0+
reshape_72_cast_fp16


@
Ä **
name"

"
reshape_72_cast_fp16o
const
matmul_76_transpose_x_0
*-
name%

"
matmul_76_transpose_x_0*
val


 o
const
matmul_76_transpose_y_0
*-
name%

"
matmul_76_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_72_cast_fp16*
transpose_x

matmul_76_transpose_x_0*
transpose_y

matmul_76_transpose_y_0*
matmul_76_cast_fp16


@
Ä *)
name!

"
matmul_76_cast_fp16o
const
matmul_78_transpose_x_0
*-
name%

"
matmul_78_transpose_x_0*
val


 o
const
matmul_78_transpose_y_0
*-
name%

"
matmul_78_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_72_cast_fp16*
transpose_x

matmul_78_transpose_x_0*
transpose_y

matmul_78_transpose_y_0*
matmul_78_cast_fp16


@
Ä *)
name!

"
matmul_78_cast_fp16f
const
mul_49_y_0_to_fp16

*(
name 

"
mul_49_y_0_to_fp16*
val


:
 ºë
mul
x

matmul_78_cast_fp16
y

mul_49_y_0_to_fp16'
mul_49_cast_fp16


@
Ä *&
name

"
mul_49_cast_fp16x
const"
reshape_76_shape_0


*(
name 

"
reshape_76_shape_0*!
val





@@@¨
reshape
x

matmul_76_cast_fp16
shape

reshape_76_shape_06
reshape_76_cast_fp16


@
@
@
**
name"

"
reshape_76_cast_fp16x
const"
reshape_77_shape_0


*(
name 

"
reshape_77_shape_0*!
val





@@@©
reshape
x

mul_49_cast_fp16
shape

reshape_77_shape_06
reshape_77_cast_fp16


@
@
@
**
name"

"
reshape_77_cast_fp16É
const#
transpose_50_perm_0


*)
name!

"
transpose_50_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_51_perm_0


*)
name!

"
transpose_51_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_37_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_37_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_76_cast_fp16
perm

transpose_50_perm_08
transpose_50_cast_fp16



@
@
@*#
name

"
transpose_169Ã
mul
x

transpose_50_cast_fp16*
y%
#
!_inversed_real_div_37_y_0_to_fp16A
_inversed_real_div_37_cast_fp16



@
@
@*5
name-
%
#"!
_inversed_real_div_37_cast_fp16Ñ
const)
!_inversed_real_div_38_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_38_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_77_cast_fp16
perm

transpose_51_perm_08
transpose_51_cast_fp16



@
@
@*#
name

"
transpose_168Ã
mul
x

transpose_51_cast_fp16*
y%
#
!_inversed_real_div_38_y_0_to_fp16A
_inversed_real_div_38_cast_fp16



@
@
@*5
name-
%
#"!
_inversed_real_div_38_cast_fp16á
const
range_1d_32


!*!
name

"
range_1d_32*>
val7


!'
%#
! 	
 j
const
gather_12_axis_0
*&
name

"
gather_12_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_12_batch_dims_0
*,
name$

"
gather_12_batch_dims_0*
val


 ¯
gather(
x#
!
_inversed_real_div_37_cast_fp16
indices

range_1d_32
axis

gather_12_axis_0(

batch_dims

gather_12_batch_dims_05
gather_12_cast_fp16



@
@
!*)
name!

"
gather_12_cast_fp16j
const
gather_13_axis_0
*&
name

"
gather_13_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_13_batch_dims_0
*,
name$

"
gather_13_batch_dims_0*
val


 ¯
gather(
x#
!
_inversed_real_div_38_cast_fp16
indices

range_1d_32
axis

gather_13_axis_0(

batch_dims

gather_13_batch_dims_05
gather_13_cast_fp16



@
@
!*)
name!

"
gather_13_cast_fp16É
const#
transpose_52_perm_0


*)
name!

"
transpose_52_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_53_perm_0


*)
name!

"
transpose_53_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_78_shape_0


*(
name 

"
reshape_78_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ©
	transpose
x

gather_12_cast_fp16
perm

transpose_52_perm_08
transpose_52_cast_fp16


@
@

!*#
name

"
transpose_167§
reshape
x

transpose_52_cast_fp16
shape

reshape_78_shape_0+
reshape_78_cast_fp16


@
¿**
name"

"
reshape_78_cast_fp16
const"
reshape_79_shape_0


*(
name 

"
reshape_79_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ©
	transpose
x

gather_13_cast_fp16
perm

transpose_53_perm_08
transpose_53_cast_fp16


@
@

!*#
name

"
transpose_166§
reshape
x

transpose_53_cast_fp16
shape

reshape_79_shape_0+
reshape_79_cast_fp16


@
¿**
name"

"
reshape_79_cast_fp16o
const
matmul_81_transpose_x_0
*-
name%

"
matmul_81_transpose_x_0*
val


 o
const
matmul_81_transpose_y_0
*-
name%

"
matmul_81_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_78_cast_fp16*
transpose_x

matmul_81_transpose_x_0*
transpose_y

matmul_81_transpose_y_0*
matmul_81_cast_fp16


@
¿*)
name!

"
matmul_81_cast_fp16o
const
matmul_82_transpose_x_0
*-
name%

"
matmul_82_transpose_x_0*
val


 o
const
matmul_82_transpose_y_0
*-
name%

"
matmul_82_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_79_cast_fp16*
transpose_x

matmul_82_transpose_x_0*
transpose_y

matmul_82_transpose_y_0*
matmul_82_cast_fp16


@
¿*)
name!

"
matmul_82_cast_fp16í
add
x

matmul_81_cast_fp16
y

matmul_82_cast_fp16'
add_13_cast_fp16


@
¿*&
name

"
add_13_cast_fp16o
const
matmul_83_transpose_x_0
*-
name%

"
matmul_83_transpose_x_0*
val


 o
const
matmul_83_transpose_y_0
*-
name%

"
matmul_83_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_78_cast_fp16*
transpose_x

matmul_83_transpose_x_0*
transpose_y

matmul_83_transpose_y_0*
matmul_83_cast_fp16


@
¿*)
name!

"
matmul_83_cast_fp16o
const
matmul_84_transpose_x_0
*-
name%

"
matmul_84_transpose_x_0*
val


 o
const
matmul_84_transpose_y_0
*-
name%

"
matmul_84_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_79_cast_fp16*
transpose_x

matmul_84_transpose_x_0*
transpose_y

matmul_84_transpose_y_0*
matmul_84_cast_fp16


@
¿*)
name!

"
matmul_84_cast_fp16í
sub
x

matmul_83_cast_fp16
y

matmul_84_cast_fp16'
sub_13_cast_fp16


@
¿*&
name

"
sub_13_cast_fp16f
const
mul_51_y_0_to_fp16

*(
name 

"
mul_51_y_0_to_fp16*
val


:
 ºé
mul
x

sub_13_cast_fp16
y

mul_51_y_0_to_fp16'
mul_51_cast_fp16


@
¿*&
name

"
mul_51_cast_fp16x
const"
reshape_82_shape_0


*(
name 

"
reshape_82_shape_0*!
val





@@!©
reshape
x

add_13_cast_fp16
shape

reshape_82_shape_06
reshape_82_cast_fp16


@
@

!**
name"

"
reshape_82_cast_fp16x
const"
reshape_83_shape_0


*(
name 

"
reshape_83_shape_0*!
val





@@!©
reshape
x

mul_51_cast_fp16
shape

reshape_83_shape_06
reshape_83_cast_fp16


@
@

!**
name"

"
reshape_83_cast_fp16Ñ
const)
!_inversed_real_div_40_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_40_y_0_to_fp16*
val


:
 0 
mul
x

reshape_82_cast_fp16*
y%
#
!_inversed_real_div_40_y_0_to_fp16A
_inversed_real_div_40_cast_fp16


@
@

!*5
name-
%
#"!
_inversed_real_div_40_cast_fp16Ñ
const)
!_inversed_real_div_41_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_41_y_0_to_fp16*
val


:
 0 
mul
x

reshape_83_cast_fp16*
y%
#
!_inversed_real_div_41_y_0_to_fp16A
_inversed_real_div_41_cast_fp16


@
@

!*5
name-
%
#"!
_inversed_real_div_41_cast_fp16m
const
input_239_interleave_0
*,
name$

"
input_239_interleave_0*
val


 Q
const
const_93
*
name

"

const_93*
val


˝
concatP
valuesF
!
_inversed_real_div_40_cast_fp16
!
_inversed_real_div_41_cast_fp16
axis


const_93(

interleave

input_239_interleave_06
input_239_cast_fp16


@
Ä

!*)
name!

"
input_239_cast_fp16m
const
input_241_pad_type_0
**
name"

"
input_241_pad_type_0*
val

	"
validx
const#
input_241_strides_0


*)
name!

"
input_241_strides_0*
val




r
const
input_241_pad_0


*%
name

"
input_241_pad_0*!
val





    |
const%
input_241_dilations_0


*+
name#

"
input_241_dilations_0*
val




e
const
input_241_groups_0
*(
name 

"
input_241_groups_0*
val


Ö
const$
transpose_129_perm_0


**
name"

"
transpose_129_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ ◊
constD
 decoder_1_2_ffn_0_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 decoder_1_2_ffn_0_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄÿÑ≠
const/
decoder_1_2_ffn_0_bias_to_fp16


Ä*4
name,
$
"" 
decoder_1_2_ffn_0_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿ÿÜ¨
	transpose
x

input_239_cast_fp16 
perm

transpose_129_perm_0:
transpose_129_cast_fp16



Ä
@
!*#
name

"
transpose_165ó
conv 
x

transpose_129_cast_fp16.
weight$
"
 decoder_1_2_ffn_0_weight_to_fp16*
bias"
 
decoder_1_2_ffn_0_bias_to_fp16"
strides

input_241_strides_0$
pad_type

input_241_pad_type_0
pad

input_241_pad_0&
	dilations

input_241_dilations_0 
groups

input_241_groups_06
input_241_cast_fp16



Ä
@
!*)
name!

"
input_241_cast_fp16e
const
input_243_mode_0
*&
name

"
input_243_mode_0*
val

	"
EXACT•
gelu
x

input_241_cast_fp16
mode

input_243_mode_06
input_243_cast_fp16



Ä
@
!*)
name!

"
input_243_cast_fp16c
const
x_93_pad_type_0
*%
name

"
x_93_pad_type_0*
val

	"
validn
const
x_93_strides_0


*$
name

"
x_93_strides_0*
val




h
const

x_93_pad_0


* 
name

"

x_93_pad_0*!
val





    r
const 
x_93_dilations_0


*&
name

"
x_93_dilations_0*
val




[
const
x_93_groups_0
*#
name

"
x_93_groups_0*
val


◊
constD
 decoder_1_2_ffn_2_weight_to_fp16 


Ä
Ä

*6
name.
&
$""
 decoder_1_2_ffn_2_weight_to_fp16*P
valI 


Ä
Ä

*%
@model_path/weights/weight.binÄ€Ü≠
const/
decoder_1_2_ffn_2_bias_to_fp16


Ä*4
name,
$
"" 
decoder_1_2_ffn_2_bias_to_fp16*=
val6


Ä*%
@model_path/weights/weight.bin¿€à
conv
x

input_243_cast_fp16.
weight$
"
 decoder_1_2_ffn_2_weight_to_fp16*
bias"
 
decoder_1_2_ffn_2_bias_to_fp16
strides

x_93_strides_0
pad_type

x_93_pad_type_0
pad


x_93_pad_0!
	dilations

x_93_dilations_0
groups

x_93_groups_01
x_93_cast_fp16



Ä
@
!*$
name

"
x_93_cast_fp16^
const
tile_3


*
name


"
tile_3*
val




@@^
const
var_1626_axis_0
*$
name

"
op_1626_axis_0*
val


Ò
split
x

x_93_cast_fp16
split_sizes


tile_3
axis

var_1626_axis_06
var_1626_cast_fp16_0



@
@
!6
var_1626_cast_fp16_1



@
@
!*'
name

"
op_1626_cast_fp16É
const#
transpose_56_perm_0


*)
name!

"
transpose_56_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_57_perm_0


*)
name!

"
transpose_57_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ 
const"
reshape_84_shape_0


*(
name 

"
reshape_84_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ™
	transpose
x

var_1626_cast_fp16_0
perm

transpose_56_perm_08
transpose_56_cast_fp16


@
@

!*#
name

"
transpose_164§
reshape
x

transpose_56_cast_fp16
shape

reshape_84_shape_0+
reshape_84_cast_fp16


@
¿**
name"

"
reshape_84_cast_fp16
const"
reshape_85_shape_0


*(
name 

"
reshape_85_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ™
	transpose
x

var_1626_cast_fp16_1
perm

transpose_57_perm_08
transpose_57_cast_fp16


@
@

!*#
name

"
transpose_163§
reshape
x

transpose_57_cast_fp16
shape

reshape_85_shape_0+
reshape_85_cast_fp16


@
¿**
name"

"
reshape_85_cast_fp16o
const
matmul_86_transpose_x_0
*-
name%

"
matmul_86_transpose_x_0*
val


 o
const
matmul_86_transpose_y_0
*-
name%

"
matmul_86_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_84_cast_fp16*
transpose_x

matmul_86_transpose_x_0*
transpose_y

matmul_86_transpose_y_0*
matmul_86_cast_fp16


@
¿*)
name!

"
matmul_86_cast_fp16o
const
matmul_87_transpose_x_0
*-
name%

"
matmul_87_transpose_x_0*
val


 o
const
matmul_87_transpose_y_0
*-
name%

"
matmul_87_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_85_cast_fp16*
transpose_x

matmul_87_transpose_x_0*
transpose_y

matmul_87_transpose_y_0*
matmul_87_cast_fp16


@
¿*)
name!

"
matmul_87_cast_fp16í
sub
x

matmul_86_cast_fp16
y

matmul_87_cast_fp16'
sub_14_cast_fp16


@
¿*&
name

"
sub_14_cast_fp16o
const
matmul_88_transpose_x_0
*-
name%

"
matmul_88_transpose_x_0*
val


 o
const
matmul_88_transpose_y_0
*-
name%

"
matmul_88_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_84_cast_fp16*
transpose_x

matmul_88_transpose_x_0*
transpose_y

matmul_88_transpose_y_0*
matmul_88_cast_fp16


@
¿*)
name!

"
matmul_88_cast_fp16o
const
matmul_89_transpose_x_0
*-
name%

"
matmul_89_transpose_x_0*
val


 o
const
matmul_89_transpose_y_0
*-
name%

"
matmul_89_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_85_cast_fp16*
transpose_x

matmul_89_transpose_x_0*
transpose_y

matmul_89_transpose_y_0*
matmul_89_cast_fp16


@
¿*)
name!

"
matmul_89_cast_fp16í
add
x

matmul_88_cast_fp16
y

matmul_89_cast_fp16'
add_14_cast_fp16


@
¿*&
name

"
add_14_cast_fp16x
const"
reshape_88_shape_0


*(
name 

"
reshape_88_shape_0*!
val





@@!©
reshape
x

sub_14_cast_fp16
shape

reshape_88_shape_06
reshape_88_cast_fp16


@
@

!**
name"

"
reshape_88_cast_fp16x
const"
reshape_89_shape_0


*(
name 

"
reshape_89_shape_0*!
val





@@!©
reshape
x

add_14_cast_fp16
shape

reshape_89_shape_06
reshape_89_cast_fp16


@
@

!**
name"

"
reshape_89_cast_fp16É
const#
transpose_58_perm_0


*)
name!

"
transpose_58_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_59_perm_0


*)
name!

"
transpose_59_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_43_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_43_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_88_cast_fp16
perm

transpose_58_perm_08
transpose_58_cast_fp16



@
@
!*#
name

"
transpose_162Ã
mul
x

transpose_58_cast_fp16*
y%
#
!_inversed_real_div_43_y_0_to_fp16A
_inversed_real_div_43_cast_fp16



@
@
!*5
name-
%
#"!
_inversed_real_div_43_cast_fp16Ñ
const)
!_inversed_real_div_44_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_44_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_89_cast_fp16
perm

transpose_59_perm_08
transpose_59_cast_fp16



@
@
!*#
name

"
transpose_161Ã
mul
x

transpose_59_cast_fp16*
y%
#
!_inversed_real_div_44_y_0_to_fp16A
_inversed_real_div_44_cast_fp16



@
@
!*5
name-
%
#"!
_inversed_real_div_44_cast_fp16Ö
const
range_1d_37


*!
name

"
range_1d_37*<
val5


%
#!

	j
const
gather_14_axis_0
*&
name

"
gather_14_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_14_batch_dims_0
*,
name$

"
gather_14_batch_dims_0*
val


 ¯
gather(
x#
!
_inversed_real_div_43_cast_fp16
indices

range_1d_37
axis

gather_14_axis_0(

batch_dims

gather_14_batch_dims_05
gather_14_cast_fp16



@
@
*)
name!

"
gather_14_cast_fp16j
const
gather_15_axis_0
*&
name

"
gather_15_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_15_batch_dims_0
*,
name$

"
gather_15_batch_dims_0*
val


 ¯
gather(
x#
!
_inversed_real_div_44_cast_fp16
indices

range_1d_37
axis

gather_15_axis_0(

batch_dims

gather_15_batch_dims_05
gather_15_cast_fp16



@
@
*)
name!

"
gather_15_cast_fp16f
const
mul_53_y_0_to_fp16

*(
name 

"
mul_53_y_0_to_fp16*
val


:
 ºú
mul
x

gather_15_cast_fp16
y

mul_53_y_0_to_fp162
mul_53_cast_fp16



@
@
*&
name

"
mul_53_cast_fp16h
const
concat_6_axis_0
*%
name

"
concat_6_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_6_interleave_0
*+
name#

"
concat_6_interleave_0*
val


 Ù
concatD
values:
!
_inversed_real_div_43_cast_fp16

gather_14_cast_fp16
axis

concat_6_axis_0'

interleave

concat_6_interleave_04
concat_6_cast_fp16



@
@
@*(
name 

"
concat_6_cast_fp16h
const
concat_7_axis_0
*%
name

"
concat_7_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_7_interleave_0
*+
name#

"
concat_7_interleave_0*
val


 Ò
concatA
values7
!
_inversed_real_div_44_cast_fp16

mul_53_cast_fp16
axis

concat_7_axis_0'

interleave

concat_7_interleave_04
concat_7_cast_fp16



@
@
@*(
name 

"
concat_7_cast_fp16É
const#
transpose_60_perm_0


*)
name!

"
transpose_60_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_61_perm_0


*)
name!

"
transpose_61_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ 
const"
reshape_90_shape_0


*(
name 

"
reshape_90_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_6_cast_fp16
perm

transpose_60_perm_08
transpose_60_cast_fp16


@
@
@
*#
name

"
transpose_160§
reshape
x

transpose_60_cast_fp16
shape

reshape_90_shape_0+
reshape_90_cast_fp16


@
Ä **
name"

"
reshape_90_cast_fp16
const"
reshape_91_shape_0


*(
name 

"
reshape_91_shape_0*(
val!




@ˇˇˇˇˇˇˇˇˇ®
	transpose
x

concat_7_cast_fp16
perm

transpose_61_perm_08
transpose_61_cast_fp16


@
@
@
*#
name

"
transpose_159§
reshape
x

transpose_61_cast_fp16
shape

reshape_91_shape_0+
reshape_91_cast_fp16


@
Ä **
name"

"
reshape_91_cast_fp16o
const
matmul_91_transpose_x_0
*-
name%

"
matmul_91_transpose_x_0*
val


 o
const
matmul_91_transpose_y_0
*-
name%

"
matmul_91_transpose_y_0*
val


 Ó
matmul
x

cos_8_to_fp16
y

reshape_90_cast_fp16*
transpose_x

matmul_91_transpose_x_0*
transpose_y

matmul_91_transpose_y_0*
matmul_91_cast_fp16


@
Ä *)
name!

"
matmul_91_cast_fp16o
const
matmul_92_transpose_x_0
*-
name%

"
matmul_92_transpose_x_0*
val


 o
const
matmul_92_transpose_y_0
*-
name%

"
matmul_92_transpose_y_0*
val


 Ó
matmul
x

sin_8_to_fp16
y

reshape_91_cast_fp16*
transpose_x

matmul_92_transpose_x_0*
transpose_y

matmul_92_transpose_y_0*
matmul_92_cast_fp16


@
Ä *)
name!

"
matmul_92_cast_fp16í
sub
x

matmul_91_cast_fp16
y

matmul_92_cast_fp16'
sub_15_cast_fp16


@
Ä *&
name

"
sub_15_cast_fp16x
const"
reshape_94_shape_0


*(
name 

"
reshape_94_shape_0*!
val





@@@©
reshape
x

sub_15_cast_fp16
shape

reshape_94_shape_06
reshape_94_cast_fp16


@
@
@
**
name"

"
reshape_94_cast_fp16É
const#
transpose_62_perm_0


*)
name!

"
transpose_62_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_46_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_46_y_0_to_fp16*
val


:
 0™
	transpose
x

reshape_94_cast_fp16
perm

transpose_62_perm_08
transpose_62_cast_fp16



@
@
@*#
name

"
transpose_158Ã
mul
x

transpose_62_cast_fp16*
y%
#
!_inversed_real_div_46_y_0_to_fp16A
_inversed_real_div_46_cast_fp16



@
@
@*5
name-
%
#"!
_inversed_real_div_46_cast_fp16m
const
input_247_pad_type_0
**
name"

"
input_247_pad_type_0*
val

	"
validx
const#
input_247_strides_0


*)
name!

"
input_247_strides_0*
val




r
const
input_247_pad_0


*%
name

"
input_247_pad_0*!
val





    |
const%
input_247_dilations_0


*+
name#

"
input_247_dilations_0*
val




e
const
input_247_groups_0
*(
name 

"
input_247_groups_0*
val


”
constB
 decoder_1_2_conv2_weight_to_fp16


@
@

*6
name.
&
$""
 decoder_1_2_conv2_weight_to_fp16*N
valG


@
@

*%
@model_path/weights/weight.binÄﬁà´
const.
decoder_1_2_conv2_bias_to_fp16



@*4
name,
$
"" 
decoder_1_2_conv2_bias_to_fp16*<
val5



@*%
@model_path/weights/weight.bin¿ûâû
conv(
x#
!
_inversed_real_div_46_cast_fp16.
weight$
"
 decoder_1_2_conv2_weight_to_fp16*
bias"
 
decoder_1_2_conv2_bias_to_fp16"
strides

input_247_strides_0$
pad_type

input_247_pad_type_0
pad

input_247_pad_0&
	dilations

input_247_dilations_0 
groups

input_247_groups_05
input_247_cast_fp16



@
@
@*)
name!

"
input_247_cast_fp16Ç
const'
input_249_scale_factor_height_0
*5
name-
%
#"!
input_249_scale_factor_height_0*
val




   @Ä
const&
input_249_scale_factor_width_0
*4
name,
$
"" 
input_249_scale_factor_width_0*
val




   @ì
upsample_nearest_neighbor
x

input_247_cast_fp16:
scale_factor_height#
!
input_249_scale_factor_height_08
scale_factor_width"
 
input_249_scale_factor_width_07
input_249_cast_fp16 



@
Ä
Ä*)
name!

"
input_249_cast_fp16c
const
x_95_pad_type_0
*%
name

"
x_95_pad_type_0*
val

	"
validn
const
x_95_strides_0


*$
name

"
x_95_strides_0*
val




h
const

x_95_pad_0


* 
name

"

x_95_pad_0*!
val





    r
const 
x_95_dilations_0


*&
name

"
x_95_dilations_0*
val




[
const
x_95_groups_0
*#
name

"
x_95_groups_0*
val


”
constB
 decoder_2_1_conv1_weight_to_fp16


(
@

*6
name.
&
$""
 decoder_2_1_conv1_weight_to_fp16*N
valG


(
@

*%
@model_path/weights/weight.binÄ†â´
const.
decoder_2_1_conv1_bias_to_fp16



(*4
name,
$
"" 
decoder_2_1_conv1_bias_to_fp16*<
val5



(*%
@model_path/weights/weight.bin¿»âÒ
conv
x

input_249_cast_fp16.
weight$
"
 decoder_2_1_conv1_weight_to_fp16*
bias"
 
decoder_2_1_conv1_bias_to_fp16
strides

x_95_strides_0
pad_type

x_95_pad_type_0
pad


x_95_pad_0!
	dilations

x_95_dilations_0
groups

x_95_groups_02
x_95_cast_fp16 



(
Ä
Ä*$
name

"
x_95_cast_fp16É
const#
transpose_64_perm_0


*)
name!

"
transpose_64_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ä
const"
reshape_96_shape_0


*(
name 

"
reshape_96_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ¶
	transpose
x

x_95_cast_fp16
perm

transpose_64_perm_0:
transpose_64_cast_fp16 


Ä
(
Ä
*#
name

"
transpose_157•
reshape
x

transpose_64_cast_fp16
shape

reshape_96_shape_0,
reshape_96_cast_fp16


Ä
Ä(**
name"

"
reshape_96_cast_fp16o
const
matmul_96_transpose_x_0
*-
name%

"
matmul_96_transpose_x_0*
val


 o
const
matmul_96_transpose_y_0
*-
name%

"
matmul_96_transpose_y_0*
val


 õ
const&
cos_16_to_fp16


Ä
Ä*$
name

"
cos_16_to_fp16*D
val=


Ä
Ä*%
@model_path/weights/weight.binÄ â
matmul
x

cos_16_to_fp16
y

reshape_96_cast_fp16*
transpose_x

matmul_96_transpose_x_0*
transpose_y

matmul_96_transpose_y_0+
matmul_96_cast_fp16


Ä
Ä(*)
name!

"
matmul_96_cast_fp16o
const
matmul_98_transpose_x_0
*-
name%

"
matmul_98_transpose_x_0*
val


 o
const
matmul_98_transpose_y_0
*-
name%

"
matmul_98_transpose_y_0*
val


 õ
const&
sin_16_to_fp16


Ä
Ä*$
name

"
sin_16_to_fp16*D
val=


Ä
Ä*%
@model_path/weights/weight.bin¿ ã
matmul
x

sin_16_to_fp16
y

reshape_96_cast_fp16*
transpose_x

matmul_98_transpose_x_0*
transpose_y

matmul_98_transpose_y_0+
matmul_98_cast_fp16


Ä
Ä(*)
name!

"
matmul_98_cast_fp16f
const
mul_56_y_0_to_fp16

*(
name 

"
mul_56_y_0_to_fp16*
val


:
 ºí
mul
x

matmul_98_cast_fp16
y

mul_56_y_0_to_fp16(
mul_56_cast_fp16


Ä
Ä(*&
name

"
mul_56_cast_fp16|
const#
reshape_100_shape_0


*)
name!

"
reshape_100_shape_0*#
val





Ä(Ä±
reshape
x

matmul_96_cast_fp16 
shape

reshape_100_shape_09
reshape_100_cast_fp16 


Ä
(
Ä
*+
name#

"
reshape_100_cast_fp16|
const#
reshape_101_shape_0


*)
name!

"
reshape_101_shape_0*#
val





Ä(ÄÆ
reshape
x

mul_56_cast_fp16 
shape

reshape_101_shape_09
reshape_101_cast_fp16 


Ä
(
Ä
*+
name#

"
reshape_101_cast_fp16É
const#
transpose_66_perm_0


*)
name!

"
transpose_66_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_67_perm_0


*)
name!

"
transpose_67_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_49_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_49_y_0_to_fp16*
val


:
®-≠
	transpose
x

reshape_100_cast_fp16
perm

transpose_66_perm_0:
transpose_66_cast_fp16 



(
Ä
Ä*#
name

"
transpose_156Œ
mul
x

transpose_66_cast_fp16*
y%
#
!_inversed_real_div_49_y_0_to_fp16C
_inversed_real_div_49_cast_fp16 



(
Ä
Ä*5
name-
%
#"!
_inversed_real_div_49_cast_fp16Ñ
const)
!_inversed_real_div_50_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_50_y_0_to_fp16*
val


:
®-≠
	transpose
x

reshape_101_cast_fp16
perm

transpose_67_perm_0:
transpose_67_cast_fp16 



(
Ä
Ä*#
name

"
transpose_155Œ
mul
x

transpose_67_cast_fp16*
y%
#
!_inversed_real_div_50_y_0_to_fp16C
_inversed_real_div_50_cast_fp16 



(
Ä
Ä*5
name-
%
#"!
_inversed_real_div_50_cast_fp16ß
const
range_1d_42


A*!
name

"
range_1d_42*^
valW


AG
EC
A 	
 !"#$%&'()*+,-./0123456789:;<=>?@j
const
gather_16_axis_0
*&
name

"
gather_16_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_16_batch_dims_0
*,
name$

"
gather_16_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_49_cast_fp16
indices

range_1d_42
axis

gather_16_axis_0(

batch_dims

gather_16_batch_dims_06
gather_16_cast_fp16



(
Ä
A*)
name!

"
gather_16_cast_fp16j
const
gather_17_axis_0
*&
name

"
gather_17_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_17_batch_dims_0
*,
name$

"
gather_17_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_50_cast_fp16
indices

range_1d_42
axis

gather_17_axis_0(

batch_dims

gather_17_batch_dims_06
gather_17_cast_fp16



(
Ä
A*)
name!

"
gather_17_cast_fp16É
const#
transpose_68_perm_0


*)
name!

"
transpose_68_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_69_perm_0


*)
name!

"
transpose_69_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ç
const#
reshape_102_shape_0


*)
name!

"
reshape_102_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ™
	transpose
x

gather_16_cast_fp16
perm

transpose_68_perm_09
transpose_68_cast_fp16


Ä
(

A*#
name

"
transpose_154®
reshape
x

transpose_68_cast_fp16 
shape

reshape_102_shape_0-
reshape_102_cast_fp16


Ä
®*+
name#

"
reshape_102_cast_fp16Ç
const#
reshape_103_shape_0


*)
name!

"
reshape_103_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ™
	transpose
x

gather_17_cast_fp16
perm

transpose_69_perm_09
transpose_69_cast_fp16


Ä
(

A*#
name

"
transpose_153®
reshape
x

transpose_69_cast_fp16 
shape

reshape_103_shape_0-
reshape_103_cast_fp16


Ä
®*+
name#

"
reshape_103_cast_fp16q
const 
matmul_101_transpose_x_0
*.
name&

"
matmul_101_transpose_x_0*
val


 q
const 
matmul_101_transpose_y_0
*.
name&

"
matmul_101_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_102_cast_fp16+
transpose_x

matmul_101_transpose_x_0+
transpose_y

matmul_101_transpose_y_0,
matmul_101_cast_fp16


Ä
®**
name"

"
matmul_101_cast_fp16q
const 
matmul_102_transpose_x_0
*.
name&

"
matmul_102_transpose_x_0*
val


 q
const 
matmul_102_transpose_y_0
*.
name&

"
matmul_102_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_103_cast_fp16+
transpose_x

matmul_102_transpose_x_0+
transpose_y

matmul_102_transpose_y_0,
matmul_102_cast_fp16


Ä
®**
name"

"
matmul_102_cast_fp16ï
add
x

matmul_101_cast_fp16
y

matmul_102_cast_fp16(
add_17_cast_fp16


Ä
®*&
name

"
add_17_cast_fp16q
const 
matmul_103_transpose_x_0
*.
name&

"
matmul_103_transpose_x_0*
val


 q
const 
matmul_103_transpose_y_0
*.
name&

"
matmul_103_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_102_cast_fp16+
transpose_x

matmul_103_transpose_x_0+
transpose_y

matmul_103_transpose_y_0,
matmul_103_cast_fp16


Ä
®**
name"

"
matmul_103_cast_fp16q
const 
matmul_104_transpose_x_0
*.
name&

"
matmul_104_transpose_x_0*
val


 q
const 
matmul_104_transpose_y_0
*.
name&

"
matmul_104_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_103_cast_fp16+
transpose_x

matmul_104_transpose_x_0+
transpose_y

matmul_104_transpose_y_0,
matmul_104_cast_fp16


Ä
®**
name"

"
matmul_104_cast_fp16ï
sub
x

matmul_103_cast_fp16
y

matmul_104_cast_fp16(
sub_17_cast_fp16


Ä
®*&
name

"
sub_17_cast_fp16f
const
mul_58_y_0_to_fp16

*(
name 

"
mul_58_y_0_to_fp16*
val


:
 ºè
mul
x

sub_17_cast_fp16
y

mul_58_y_0_to_fp16(
mul_58_cast_fp16


Ä
®*&
name

"
mul_58_cast_fp16{
const#
reshape_106_shape_0


*)
name!

"
reshape_106_shape_0*"
val



	
Ä(A≠
reshape
x

add_17_cast_fp16 
shape

reshape_106_shape_08
reshape_106_cast_fp16


Ä
(

A*+
name#

"
reshape_106_cast_fp16{
const#
reshape_107_shape_0


*)
name!

"
reshape_107_shape_0*"
val



	
Ä(A≠
reshape
x

mul_58_cast_fp16 
shape

reshape_107_shape_08
reshape_107_cast_fp16


Ä
(

A*+
name#

"
reshape_107_cast_fp16Ñ
const)
!_inversed_real_div_52_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_52_y_0_to_fp16*
val


:
®-Ã
mul
x

reshape_106_cast_fp16*
y%
#
!_inversed_real_div_52_y_0_to_fp16B
_inversed_real_div_52_cast_fp16


Ä
(

A*5
name-
%
#"!
_inversed_real_div_52_cast_fp16Ñ
const)
!_inversed_real_div_53_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_53_y_0_to_fp16*
val


:
®-Ã
mul
x

reshape_107_cast_fp16*
y%
#
!_inversed_real_div_53_y_0_to_fp16B
_inversed_real_div_53_cast_fp16


Ä
(

A*5
name-
%
#"!
_inversed_real_div_53_cast_fp16m
const
input_251_interleave_0
*,
name$

"
input_251_interleave_0*
val


 Q
const
const_94
*
name

"

const_94*
val


˝
concatP
valuesF
!
_inversed_real_div_52_cast_fp16
!
_inversed_real_div_53_cast_fp16
axis


const_94(

interleave

input_251_interleave_06
input_251_cast_fp16


Ä
P

A*)
name!

"
input_251_cast_fp16m
const
input_253_pad_type_0
**
name"

"
input_253_pad_type_0*
val

	"
validx
const#
input_253_strides_0


*)
name!

"
input_253_strides_0*
val




r
const
input_253_pad_0


*%
name

"
input_253_pad_0*!
val





    |
const%
input_253_dilations_0


*+
name#

"
input_253_dilations_0*
val




e
const
input_253_groups_0
*(
name 

"
input_253_groups_0*
val


Ö
const$
transpose_130_perm_0


**
name"

"
transpose_130_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ ”
constB
 decoder_2_1_ffn_0_weight_to_fp16


P
P

*6
name.
&
$""
 decoder_2_1_ffn_0_weight_to_fp16*N
valG


P
P

*%
@model_path/weights/weight.binÄÀç´
const.
decoder_2_1_ffn_0_bias_to_fp16



P*4
name,
$
"" 
decoder_2_1_ffn_0_bias_to_fp16*<
val5



P*%
@model_path/weights/weight.bin¿Øé¨
	transpose
x

input_251_cast_fp16 
perm

transpose_130_perm_0:
transpose_130_cast_fp16



P
Ä
A*#
name

"
transpose_152ó
conv 
x

transpose_130_cast_fp16.
weight$
"
 decoder_2_1_ffn_0_weight_to_fp16*
bias"
 
decoder_2_1_ffn_0_bias_to_fp16"
strides

input_253_strides_0$
pad_type

input_253_pad_type_0
pad

input_253_pad_0&
	dilations

input_253_dilations_0 
groups

input_253_groups_06
input_253_cast_fp16



P
Ä
A*)
name!

"
input_253_cast_fp16e
const
input_255_mode_0
*&
name

"
input_255_mode_0*
val

	"
EXACT•
gelu
x

input_253_cast_fp16
mode

input_255_mode_06
input_255_cast_fp16



P
Ä
A*)
name!

"
input_255_cast_fp16c
const
x_99_pad_type_0
*%
name

"
x_99_pad_type_0*
val

	"
validn
const
x_99_strides_0


*$
name

"
x_99_strides_0*
val




h
const

x_99_pad_0


* 
name

"

x_99_pad_0*!
val





    r
const 
x_99_dilations_0


*&
name

"
x_99_dilations_0*
val




[
const
x_99_groups_0
*#
name

"
x_99_groups_0*
val


”
constB
 decoder_2_1_ffn_2_weight_to_fp16


P
P

*6
name.
&
$""
 decoder_2_1_ffn_2_weight_to_fp16*N
valG


P
P

*%
@model_path/weights/weight.bin¿±é´
const.
decoder_2_1_ffn_2_bias_to_fp16



P*4
name,
$
"" 
decoder_2_1_ffn_2_bias_to_fp16*<
val5



P*%
@model_path/weights/weight.binÄñè
conv
x

input_255_cast_fp16.
weight$
"
 decoder_2_1_ffn_2_weight_to_fp16*
bias"
 
decoder_2_1_ffn_2_bias_to_fp16
strides

x_99_strides_0
pad_type

x_99_pad_type_0
pad


x_99_pad_0!
	dilations

x_99_dilations_0
groups

x_99_groups_01
x_99_cast_fp16



P
Ä
A*$
name

"
x_99_cast_fp16^
const
tile_4


*
name


"
tile_4*
val




((^
const
var_1676_axis_0
*$
name

"
op_1676_axis_0*
val


Û
split
x

x_99_cast_fp16
split_sizes


tile_4
axis

var_1676_axis_07
var_1676_cast_fp16_0



(
Ä
A7
var_1676_cast_fp16_1



(
Ä
A*'
name

"
op_1676_cast_fp16É
const#
transpose_72_perm_0


*)
name!

"
transpose_72_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_73_perm_0


*)
name!

"
transpose_73_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ç
const#
reshape_108_shape_0


*)
name!

"
reshape_108_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ´
	transpose
x

var_1676_cast_fp16_0
perm

transpose_72_perm_09
transpose_72_cast_fp16


Ä
(

A*#
name

"
transpose_151®
reshape
x

transpose_72_cast_fp16 
shape

reshape_108_shape_0-
reshape_108_cast_fp16


Ä
®*+
name#

"
reshape_108_cast_fp16Ç
const#
reshape_109_shape_0


*)
name!

"
reshape_109_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ´
	transpose
x

var_1676_cast_fp16_1
perm

transpose_73_perm_09
transpose_73_cast_fp16


Ä
(

A*#
name

"
transpose_150®
reshape
x

transpose_73_cast_fp16 
shape

reshape_109_shape_0-
reshape_109_cast_fp16


Ä
®*+
name#

"
reshape_109_cast_fp16q
const 
matmul_106_transpose_x_0
*.
name&

"
matmul_106_transpose_x_0*
val


 q
const 
matmul_106_transpose_y_0
*.
name&

"
matmul_106_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_108_cast_fp16+
transpose_x

matmul_106_transpose_x_0+
transpose_y

matmul_106_transpose_y_0,
matmul_106_cast_fp16


Ä
®**
name"

"
matmul_106_cast_fp16q
const 
matmul_107_transpose_x_0
*.
name&

"
matmul_107_transpose_x_0*
val


 q
const 
matmul_107_transpose_y_0
*.
name&

"
matmul_107_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_109_cast_fp16+
transpose_x

matmul_107_transpose_x_0+
transpose_y

matmul_107_transpose_y_0,
matmul_107_cast_fp16


Ä
®**
name"

"
matmul_107_cast_fp16ï
sub
x

matmul_106_cast_fp16
y

matmul_107_cast_fp16(
sub_18_cast_fp16


Ä
®*&
name

"
sub_18_cast_fp16q
const 
matmul_108_transpose_x_0
*.
name&

"
matmul_108_transpose_x_0*
val


 q
const 
matmul_108_transpose_y_0
*.
name&

"
matmul_108_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_108_cast_fp16+
transpose_x

matmul_108_transpose_x_0+
transpose_y

matmul_108_transpose_y_0,
matmul_108_cast_fp16


Ä
®**
name"

"
matmul_108_cast_fp16q
const 
matmul_109_transpose_x_0
*.
name&

"
matmul_109_transpose_x_0*
val


 q
const 
matmul_109_transpose_y_0
*.
name&

"
matmul_109_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_109_cast_fp16+
transpose_x

matmul_109_transpose_x_0+
transpose_y

matmul_109_transpose_y_0,
matmul_109_cast_fp16


Ä
®**
name"

"
matmul_109_cast_fp16ï
add
x

matmul_108_cast_fp16
y

matmul_109_cast_fp16(
add_18_cast_fp16


Ä
®*&
name

"
add_18_cast_fp16{
const#
reshape_112_shape_0


*)
name!

"
reshape_112_shape_0*"
val



	
Ä(A≠
reshape
x

sub_18_cast_fp16 
shape

reshape_112_shape_08
reshape_112_cast_fp16


Ä
(

A*+
name#

"
reshape_112_cast_fp16{
const#
reshape_113_shape_0


*)
name!

"
reshape_113_shape_0*"
val



	
Ä(A≠
reshape
x

add_18_cast_fp16 
shape

reshape_113_shape_08
reshape_113_cast_fp16


Ä
(

A*+
name#

"
reshape_113_cast_fp16É
const#
transpose_74_perm_0


*)
name!

"
transpose_74_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_75_perm_0


*)
name!

"
transpose_75_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_55_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_55_y_0_to_fp16*
val


:
®-¨
	transpose
x

reshape_112_cast_fp16
perm

transpose_74_perm_09
transpose_74_cast_fp16



(
Ä
A*#
name

"
transpose_149Õ
mul
x

transpose_74_cast_fp16*
y%
#
!_inversed_real_div_55_y_0_to_fp16B
_inversed_real_div_55_cast_fp16



(
Ä
A*5
name-
%
#"!
_inversed_real_div_55_cast_fp16Ñ
const)
!_inversed_real_div_56_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_56_y_0_to_fp16*
val


:
®-¨
	transpose
x

reshape_113_cast_fp16
perm

transpose_75_perm_09
transpose_75_cast_fp16



(
Ä
A*#
name

"
transpose_148Õ
mul
x

transpose_75_cast_fp16*
y%
#
!_inversed_real_div_56_y_0_to_fp16B
_inversed_real_div_56_cast_fp16



(
Ä
A*5
name-
%
#"!
_inversed_real_div_56_cast_fp16•
const
range_1d_47


?*!
name

"
range_1d_47*\
valU


?E
CA
??>=<;:9876543210/.-,+*)('&%$#"! 
	j
const
gather_18_axis_0
*&
name

"
gather_18_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_18_batch_dims_0
*,
name$

"
gather_18_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_55_cast_fp16
indices

range_1d_47
axis

gather_18_axis_0(

batch_dims

gather_18_batch_dims_06
gather_18_cast_fp16



(
Ä
?*)
name!

"
gather_18_cast_fp16j
const
gather_19_axis_0
*&
name

"
gather_19_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_19_batch_dims_0
*,
name$

"
gather_19_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_56_cast_fp16
indices

range_1d_47
axis

gather_19_axis_0(

batch_dims

gather_19_batch_dims_06
gather_19_cast_fp16



(
Ä
?*)
name!

"
gather_19_cast_fp16f
const
mul_60_y_0_to_fp16

*(
name 

"
mul_60_y_0_to_fp16*
val


:
 ºù
mul
x

gather_19_cast_fp16
y

mul_60_y_0_to_fp163
mul_60_cast_fp16



(
Ä
?*&
name

"
mul_60_cast_fp16h
const
concat_8_axis_0
*%
name

"
concat_8_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_8_interleave_0
*+
name#

"
concat_8_interleave_0*
val


 ˆ
concatD
values:
!
_inversed_real_div_55_cast_fp16

gather_18_cast_fp16
axis

concat_8_axis_0'

interleave

concat_8_interleave_06
concat_8_cast_fp16 



(
Ä
Ä*(
name 

"
concat_8_cast_fp16h
const
concat_9_axis_0
*%
name

"
concat_9_axis_0*
val



ˇˇˇˇˇˇˇˇˇk
const
concat_9_interleave_0
*+
name#

"
concat_9_interleave_0*
val


 Û
concatA
values7
!
_inversed_real_div_56_cast_fp16

mul_60_cast_fp16
axis

concat_9_axis_0'

interleave

concat_9_interleave_06
concat_9_cast_fp16 



(
Ä
Ä*(
name 

"
concat_9_cast_fp16É
const#
transpose_76_perm_0


*)
name!

"
transpose_76_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_77_perm_0


*)
name!

"
transpose_77_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ç
const#
reshape_114_shape_0


*)
name!

"
reshape_114_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ™
	transpose
x

concat_8_cast_fp16
perm

transpose_76_perm_0:
transpose_76_cast_fp16 


Ä
(
Ä
*#
name

"
transpose_147®
reshape
x

transpose_76_cast_fp16 
shape

reshape_114_shape_0-
reshape_114_cast_fp16


Ä
Ä(*+
name#

"
reshape_114_cast_fp16Ç
const#
reshape_115_shape_0


*)
name!

"
reshape_115_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ™
	transpose
x

concat_9_cast_fp16
perm

transpose_77_perm_0:
transpose_77_cast_fp16 


Ä
(
Ä
*#
name

"
transpose_146®
reshape
x

transpose_77_cast_fp16 
shape

reshape_115_shape_0-
reshape_115_cast_fp16


Ä
Ä(*+
name#

"
reshape_115_cast_fp16q
const 
matmul_111_transpose_x_0
*.
name&

"
matmul_111_transpose_x_0*
val


 q
const 
matmul_111_transpose_y_0
*.
name&

"
matmul_111_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_114_cast_fp16+
transpose_x

matmul_111_transpose_x_0+
transpose_y

matmul_111_transpose_y_0,
matmul_111_cast_fp16


Ä
Ä(**
name"

"
matmul_111_cast_fp16q
const 
matmul_112_transpose_x_0
*.
name&

"
matmul_112_transpose_x_0*
val


 q
const 
matmul_112_transpose_y_0
*.
name&

"
matmul_112_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_115_cast_fp16+
transpose_x

matmul_112_transpose_x_0+
transpose_y

matmul_112_transpose_y_0,
matmul_112_cast_fp16


Ä
Ä(**
name"

"
matmul_112_cast_fp16ï
sub
x

matmul_111_cast_fp16
y

matmul_112_cast_fp16(
sub_19_cast_fp16


Ä
Ä(*&
name

"
sub_19_cast_fp16|
const#
reshape_118_shape_0


*)
name!

"
reshape_118_shape_0*#
val





Ä(ÄÆ
reshape
x

sub_19_cast_fp16 
shape

reshape_118_shape_09
reshape_118_cast_fp16 


Ä
(
Ä
*+
name#

"
reshape_118_cast_fp16É
const#
transpose_78_perm_0


*)
name!

"
transpose_78_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_58_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_58_y_0_to_fp16*
val


:
®-≠
	transpose
x

reshape_118_cast_fp16
perm

transpose_78_perm_0:
transpose_78_cast_fp16 



(
Ä
Ä*#
name

"
transpose_145Œ
mul
x

transpose_78_cast_fp16*
y%
#
!_inversed_real_div_58_y_0_to_fp16C
_inversed_real_div_58_cast_fp16 



(
Ä
Ä*5
name-
%
#"!
_inversed_real_div_58_cast_fp16m
const
input_259_pad_type_0
**
name"

"
input_259_pad_type_0*
val

	"
validx
const#
input_259_strides_0


*)
name!

"
input_259_strides_0*
val




r
const
input_259_pad_0


*%
name

"
input_259_pad_0*!
val





    |
const%
input_259_dilations_0


*+
name#

"
input_259_dilations_0*
val




e
const
input_259_groups_0
*(
name 

"
input_259_groups_0*
val


”
constB
 decoder_2_1_conv2_weight_to_fp16


(
(

*6
name.
&
$""
 decoder_2_1_conv2_weight_to_fp16*N
valG


(
(

*%
@model_path/weights/weight.binÄòè´
const.
decoder_2_1_conv2_bias_to_fp16



(*4
name,
$
"" 
decoder_2_1_conv2_bias_to_fp16*<
val5



(*%
@model_path/weights/weight.bin¿±è†
conv(
x#
!
_inversed_real_div_58_cast_fp16.
weight$
"
 decoder_2_1_conv2_weight_to_fp16*
bias"
 
decoder_2_1_conv2_bias_to_fp16"
strides

input_259_strides_0$
pad_type

input_259_pad_type_0
pad

input_259_pad_0&
	dilations

input_259_dilations_0 
groups

input_259_groups_07
input_259_cast_fp16 



(
Ä
Ä*)
name!

"
input_259_cast_fp16e
const
x_101_pad_type_0
*&
name

"
x_101_pad_type_0*
val

	"
validp
const
x_101_strides_0


*%
name

"
x_101_strides_0*
val




j
const
x_101_pad_0


*!
name

"
x_101_pad_0*!
val





    t
const!
x_101_dilations_0


*'
name

"
x_101_dilations_0*
val




]
const
x_101_groups_0
*$
name

"
x_101_groups_0*
val


”
constB
 decoder_2_2_conv1_weight_to_fp16


(
(

*6
name.
&
$""
 decoder_2_2_conv1_weight_to_fp16*N
valG


(
(

*%
@model_path/weights/weight.binÄ≥è´
const.
decoder_2_2_conv1_bias_to_fp16



(*4
name,
$
"" 
decoder_2_2_conv1_bias_to_fp16*<
val5



(*%
@model_path/weights/weight.bin¿Ãè¯
conv
x

input_259_cast_fp16.
weight$
"
 decoder_2_2_conv1_weight_to_fp16*
bias"
 
decoder_2_2_conv1_bias_to_fp16
strides

x_101_strides_0 
pad_type

x_101_pad_type_0
pad

x_101_pad_0"
	dilations

x_101_dilations_0
groups

x_101_groups_03
x_101_cast_fp16 



(
Ä
Ä*%
name

"
x_101_cast_fp16É
const#
transpose_80_perm_0


*)
name!

"
transpose_80_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ç
const#
reshape_120_shape_0


*)
name!

"
reshape_120_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇß
	transpose
x

x_101_cast_fp16
perm

transpose_80_perm_0:
transpose_80_cast_fp16 


Ä
(
Ä
*#
name

"
transpose_144®
reshape
x

transpose_80_cast_fp16 
shape

reshape_120_shape_0-
reshape_120_cast_fp16


Ä
Ä(*+
name#

"
reshape_120_cast_fp16q
const 
matmul_116_transpose_x_0
*.
name&

"
matmul_116_transpose_x_0*
val


 q
const 
matmul_116_transpose_y_0
*.
name&

"
matmul_116_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_120_cast_fp16+
transpose_x

matmul_116_transpose_x_0+
transpose_y

matmul_116_transpose_y_0,
matmul_116_cast_fp16


Ä
Ä(**
name"

"
matmul_116_cast_fp16q
const 
matmul_118_transpose_x_0
*.
name&

"
matmul_118_transpose_x_0*
val


 q
const 
matmul_118_transpose_y_0
*.
name&

"
matmul_118_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_120_cast_fp16+
transpose_x

matmul_118_transpose_x_0+
transpose_y

matmul_118_transpose_y_0,
matmul_118_cast_fp16


Ä
Ä(**
name"

"
matmul_118_cast_fp16f
const
mul_63_y_0_to_fp16

*(
name 

"
mul_63_y_0_to_fp16*
val


:
 ºì
mul
x

matmul_118_cast_fp16
y

mul_63_y_0_to_fp16(
mul_63_cast_fp16


Ä
Ä(*&
name

"
mul_63_cast_fp16|
const#
reshape_124_shape_0


*)
name!

"
reshape_124_shape_0*#
val





Ä(Ä≤
reshape
x

matmul_116_cast_fp16 
shape

reshape_124_shape_09
reshape_124_cast_fp16 


Ä
(
Ä
*+
name#

"
reshape_124_cast_fp16|
const#
reshape_125_shape_0


*)
name!

"
reshape_125_shape_0*#
val





Ä(ÄÆ
reshape
x

mul_63_cast_fp16 
shape

reshape_125_shape_09
reshape_125_cast_fp16 


Ä
(
Ä
*+
name#

"
reshape_125_cast_fp16É
const#
transpose_82_perm_0


*)
name!

"
transpose_82_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_83_perm_0


*)
name!

"
transpose_83_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_61_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_61_y_0_to_fp16*
val


:
®-≠
	transpose
x

reshape_124_cast_fp16
perm

transpose_82_perm_0:
transpose_82_cast_fp16 



(
Ä
Ä*#
name

"
transpose_143Œ
mul
x

transpose_82_cast_fp16*
y%
#
!_inversed_real_div_61_y_0_to_fp16C
_inversed_real_div_61_cast_fp16 



(
Ä
Ä*5
name-
%
#"!
_inversed_real_div_61_cast_fp16Ñ
const)
!_inversed_real_div_62_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_62_y_0_to_fp16*
val


:
®-≠
	transpose
x

reshape_125_cast_fp16
perm

transpose_83_perm_0:
transpose_83_cast_fp16 



(
Ä
Ä*#
name

"
transpose_142Œ
mul
x

transpose_83_cast_fp16*
y%
#
!_inversed_real_div_62_y_0_to_fp16C
_inversed_real_div_62_cast_fp16 



(
Ä
Ä*5
name-
%
#"!
_inversed_real_div_62_cast_fp16ß
const
range_1d_52


A*!
name

"
range_1d_52*^
valW


AG
EC
A 	
 !"#$%&'()*+,-./0123456789:;<=>?@j
const
gather_20_axis_0
*&
name

"
gather_20_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_20_batch_dims_0
*,
name$

"
gather_20_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_61_cast_fp16
indices

range_1d_52
axis

gather_20_axis_0(

batch_dims

gather_20_batch_dims_06
gather_20_cast_fp16



(
Ä
A*)
name!

"
gather_20_cast_fp16j
const
gather_21_axis_0
*&
name

"
gather_21_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_21_batch_dims_0
*,
name$

"
gather_21_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_62_cast_fp16
indices

range_1d_52
axis

gather_21_axis_0(

batch_dims

gather_21_batch_dims_06
gather_21_cast_fp16



(
Ä
A*)
name!

"
gather_21_cast_fp16É
const#
transpose_84_perm_0


*)
name!

"
transpose_84_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_85_perm_0


*)
name!

"
transpose_85_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ç
const#
reshape_126_shape_0


*)
name!

"
reshape_126_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ™
	transpose
x

gather_20_cast_fp16
perm

transpose_84_perm_09
transpose_84_cast_fp16


Ä
(

A*#
name

"
transpose_141®
reshape
x

transpose_84_cast_fp16 
shape

reshape_126_shape_0-
reshape_126_cast_fp16


Ä
®*+
name#

"
reshape_126_cast_fp16Ç
const#
reshape_127_shape_0


*)
name!

"
reshape_127_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ™
	transpose
x

gather_21_cast_fp16
perm

transpose_85_perm_09
transpose_85_cast_fp16


Ä
(

A*#
name

"
transpose_140®
reshape
x

transpose_85_cast_fp16 
shape

reshape_127_shape_0-
reshape_127_cast_fp16


Ä
®*+
name#

"
reshape_127_cast_fp16q
const 
matmul_121_transpose_x_0
*.
name&

"
matmul_121_transpose_x_0*
val


 q
const 
matmul_121_transpose_y_0
*.
name&

"
matmul_121_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_126_cast_fp16+
transpose_x

matmul_121_transpose_x_0+
transpose_y

matmul_121_transpose_y_0,
matmul_121_cast_fp16


Ä
®**
name"

"
matmul_121_cast_fp16q
const 
matmul_122_transpose_x_0
*.
name&

"
matmul_122_transpose_x_0*
val


 q
const 
matmul_122_transpose_y_0
*.
name&

"
matmul_122_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_127_cast_fp16+
transpose_x

matmul_122_transpose_x_0+
transpose_y

matmul_122_transpose_y_0,
matmul_122_cast_fp16


Ä
®**
name"

"
matmul_122_cast_fp16ï
add
x

matmul_121_cast_fp16
y

matmul_122_cast_fp16(
add_21_cast_fp16


Ä
®*&
name

"
add_21_cast_fp16q
const 
matmul_123_transpose_x_0
*.
name&

"
matmul_123_transpose_x_0*
val


 q
const 
matmul_123_transpose_y_0
*.
name&

"
matmul_123_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_126_cast_fp16+
transpose_x

matmul_123_transpose_x_0+
transpose_y

matmul_123_transpose_y_0,
matmul_123_cast_fp16


Ä
®**
name"

"
matmul_123_cast_fp16q
const 
matmul_124_transpose_x_0
*.
name&

"
matmul_124_transpose_x_0*
val


 q
const 
matmul_124_transpose_y_0
*.
name&

"
matmul_124_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_127_cast_fp16+
transpose_x

matmul_124_transpose_x_0+
transpose_y

matmul_124_transpose_y_0,
matmul_124_cast_fp16


Ä
®**
name"

"
matmul_124_cast_fp16ï
sub
x

matmul_123_cast_fp16
y

matmul_124_cast_fp16(
sub_21_cast_fp16


Ä
®*&
name

"
sub_21_cast_fp16f
const
mul_65_y_0_to_fp16

*(
name 

"
mul_65_y_0_to_fp16*
val


:
 ºè
mul
x

sub_21_cast_fp16
y

mul_65_y_0_to_fp16(
mul_65_cast_fp16


Ä
®*&
name

"
mul_65_cast_fp16{
const#
reshape_130_shape_0


*)
name!

"
reshape_130_shape_0*"
val



	
Ä(A≠
reshape
x

add_21_cast_fp16 
shape

reshape_130_shape_08
reshape_130_cast_fp16


Ä
(

A*+
name#

"
reshape_130_cast_fp16{
const#
reshape_131_shape_0


*)
name!

"
reshape_131_shape_0*"
val



	
Ä(A≠
reshape
x

mul_65_cast_fp16 
shape

reshape_131_shape_08
reshape_131_cast_fp16


Ä
(

A*+
name#

"
reshape_131_cast_fp16Ñ
const)
!_inversed_real_div_64_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_64_y_0_to_fp16*
val


:
®-Ã
mul
x

reshape_130_cast_fp16*
y%
#
!_inversed_real_div_64_y_0_to_fp16B
_inversed_real_div_64_cast_fp16


Ä
(

A*5
name-
%
#"!
_inversed_real_div_64_cast_fp16Ñ
const)
!_inversed_real_div_65_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_65_y_0_to_fp16*
val


:
®-Ã
mul
x

reshape_131_cast_fp16*
y%
#
!_inversed_real_div_65_y_0_to_fp16B
_inversed_real_div_65_cast_fp16


Ä
(

A*5
name-
%
#"!
_inversed_real_div_65_cast_fp16m
const
input_261_interleave_0
*,
name$

"
input_261_interleave_0*
val


 Q
const
const_95
*
name

"

const_95*
val


˝
concatP
valuesF
!
_inversed_real_div_64_cast_fp16
!
_inversed_real_div_65_cast_fp16
axis


const_95(

interleave

input_261_interleave_06
input_261_cast_fp16


Ä
P

A*)
name!

"
input_261_cast_fp16m
const
input_263_pad_type_0
**
name"

"
input_263_pad_type_0*
val

	"
validx
const#
input_263_strides_0


*)
name!

"
input_263_strides_0*
val




r
const
input_263_pad_0


*%
name

"
input_263_pad_0*!
val





    |
const%
input_263_dilations_0


*+
name#

"
input_263_dilations_0*
val




e
const
input_263_groups_0
*(
name 

"
input_263_groups_0*
val


Ö
const$
transpose_131_perm_0


**
name"

"
transpose_131_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ ”
constB
 decoder_2_2_ffn_0_weight_to_fp16


P
P

*6
name.
&
$""
 decoder_2_2_ffn_0_weight_to_fp16*N
valG


P
P

*%
@model_path/weights/weight.binÄŒè´
const.
decoder_2_2_ffn_0_bias_to_fp16



P*4
name,
$
"" 
decoder_2_2_ffn_0_bias_to_fp16*<
val5



P*%
@model_path/weights/weight.bin¿≤ê¨
	transpose
x

input_261_cast_fp16 
perm

transpose_131_perm_0:
transpose_131_cast_fp16



P
Ä
A*#
name

"
transpose_139ó
conv 
x

transpose_131_cast_fp16.
weight$
"
 decoder_2_2_ffn_0_weight_to_fp16*
bias"
 
decoder_2_2_ffn_0_bias_to_fp16"
strides

input_263_strides_0$
pad_type

input_263_pad_type_0
pad

input_263_pad_0&
	dilations

input_263_dilations_0 
groups

input_263_groups_06
input_263_cast_fp16



P
Ä
A*)
name!

"
input_263_cast_fp16e
const
input_265_mode_0
*&
name

"
input_265_mode_0*
val

	"
EXACT•
gelu
x

input_263_cast_fp16
mode

input_265_mode_06
input_265_cast_fp16



P
Ä
A*)
name!

"
input_265_cast_fp16]
const
x_pad_type_0
*"
name

"
x_pad_type_0*
val

	"
validh
const
x_strides_0


*!
name

"
x_strides_0*
val




b
const
x_pad_0


*
name

"	
x_pad_0*!
val





    l
const
x_dilations_0


*#
name

"
x_dilations_0*
val




U
const

x_groups_0
* 
name

"

x_groups_0*
val


”
constB
 decoder_2_2_ffn_2_weight_to_fp16


P
P

*6
name.
&
$""
 decoder_2_2_ffn_2_weight_to_fp16*N
valG


P
P

*%
@model_path/weights/weight.bin¿¥ê´
const.
decoder_2_2_ffn_2_bias_to_fp16



P*4
name,
$
"" 
decoder_2_2_ffn_2_bias_to_fp16*<
val5



P*%
@model_path/weights/weight.binÄôë€
conv
x

input_265_cast_fp16.
weight$
"
 decoder_2_2_ffn_2_weight_to_fp16*
bias"
 
decoder_2_2_ffn_2_bias_to_fp16
strides

x_strides_0
pad_type

x_pad_type_0
pad
	
x_pad_0
	dilations

x_dilations_0
groups


x_groups_0.
x_cast_fp16



P
Ä
A*!
name

"
x_cast_fp16^
const
tile_5


*
name


"
tile_5*
val




((^
const
var_1722_axis_0
*$
name

"
op_1722_axis_0*
val



split
x

x_cast_fp16
split_sizes


tile_5
axis

var_1722_axis_07
var_1722_cast_fp16_0



(
Ä
A7
var_1722_cast_fp16_1



(
Ä
A*'
name

"
op_1722_cast_fp16É
const#
transpose_88_perm_0


*)
name!

"
transpose_88_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_89_perm_0


*)
name!

"
transpose_89_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ç
const#
reshape_132_shape_0


*)
name!

"
reshape_132_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ´
	transpose
x

var_1722_cast_fp16_0
perm

transpose_88_perm_09
transpose_88_cast_fp16


Ä
(

A*#
name

"
transpose_138®
reshape
x

transpose_88_cast_fp16 
shape

reshape_132_shape_0-
reshape_132_cast_fp16


Ä
®*+
name#

"
reshape_132_cast_fp16Ç
const#
reshape_133_shape_0


*)
name!

"
reshape_133_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ´
	transpose
x

var_1722_cast_fp16_1
perm

transpose_89_perm_09
transpose_89_cast_fp16


Ä
(

A*#
name

"
transpose_137®
reshape
x

transpose_89_cast_fp16 
shape

reshape_133_shape_0-
reshape_133_cast_fp16


Ä
®*+
name#

"
reshape_133_cast_fp16q
const 
matmul_126_transpose_x_0
*.
name&

"
matmul_126_transpose_x_0*
val


 q
const 
matmul_126_transpose_y_0
*.
name&

"
matmul_126_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_132_cast_fp16+
transpose_x

matmul_126_transpose_x_0+
transpose_y

matmul_126_transpose_y_0,
matmul_126_cast_fp16


Ä
®**
name"

"
matmul_126_cast_fp16q
const 
matmul_127_transpose_x_0
*.
name&

"
matmul_127_transpose_x_0*
val


 q
const 
matmul_127_transpose_y_0
*.
name&

"
matmul_127_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_133_cast_fp16+
transpose_x

matmul_127_transpose_x_0+
transpose_y

matmul_127_transpose_y_0,
matmul_127_cast_fp16


Ä
®**
name"

"
matmul_127_cast_fp16ï
sub
x

matmul_126_cast_fp16
y

matmul_127_cast_fp16(
sub_22_cast_fp16


Ä
®*&
name

"
sub_22_cast_fp16q
const 
matmul_128_transpose_x_0
*.
name&

"
matmul_128_transpose_x_0*
val


 q
const 
matmul_128_transpose_y_0
*.
name&

"
matmul_128_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_132_cast_fp16+
transpose_x

matmul_128_transpose_x_0+
transpose_y

matmul_128_transpose_y_0,
matmul_128_cast_fp16


Ä
®**
name"

"
matmul_128_cast_fp16q
const 
matmul_129_transpose_x_0
*.
name&

"
matmul_129_transpose_x_0*
val


 q
const 
matmul_129_transpose_y_0
*.
name&

"
matmul_129_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_133_cast_fp16+
transpose_x

matmul_129_transpose_x_0+
transpose_y

matmul_129_transpose_y_0,
matmul_129_cast_fp16


Ä
®**
name"

"
matmul_129_cast_fp16ï
add
x

matmul_128_cast_fp16
y

matmul_129_cast_fp16(
add_22_cast_fp16


Ä
®*&
name

"
add_22_cast_fp16{
const#
reshape_136_shape_0


*)
name!

"
reshape_136_shape_0*"
val



	
Ä(A≠
reshape
x

sub_22_cast_fp16 
shape

reshape_136_shape_08
reshape_136_cast_fp16


Ä
(

A*+
name#

"
reshape_136_cast_fp16{
const#
reshape_137_shape_0


*)
name!

"
reshape_137_shape_0*"
val



	
Ä(A≠
reshape
x

add_22_cast_fp16 
shape

reshape_137_shape_08
reshape_137_cast_fp16


Ä
(

A*+
name#

"
reshape_137_cast_fp16É
const#
transpose_90_perm_0


*)
name!

"
transpose_90_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ É
const#
transpose_91_perm_0


*)
name!

"
transpose_91_perm_0**
val#




˛ˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_67_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_67_y_0_to_fp16*
val


:
®-¨
	transpose
x

reshape_136_cast_fp16
perm

transpose_90_perm_09
transpose_90_cast_fp16



(
Ä
A*#
name

"
transpose_136Õ
mul
x

transpose_90_cast_fp16*
y%
#
!_inversed_real_div_67_y_0_to_fp16B
_inversed_real_div_67_cast_fp16



(
Ä
A*5
name-
%
#"!
_inversed_real_div_67_cast_fp16Ñ
const)
!_inversed_real_div_68_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_68_y_0_to_fp16*
val


:
®-¨
	transpose
x

reshape_137_cast_fp16
perm

transpose_91_perm_09
transpose_91_cast_fp16



(
Ä
A*#
name

"
transpose_135Õ
mul
x

transpose_91_cast_fp16*
y%
#
!_inversed_real_div_68_y_0_to_fp16B
_inversed_real_div_68_cast_fp16



(
Ä
A*5
name-
%
#"!
_inversed_real_div_68_cast_fp16•
const
range_1d_57


?*!
name

"
range_1d_57*\
valU


?E
CA
??>=<;:9876543210/.-,+*)('&%$#"! 
	j
const
gather_22_axis_0
*&
name

"
gather_22_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_22_batch_dims_0
*,
name$

"
gather_22_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_67_cast_fp16
indices

range_1d_57
axis

gather_22_axis_0(

batch_dims

gather_22_batch_dims_06
gather_22_cast_fp16



(
Ä
?*)
name!

"
gather_22_cast_fp16j
const
gather_23_axis_0
*&
name

"
gather_23_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
gather_23_batch_dims_0
*,
name$

"
gather_23_batch_dims_0*
val


 ˘
gather(
x#
!
_inversed_real_div_68_cast_fp16
indices

range_1d_57
axis

gather_23_axis_0(

batch_dims

gather_23_batch_dims_06
gather_23_cast_fp16



(
Ä
?*)
name!

"
gather_23_cast_fp16f
const
mul_67_y_0_to_fp16

*(
name 

"
mul_67_y_0_to_fp16*
val


:
 ºù
mul
x

gather_23_cast_fp16
y

mul_67_y_0_to_fp163
mul_67_cast_fp16



(
Ä
?*&
name

"
mul_67_cast_fp16j
const
concat_10_axis_0
*&
name

"
concat_10_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
concat_10_interleave_0
*,
name$

"
concat_10_interleave_0*
val


 ˙
concatD
values:
!
_inversed_real_div_67_cast_fp16

gather_22_cast_fp16
axis

concat_10_axis_0(

interleave

concat_10_interleave_07
concat_10_cast_fp16 



(
Ä
Ä*)
name!

"
concat_10_cast_fp16j
const
concat_11_axis_0
*&
name

"
concat_11_axis_0*
val



ˇˇˇˇˇˇˇˇˇm
const
concat_11_interleave_0
*,
name$

"
concat_11_interleave_0*
val


 ˜
concatA
values7
!
_inversed_real_div_68_cast_fp16

mul_67_cast_fp16
axis

concat_11_axis_0(

interleave

concat_11_interleave_07
concat_11_cast_fp16 



(
Ä
Ä*)
name!

"
concat_11_cast_fp16É
const#
transpose_92_perm_0


*)
name!

"
transpose_92_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ É
const#
transpose_93_perm_0


*)
name!

"
transpose_93_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ç
const#
reshape_138_shape_0


*)
name!

"
reshape_138_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ´
	transpose
x

concat_10_cast_fp16
perm

transpose_92_perm_0:
transpose_92_cast_fp16 


Ä
(
Ä
*#
name

"
transpose_134®
reshape
x

transpose_92_cast_fp16 
shape

reshape_138_shape_0-
reshape_138_cast_fp16


Ä
Ä(*+
name#

"
reshape_138_cast_fp16Ç
const#
reshape_139_shape_0


*)
name!

"
reshape_139_shape_0*)
val"




Äˇˇˇˇˇˇˇˇˇ´
	transpose
x

concat_11_cast_fp16
perm

transpose_93_perm_0:
transpose_93_cast_fp16 


Ä
(
Ä
*#
name

"
transpose_133®
reshape
x

transpose_93_cast_fp16 
shape

reshape_139_shape_0-
reshape_139_cast_fp16


Ä
Ä(*+
name#

"
reshape_139_cast_fp16q
const 
matmul_131_transpose_x_0
*.
name&

"
matmul_131_transpose_x_0*
val


 q
const 
matmul_131_transpose_y_0
*.
name&

"
matmul_131_transpose_y_0*
val


 ı
matmul
x

cos_16_to_fp16
y

reshape_138_cast_fp16+
transpose_x

matmul_131_transpose_x_0+
transpose_y

matmul_131_transpose_y_0,
matmul_131_cast_fp16


Ä
Ä(**
name"

"
matmul_131_cast_fp16q
const 
matmul_132_transpose_x_0
*.
name&

"
matmul_132_transpose_x_0*
val


 q
const 
matmul_132_transpose_y_0
*.
name&

"
matmul_132_transpose_y_0*
val


 ı
matmul
x

sin_16_to_fp16
y

reshape_139_cast_fp16+
transpose_x

matmul_132_transpose_x_0+
transpose_y

matmul_132_transpose_y_0,
matmul_132_cast_fp16


Ä
Ä(**
name"

"
matmul_132_cast_fp16ï
sub
x

matmul_131_cast_fp16
y

matmul_132_cast_fp16(
sub_23_cast_fp16


Ä
Ä(*&
name

"
sub_23_cast_fp16|
const#
reshape_142_shape_0


*)
name!

"
reshape_142_shape_0*#
val





Ä(ÄÆ
reshape
x

sub_23_cast_fp16 
shape

reshape_142_shape_09
reshape_142_cast_fp16 


Ä
(
Ä
*+
name#

"
reshape_142_cast_fp16É
const#
transpose_94_perm_0


*)
name!

"
transpose_94_perm_0**
val#




ˇˇˇˇˇˇˇˇˇ Ñ
const)
!_inversed_real_div_70_y_0_to_fp16

*7
name/
'
%"#
!_inversed_real_div_70_y_0_to_fp16*
val


:
®-≠
	transpose
x

reshape_142_cast_fp16
perm

transpose_94_perm_0:
transpose_94_cast_fp16 



(
Ä
Ä*#
name

"
transpose_132Œ
mul
x

transpose_94_cast_fp16*
y%
#
!_inversed_real_div_70_y_0_to_fp16C
_inversed_real_div_70_cast_fp16 



(
Ä
Ä*5
name-
%
#"!
_inversed_real_div_70_cast_fp16m
const
input_269_pad_type_0
**
name"

"
input_269_pad_type_0*
val

	"
validx
const#
input_269_strides_0


*)
name!

"
input_269_strides_0*
val




r
const
input_269_pad_0


*%
name

"
input_269_pad_0*!
val





    |
const%
input_269_dilations_0


*+
name#

"
input_269_dilations_0*
val




e
const
input_269_groups_0
*(
name 

"
input_269_groups_0*
val


”
constB
 decoder_2_2_conv2_weight_to_fp16


(
(

*6
name.
&
$""
 decoder_2_2_conv2_weight_to_fp16*N
valG


(
(

*%
@model_path/weights/weight.binÄõë´
const.
decoder_2_2_conv2_bias_to_fp16



(*4
name,
$
"" 
decoder_2_2_conv2_bias_to_fp16*<
val5



(*%
@model_path/weights/weight.bin¿¥ë†
conv(
x#
!
_inversed_real_div_70_cast_fp16.
weight$
"
 decoder_2_2_conv2_weight_to_fp16*
bias"
 
decoder_2_2_conv2_bias_to_fp16"
strides

input_269_strides_0$
pad_type

input_269_pad_type_0
pad

input_269_pad_0&
	dilations

input_269_dilations_0 
groups

input_269_groups_07
input_269_cast_fp16 



(
Ä
Ä*)
name!

"
input_269_cast_fp16Ç
const'
input_271_scale_factor_height_0
*5
name-
%
#"!
input_271_scale_factor_height_0*
val




   @Ä
const&
input_271_scale_factor_width_0
*4
name,
$
"" 
input_271_scale_factor_width_0*
val




   @ì
upsample_nearest_neighbor
x

input_269_cast_fp16:
scale_factor_height#
!
input_271_scale_factor_height_08
scale_factor_width"
 
input_271_scale_factor_width_07
input_271_cast_fp16 



(
Ä
Ä*)
name!

"
input_271_cast_fp16n
const
input_273_pad_type_0
**
name"

"
input_273_pad_type_0*
val


"
customr
const
input_273_pad_0


*%
name

"
input_273_pad_0*!
val





x
const#
input_273_strides_0


*)
name!

"
input_273_strides_0*
val




|
const%
input_273_dilations_0


*+
name#

"
input_273_dilations_0*
val




e
const
input_273_groups_0
*(
name 

"
input_273_groups_0*
val


Ω
const7
head_1_weight_to_fp16



(

*+
name#

"
head_1_weight_to_fp16*N
valG



(

*%
@model_path/weights/weight.binÄ∂ëï
const#
head_1_bias_to_fp16



*)
name!

"
head_1_bias_to_fp16*<
val5



*%
@model_path/weights/weight.binÄßí˛
conv
x

input_271_cast_fp16#
weight

head_1_weight_to_fp16
bias

head_1_bias_to_fp16"
strides

input_273_strides_0$
pad_type

input_273_pad_type_0
pad

input_273_pad_0&
	dilations

input_273_dilations_0 
groups

input_273_groups_07
input_273_cast_fp16 




Ä
Ä*)
name!

"
input_273_cast_fp16z
const#
input_scale_factor_height_0
*1
name)
!
"
input_scale_factor_height_0*
val




   @x
const"
input_scale_factor_width_0
*0
name(
 
"
input_scale_factor_width_0*
val




   @É
upsample_nearest_neighbor
x

input_273_cast_fp166
scale_factor_height

input_scale_factor_height_04
scale_factor_width

input_scale_factor_width_03
input_cast_fp16 




Ä
Ä*%
name

"
input_cast_fp16k
const
var_1760_pad_type_0
*(
name 

"
op_1760_pad_type_0*
val


"
customo
const
var_1760_pad_0


*#
name

"
op_1760_pad_0*!
val





u
const"
var_1760_strides_0


*'
name

"
op_1760_strides_0*
val




y
const$
var_1760_dilations_0


*)
name!

"
op_1760_dilations_0*
val




b
const
var_1760_groups_0
*&
name

"
op_1760_groups_0*
val


Ω
const7
head_3_weight_to_fp16





*+
name#

"
head_3_weight_to_fp16*N
valG





*%
@model_path/weights/weight.binÄ®í|
const#
head_3_bias_to_fp16



*)
name!

"
head_3_bias_to_fp16*#
val





:
7%X*√+Ú
conv
x

input_cast_fp16#
weight

head_3_weight_to_fp16
bias

head_3_bias_to_fp16!
strides

var_1760_strides_0#
pad_type

var_1760_pad_type_0
pad

var_1760_pad_0%
	dilations

var_1760_dilations_0
groups

var_1760_groups_06
var_1760_cast_fp16 




Ä
Ä*'
name

"
op_1760_cast_fp16á
const*
"var_1760_cast_fp16_to_fp32_dtype_0
*7
name/
'
%"#
!op_1760_cast_fp16_to_fp32_dtype_0*
val


"
fp32£
cast
x

var_1760_cast_fp16/
dtype&
$
"var_1760_cast_fp16_to_fp32_dtype_0-
	out_image 



Ä
Ä*
name

"

cast_108"Ò
	buildInfo„"


–"Õ
8
!

"
coremltools-version

	"
8.3.0
J
)
!
"
coremltools-component-torch

"
2.2.0a0+81ea7a4
E
(
 
"
coremltools-source-dialect

"
TorchScript